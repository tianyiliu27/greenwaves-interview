{
  "gvsoc": {
    "description": "GAP simulator.",
    "runner_module": "gv.chips.gap8",
    "cycles_to_seconds": "int(max(cycles * nb_cores / 5000000, 600))",
    "verbose": true,
    "debug-mode": false,
    "sa-mode": true,
    "proxy": {
      "enabled": false,
      "port": 42951
    },
    "launchers": {
      "default": "gvsoc_launcher",
      "debug": "gvsoc_launcher_debug"
    },
    "traces": {
      "level": "debug",
      "format": "long",
      "enabled": false,
      "include_regex": [],
      "exclude_regex": []
    },
    "events": {
      "enabled": false,
      "include_raw": [],
      "include_regex": [],
      "exclude_regex": [],
      "format": "fst",
      "active": false,
      "all": true,
      "gtkw": false,
      "gen_gtkw": true,
      "": false,
      "files": [],
      "traces": {},
      "tags": [
        "overview"
      ],
      "level": 0
    }
  },
  "rtl": {
    "description": "RTL simulator.",
    "runner_module": "runner.rtl.chips.gap8",
    "verbose": true,
    "simulator": "xcelium",
    "mode": "shell",
    "args": [],
    "svcf_file": [],
    "verbosity": -1,
    "testbench": {
      "uart": {
        "baudrate": 115200
      }
    },
    "vsim": {
      "profiles": {
        "rtl": {
          "commands": {
            "shell": {
              "executable": "vsim",
              "args_eval": [
                "\"-64\"",
                "\"-c\"",
                "\"-do 'source \" + os.environ.get(\"VSIM_PATH\") +  \"/tcl_files/config/run_and_exit.tcl'\"",
                "\"-do 'source \" + os.environ.get(\"VSIM_PATH\") +  \"/tcl_files/run.tcl; run_and_exit'\""
              ]
            },
            "gui": {
              "executable": "vsim",
              "args_eval": [
                "\"-64\"",
                "\"-do 'source \" + os.environ.get(\"VSIM_PATH\") +  \"/tcl_files/config/run_and_exit.tcl'\"",
                "\"-do 'source \" + os.environ.get(\"VSIM_PATH\") +  \"/tcl_files/run.tcl;'\""
              ]
            }
          }
        }
      }
    },
    "xcelium": {
      "profiles": {
        "rtl": {
          "commands": {
            "shell": {
              "executable": "xmsim",
              "args_eval": [
                "\"tb -64bit -licqueue -messages -xceligen seed_only_rand,process_alternate_rng,ignore_worklib_name -lps_real_nocorrupt -assert_logging_error_off\"",
                "\"+VSIM_PATH=\" + os.environ.get(\"XCSIM_PATH\") +  \" +UVM_TESTNAME=SoftTestOnly +phy_sel=dphy +lane=2lane +data_width=8bit\"",
                "\"+frame_mode=Gen -nowarn RNDXCELON -sv_lib\"",
                "os.environ.get(\"XCELIUM_ROOT\") + \"/tools/methodology/UVM/CDNS-1.2/additions/sv/lib/64bit/libuvmdpi.so\"",
                "\"-INPUT \\\"@source \" + os.environ.get(\"XCELIUM_ROOT\") + \"/tools/methodology/UVM/CDNS-1.2/additions/sv/files/tcl/uvm_sim.tcl\\\"\"",
                "\"-runmode -loadrun \" + os.environ.get(\"XCSIM_PATH\") + \"/xcelium.d/run.d/librunpost.so\"",
                "\"-input \" + os.environ.get(\"XCSIM_PATH\") + \"/tcl_files/run_and_exit.tcl\""
              ]
            },
            "gui": {
              "executable": "xmsim",
              "args_eval": [
                "\"tb -64bit -gui -licqueue -messages -xceligen seed_only_rand,process_alternate_rng,ignore_worklib_name -lps_real_nocorrupt -assert_logging_error_off\"",
                "\"+VSIM_PATH=\" + os.environ.get(\"XCSIM_PATH\") +  \" +UVM_TESTNAME=SoftTestOnly +phy_sel=dphy +lane=2lane +data_width=8bit\"",
                "\"+frame_mode=Gen -nowarn RNDXCELON -sv_lib\"",
                "os.environ.get(\"XCELIUM_ROOT\") + \"/tools/methodology/UVM/CDNS-1.2/additions/sv/lib/64bit/libuvmdpi.so\"",
                "\"-runmode -loadrun \" + os.environ.get(\"XCSIM_PATH\") + \"/xcelium.d/run.d/librunpost.so\"",
                "\"-INPUT \\\"@source \" + os.environ.get(\"XCELIUM_ROOT\") + \"/tools/methodology/UVM/CDNS-1.2/additions/sv/files/tcl/uvm_sim.tcl\\\"\"",
                "\"-input \" + os.environ.get(\"GAP_SDK_HOME\") + \"/utils/gapy/runner/rtl/run_gui.tcl\""
              ]
            }
          }
        }
      }
    }
  },
  "board": {
    "description": "Board",
    "runner_module": "runner.board.board_runner"
  },
  "fpga": {
    "description": "FPGA",
    "runner_module": "runner.board.board_runner"
  },
  "gapy": {
    "verbose": false,
    "work_dir": "/home/osboxes/test-C/greenwaves-interview/test/src/exo4/BUILD/GAP8_V3/GCC_RISCV_FREERTOS"
  },
  "openocd": {
    "remote": {
      "enabled": false,
      "ssh": null,
      "scp": null
    },
    "path": "gap8-openocd",
    "cable": "interface/ftdi/gapuino_ftdi.cfg",
    "script": "target/gap8revb.tcl"
  },
  "runner": {
    "flash_devices": [
      "target/board/devices/flash"
    ],
    "boot": {
      "mode": "flash",
      "device": "target/board/devices/flash"
    },
    "platform": "gvsoc",
    "wsl": null,
    "boot-loader": "/home/osboxes/test-C/greenwaves-interview/test/src/exo4/BUILD/GAP8_V3/GCC_RISCV_FREERTOS/test"
  },
  "vsim": {
    "path_envvar": "PULP_RTL_GAP8_REVC"
  },
  "target": {
    "pulp_compiler": "gcc",
    "pulp_rt_version": "bench",
    "pulp_omp_version": {
      "default": "libgomp",
      "libgomp": {},
      "new": {}
    },
    "testbench": {
      "use_dpi": false
    },
    "gdb": {
      "active": false
    },
    "loader": {
      "bridge": "none",
      "cable": "proxy",
      "binaries": [],
      "boot": {
        "mode": "rom"
      }
    },
    "platform": "gvsoc",
    "vp_comps": [
      "runner",
      "rt"
    ],
    "system_tree": {
      "vp_class": "pulp/system",
      "vp_component": "utils.composite_impl",
      "vp_comps": [
        "debug_bridge",
        "openocd",
        "board"
      ],
      "debug_bridge": {
        "cable": {
          "type": "ftdi@digilent",
          "tap": 0,
          "jtag-proxy": {
            "port": 37539
          },
          "ftdi": {},
          "active": false,
          "autorun": false,
          "access_timeout_us": 1000000,
          "system_reset_gpio": 4,
          "jtag_reset_gpio": 6,
          "reverse_reset": true,
          "vendor": "0x0403",
          "product": "0x6010"
        },
        "adv_dbg_unit": {
          "debug_ir": "0x4"
        },
        "boot-mode": "jtag",
        "commands": "reset stop load ioloop reqloop start wait",
        "gdb_commands": "reset stop load ioloop reqloop start gdb wait",
        "target_jtag_sync": true
      },
      "openocd": {
        "board": "target/gap8revb.tcl"
      },
      "board": {
        "vp_class": "pulp/board",
        "vp_component": "utils.composite_impl",
        "name": "gapuino",
        "vp_comps": [
          "chip",
          "dpi_clock",
          "pulp_chip",
          "dpi",
          "ref_clock_clock",
          "ref_clock",
          "flash",
          "flash_clock",
          "ram",
          "ram_clock"
        ],
        "tb_comps": [
          "uart",
          "jtag_proxy",
          "camera",
          "display"
        ],
        "vp_bindings": [
          [
            "chip->uart0",
            "dpi->uart0"
          ],
          [
            "chip->hyper0_cs1_data",
            "flash->input"
          ],
          [
            "chip->hyper0_cs1",
            "flash->cs"
          ],
          [
            "chip->hyper0_cs0_data",
            "ram->input"
          ],
          [
            "chip->hyper0_cs0",
            "ram->cs"
          ],
          [
            "chip->i2c1",
            "dpi->i2c1"
          ],
          [
            "chip->spim1_cs0_data",
            "dpi->spim1_cs0_data"
          ],
          [
            "chip->spim1_cs0",
            "dpi->spim1_cs0"
          ],
          [
            "chip->gpio19",
            "dpi->gpio19"
          ],
          [
            "dpi_clock->out",
            "dpi->clock"
          ],
          [
            "dpi->chip_reset",
            "chip->reset"
          ],
          [
            "dpi->jtag0",
            "chip->jtag0_pad"
          ],
          [
            "dpi->cpi0",
            "chip->cpi0_pad"
          ],
          [
            "ref_clock_clock->out",
            "ref_clock->clock"
          ],
          [
            "ref_clock_clock->out",
            "chip->ref_clock_engine"
          ],
          [
            "ref_clock->clock_sync",
            "chip->ref_clock"
          ],
          [
            "flash_clock->out",
            "flash->clock"
          ],
          [
            "ram_clock->out",
            "ram->clock"
          ]
        ],
        "tb_bindings": [
          [
            "chip->jtag0",
            "jtag_proxy->jtag"
          ],
          [
            "chip->uart0",
            "uart->uart"
          ],
          [
            "chip->ctrl",
            "jtag_proxy->ctrl"
          ],
          [
            "chip->i2c1",
            "camera->i2c"
          ],
          [
            "chip->spim1_cs0_data",
            "display->input"
          ],
          [
            "chip->gpio19",
            "display->gpio"
          ],
          [
            "camera->cpi",
            "chip->cpi0"
          ]
        ],
        "chip": {
          "name": "gap8_revc",
          "pulp_chip_family": "gap",
          "pulp_chip_version": 0,
          "boot_from_rom": false,
          "vp_class": "pulp/chip",
          "vp_component": "utils.composite_impl",
          "hal_files": [
            "hal/chips/gap/pulp.h",
            "hal/chips/gap/pulp.h",
            "hal/chips/gap/efuse.h"
          ],
          "archi_files": [
            "archi/chips/gap/pulp.h",
            "archi/chips/gap/memory_map.h",
            "archi/chips/gap/properties.h",
            "archi/chips/gap/apb_soc.h",
            "archi/chips/gap/padframe.h"
          ],
          "vp_comps": [
            "padframe",
            "soc_clock",
            "soc",
            "cluster",
            "cluster_clock",
            "rtc",
            "pmu"
          ],
          "vp_ports": [
            "ref_clock",
            "ref_clock_engine",
            "i2s0",
            "i2s1",
            "cpi0",
            "jtag0",
            "uart0",
            "ctrl",
            "jtag0_pad",
            "hyper0_cs1_data",
            "hyper0_cs1",
            "hyper0_cs0_data",
            "hyper0_cs0",
            "cpi0_pad",
            "i2c1",
            "spim1_cs0_data",
            "spim1_cs0",
            "gpio19",
            "spim0_cs0_data",
            "spim0_cs0",
            "spim0_cs1_data",
            "spim0_cs1",
            "spim1_cs1_data",
            "spim1_cs1",
            "i2c0",
            "gpio0",
            "gpio1",
            "gpio2",
            "gpio3",
            "gpio4",
            "gpio5",
            "gpio6",
            "gpio7",
            "gpio8",
            "gpio9",
            "gpio10",
            "gpio11",
            "gpio12",
            "gpio13",
            "gpio14",
            "gpio15",
            "gpio16",
            "gpio17",
            "gpio18",
            "gpio20",
            "gpio21",
            "gpio22",
            "gpio23",
            "gpio24",
            "gpio25",
            "gpio26",
            "gpio27",
            "gpio28",
            "gpio29",
            "gpio30",
            "gpio31",
            "reset"
          ],
          "vp_bindings": [
            [
              "self->ref_clock",
              "padframe->ref_clock_pad"
            ],
            [
              "self->ref_clock",
              "cluster->ref_clock"
            ],
            [
              "self->ref_clock",
              "rtc->ref_clock"
            ],
            [
              "self->ref_clock_engine",
              "pmu->ref_clock"
            ],
            [
              "self->i2s0",
              "padframe->i2s0_pad"
            ],
            [
              "self->i2s1",
              "padframe->i2s1_pad"
            ],
            [
              "self->cpi0",
              "padframe->cpi0_pad"
            ],
            [
              "self->jtag0",
              "padframe->jtag0_pad"
            ],
            [
              "self->jtag0_pad",
              "padframe->jtag0_pad"
            ],
            [
              "self->cpi0_pad",
              "padframe->cpi0_pad"
            ],
            [
              "padframe->ref_clock",
              "soc->ref_clock"
            ],
            [
              "padframe->spim0_cs0_data_pad",
              "self->spim0_cs0_data"
            ],
            [
              "padframe->spim0_cs0_pad",
              "self->spim0_cs0"
            ],
            [
              "padframe->spim0_cs1_data_pad",
              "self->spim0_cs1_data"
            ],
            [
              "padframe->spim0_cs1_pad",
              "self->spim0_cs1"
            ],
            [
              "padframe->spim1_cs0_data_pad",
              "self->spim1_cs0_data"
            ],
            [
              "padframe->spim1_cs0_pad",
              "self->spim1_cs0"
            ],
            [
              "padframe->spim1_cs1_data_pad",
              "self->spim1_cs1_data"
            ],
            [
              "padframe->spim1_cs1_pad",
              "self->spim1_cs1"
            ],
            [
              "padframe->uart0_pad",
              "self->uart0"
            ],
            [
              "padframe->uart0_pad",
              "self->uart0"
            ],
            [
              "padframe->i2c0_pad",
              "self->i2c0"
            ],
            [
              "padframe->i2c1_pad",
              "self->i2c1"
            ],
            [
              "padframe->i2s0",
              "soc->i2s0"
            ],
            [
              "padframe->i2s1",
              "soc->i2s1"
            ],
            [
              "padframe->cpi0",
              "soc->cpi0"
            ],
            [
              "padframe->jtag0",
              "soc->jtag0"
            ],
            [
              "padframe->hyper0_cs0_data_pad",
              "self->hyper0_cs0_data"
            ],
            [
              "padframe->hyper0_cs0_pad",
              "self->hyper0_cs0"
            ],
            [
              "padframe->hyper0_cs1_data_pad",
              "self->hyper0_cs1_data"
            ],
            [
              "padframe->hyper0_cs1_pad",
              "self->hyper0_cs1"
            ],
            [
              "padframe->gpio0_pad",
              "soc->gpio0"
            ],
            [
              "padframe->gpio0_pad",
              "self->gpio0"
            ],
            [
              "padframe->gpio1_pad",
              "soc->gpio1"
            ],
            [
              "padframe->gpio1_pad",
              "self->gpio1"
            ],
            [
              "padframe->gpio2_pad",
              "soc->gpio2"
            ],
            [
              "padframe->gpio2_pad",
              "self->gpio2"
            ],
            [
              "padframe->gpio3_pad",
              "soc->gpio3"
            ],
            [
              "padframe->gpio3_pad",
              "self->gpio3"
            ],
            [
              "padframe->gpio4_pad",
              "soc->gpio4"
            ],
            [
              "padframe->gpio4_pad",
              "self->gpio4"
            ],
            [
              "padframe->gpio5_pad",
              "soc->gpio5"
            ],
            [
              "padframe->gpio5_pad",
              "self->gpio5"
            ],
            [
              "padframe->gpio6_pad",
              "soc->gpio6"
            ],
            [
              "padframe->gpio6_pad",
              "self->gpio6"
            ],
            [
              "padframe->gpio7_pad",
              "soc->gpio7"
            ],
            [
              "padframe->gpio7_pad",
              "self->gpio7"
            ],
            [
              "padframe->gpio8_pad",
              "soc->gpio8"
            ],
            [
              "padframe->gpio8_pad",
              "self->gpio8"
            ],
            [
              "padframe->gpio9_pad",
              "soc->gpio9"
            ],
            [
              "padframe->gpio9_pad",
              "self->gpio9"
            ],
            [
              "padframe->gpio10_pad",
              "soc->gpio10"
            ],
            [
              "padframe->gpio10_pad",
              "self->gpio10"
            ],
            [
              "padframe->gpio11_pad",
              "soc->gpio11"
            ],
            [
              "padframe->gpio11_pad",
              "self->gpio11"
            ],
            [
              "padframe->gpio12_pad",
              "soc->gpio12"
            ],
            [
              "padframe->gpio12_pad",
              "self->gpio12"
            ],
            [
              "padframe->gpio13_pad",
              "soc->gpio13"
            ],
            [
              "padframe->gpio13_pad",
              "self->gpio13"
            ],
            [
              "padframe->gpio14_pad",
              "soc->gpio14"
            ],
            [
              "padframe->gpio14_pad",
              "self->gpio14"
            ],
            [
              "padframe->gpio15_pad",
              "soc->gpio15"
            ],
            [
              "padframe->gpio15_pad",
              "self->gpio15"
            ],
            [
              "padframe->gpio16_pad",
              "soc->gpio16"
            ],
            [
              "padframe->gpio16_pad",
              "self->gpio16"
            ],
            [
              "padframe->gpio17_pad",
              "soc->gpio17"
            ],
            [
              "padframe->gpio17_pad",
              "self->gpio17"
            ],
            [
              "padframe->gpio18_pad",
              "soc->gpio18"
            ],
            [
              "padframe->gpio18_pad",
              "self->gpio18"
            ],
            [
              "padframe->gpio19_pad",
              "soc->gpio19"
            ],
            [
              "padframe->gpio19_pad",
              "self->gpio19"
            ],
            [
              "padframe->gpio20_pad",
              "soc->gpio20"
            ],
            [
              "padframe->gpio20_pad",
              "self->gpio20"
            ],
            [
              "padframe->gpio21_pad",
              "soc->gpio21"
            ],
            [
              "padframe->gpio21_pad",
              "self->gpio21"
            ],
            [
              "padframe->gpio22_pad",
              "soc->gpio22"
            ],
            [
              "padframe->gpio22_pad",
              "self->gpio22"
            ],
            [
              "padframe->gpio23_pad",
              "soc->gpio23"
            ],
            [
              "padframe->gpio23_pad",
              "self->gpio23"
            ],
            [
              "padframe->gpio24_pad",
              "soc->gpio24"
            ],
            [
              "padframe->gpio24_pad",
              "self->gpio24"
            ],
            [
              "padframe->gpio25_pad",
              "soc->gpio25"
            ],
            [
              "padframe->gpio25_pad",
              "self->gpio25"
            ],
            [
              "padframe->gpio26_pad",
              "soc->gpio26"
            ],
            [
              "padframe->gpio26_pad",
              "self->gpio26"
            ],
            [
              "padframe->gpio27_pad",
              "soc->gpio27"
            ],
            [
              "padframe->gpio27_pad",
              "self->gpio27"
            ],
            [
              "padframe->gpio28_pad",
              "soc->gpio28"
            ],
            [
              "padframe->gpio28_pad",
              "self->gpio28"
            ],
            [
              "padframe->gpio29_pad",
              "soc->gpio29"
            ],
            [
              "padframe->gpio29_pad",
              "self->gpio29"
            ],
            [
              "padframe->gpio30_pad",
              "soc->gpio30"
            ],
            [
              "padframe->gpio30_pad",
              "self->gpio30"
            ],
            [
              "padframe->gpio31_pad",
              "soc->gpio31"
            ],
            [
              "padframe->gpio31_pad",
              "self->gpio31"
            ],
            [
              "soc_clock->out",
              "rtc->clock"
            ],
            [
              "soc_clock->out",
              "pmu->clock"
            ],
            [
              "soc_clock->out",
              "padframe->clock"
            ],
            [
              "soc_clock->out",
              "soc->clock"
            ],
            [
              "soc->cluster_reset",
              "cluster->reset"
            ],
            [
              "soc->cluster_fll",
              "cluster_clock->clock_in"
            ],
            [
              "soc->cluster_input",
              "cluster->input"
            ],
            [
              "soc->rtc_input",
              "rtc->input"
            ],
            [
              "soc->pmu_input",
              "pmu->input"
            ],
            [
              "soc->wakeup_out",
              "pmu->wakeup"
            ],
            [
              "soc->wakeup_seq",
              "pmu->wakeup_seq"
            ],
            [
              "soc->spim0",
              "padframe->spim0"
            ],
            [
              "soc->spim1",
              "padframe->spim1"
            ],
            [
              "soc->uart0",
              "padframe->uart0"
            ],
            [
              "soc->i2c0",
              "padframe->i2c0"
            ],
            [
              "soc->i2c1",
              "padframe->i2c1"
            ],
            [
              "soc->jtag0_out",
              "padframe->jtag0_out"
            ],
            [
              "soc->hyper0",
              "padframe->hyper0"
            ],
            [
              "soc->fll_soc_clock",
              "soc_clock->clock_in"
            ],
            [
              "cluster->dma_irq",
              "soc->dma_irq"
            ],
            [
              "cluster->soc",
              "soc->soc_input"
            ],
            [
              "cluster_clock->out",
              "cluster->clock"
            ],
            [
              "rtc->apb_irq",
              "soc->rtc_apb_irq"
            ],
            [
              "rtc->irq",
              "soc->wakeup_rtc"
            ],
            [
              "rtc->event",
              "soc->rtc_event_in"
            ],
            [
              "pmu->icu0_reset",
              "soc->reset"
            ],
            [
              "pmu->event",
              "soc->event"
            ]
          ],
          "padframe": {
            "nb_alternate": 4,
            "first_alternate": 8,
            "version": 1,
            "default_profile": "default",
            "vp_class": "pulp/padframe/padframe_v1",
            "vp_component": "pulp.padframe.padframe_v1_impl",
            "profiles": {
              "default": {
                "pad_rf_pactrl0": {
                  "alternate": "spim1_cs0"
                },
                "pad_rf_pactrl1": {
                  "alternate": "spim1_cs1"
                },
                "pad_rf_pactrl2": {
                  "alternate": "gpioA2"
                },
                "pad_rf_pactrl3": {
                  "alternate": "gpioA3"
                },
                "pad_rf_pactrl4": {
                  "alternate": "gpioA4"
                },
                "pad_rf_pactrl5": {
                  "alternate": "gpioA5"
                },
                "pad_timer0_ch0": {
                  "alternate": "gpioA17"
                },
                "pad_timer0_ch1": {
                  "alternate": "gpioA18"
                },
                "pad_timer0_ch2": {
                  "alternate": "gpioA19"
                },
                "pad_timer0_ch3": {
                  "alternate": "gpioA20"
                },
                "pad_spis0_csn": {
                  "alternate": "gpioA29"
                },
                "pad_spis0_miso": {
                  "alternate": "gpioA30"
                },
                "pad_spis0_mosi": {
                  "alternate": "gpioA31"
                }
              },
              "hyper": {
                "pad_rf_pactrl0": {
                  "alternate": "spim1_cs0"
                },
                "pad_rf_pactrl1": {
                  "alternate": "spim1_cs1"
                },
                "pad_rf_pactrl2": {
                  "alternate": "gpioA2"
                },
                "pad_rf_pactrl3": {
                  "alternate": "gpioA3"
                },
                "pad_rf_pactrl4": {
                  "alternate": "gpioA4"
                },
                "pad_rf_pactrl5": {
                  "alternate": "gpioA5"
                },
                "pad_timer0_ch0": {
                  "alternate": "gpioA17"
                },
                "pad_timer0_ch1": {
                  "alternate": "gpioA18"
                },
                "pad_timer0_ch2": {
                  "alternate": "gpioA19"
                },
                "pad_timer0_ch3": {
                  "alternate": "gpioA20"
                },
                "pad_i2s1_ws": {
                  "alternate": "hyper_ckn"
                },
                "pad_i2s1_sdi": {
                  "alternate": "hyper_ck"
                },
                "pad_spim0_sdio0 (mosi)": {
                  "alternate": "hyper_dq[0]"
                },
                "pad_spim0_sdio1 (miso)": {
                  "alternate": "hyper_dq[1]"
                },
                "pad_spim0_sdio2": {
                  "alternate": "hyper_dq[2]"
                },
                "pad_spim0_sdio3": {
                  "alternate": "hyper_dq[3]"
                },
                "pad_spim0_csn0": {
                  "alternate": "hyper_dq[4]"
                },
                "pad_spim0_csn1": {
                  "alternate": "hyper_dq[5]"
                },
                "pad_spim0_sck": {
                  "alternate": "hyper_dq[6]"
                },
                "pad_spis0_csn": {
                  "alternate": "hyper_dq[7]"
                },
                "pad_spis0_miso": {
                  "alternate": "hyper_csn0"
                },
                "pad_spis0_mosi": {
                  "alternate": "hyper_csn1"
                },
                "pad_spis0_sck": {
                  "alternate": "hyper_rwds"
                }
              }
            },
            "groups": {
              "rf": {},
              "spim0": {
                "type": "qspim",
                "nb_cs": 2,
                "is_master": true
              },
              "spim1": {
                "type": "qspim",
                "nb_cs": 2,
                "is_master": true
              },
              "uart0": {
                "type": "uart",
                "is_master": true
              },
              "i2c0": {
                "type": "i2c",
                "is_master": true
              },
              "i2c1": {
                "type": "i2c",
                "is_master": true
              },
              "i2s0": {
                "type": "i2s",
                "is_slave": true
              },
              "i2s1": {
                "type": "i2s",
                "is_slave": true
              },
              "spis": {},
              "cpi0": {
                "type": "cpi",
                "is_slave": true
              },
              "reset": {},
              "jtag0": {
                "type": "jtag",
                "is_slave": true,
                "is_dual": true
              },
              "hyper0": {
                "type": "hyper",
                "nb_cs": 2,
                "is_master": true
              },
              "timer0": {},
              "timer1": {},
              "timer2": {},
              "timer3": {},
              "xtal": {},
              "gpio0": {
                "type": "gpio",
                "is_master": true
              },
              "gpio1": {
                "type": "gpio",
                "is_master": true
              },
              "gpio2": {
                "type": "gpio",
                "is_master": true
              },
              "gpio3": {
                "type": "gpio",
                "is_master": true
              },
              "gpio4": {
                "type": "gpio",
                "is_master": true
              },
              "gpio5": {
                "type": "gpio",
                "is_master": true
              },
              "gpio6": {
                "type": "gpio",
                "is_master": true
              },
              "gpio7": {
                "type": "gpio",
                "is_master": true
              },
              "gpio8": {
                "type": "gpio",
                "is_master": true
              },
              "gpio9": {
                "type": "gpio",
                "is_master": true
              },
              "gpio10": {
                "type": "gpio",
                "is_master": true
              },
              "gpio11": {
                "type": "gpio",
                "is_master": true
              },
              "gpio12": {
                "type": "gpio",
                "is_master": true
              },
              "gpio13": {
                "type": "gpio",
                "is_master": true
              },
              "gpio14": {
                "type": "gpio",
                "is_master": true
              },
              "gpio15": {
                "type": "gpio",
                "is_master": true
              },
              "gpio16": {
                "type": "gpio",
                "is_master": true
              },
              "gpio17": {
                "type": "gpio",
                "is_master": true
              },
              "gpio18": {
                "type": "gpio",
                "is_master": true
              },
              "gpio19": {
                "type": "gpio",
                "is_master": true
              },
              "gpio20": {
                "type": "gpio",
                "is_master": true
              },
              "gpio21": {
                "type": "gpio",
                "is_master": true
              },
              "gpio22": {
                "type": "gpio",
                "is_master": true
              },
              "gpio23": {
                "type": "gpio",
                "is_master": true
              },
              "gpio24": {
                "type": "gpio",
                "is_master": true
              },
              "gpio25": {
                "type": "gpio",
                "is_master": true
              },
              "gpio26": {
                "type": "gpio",
                "is_master": true
              },
              "gpio27": {
                "type": "gpio",
                "is_master": true
              },
              "gpio28": {
                "type": "gpio",
                "is_master": true
              },
              "gpio29": {
                "type": "gpio",
                "is_master": true
              },
              "gpio30": {
                "type": "gpio",
                "is_master": true
              },
              "gpio31": {
                "type": "gpio",
                "is_master": true
              }
            },
            "pads": {
              "pad_rf_txd_p": {
                "id": 0,
                "position": "B20",
                "alternates": [
                  {
                    "name": "rf_txd_p",
                    "groups": [
                      "rf"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_rf_txd_n": {
                "id": 1,
                "position": "A22",
                "alternates": [
                  {
                    "name": "rf_txd_n",
                    "groups": [
                      "rf"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_rf_txclk_p": {
                "id": 2,
                "position": "B19",
                "alternates": [
                  {
                    "name": "rf_txclk_p",
                    "groups": [
                      "rf"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_rf_txclk_n": {
                "id": 3,
                "position": "A21",
                "alternates": [
                  {
                    "name": "rf_txclk_n",
                    "groups": [
                      "rf"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_rf_rxd_p": {
                "id": 4,
                "position": "A19",
                "alternates": [
                  {
                    "name": "rf_rxd_p",
                    "groups": [
                      "rf"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_rf_rxd_n": {
                "id": 5,
                "position": "B18",
                "alternates": [
                  {
                    "name": "rf_rxd_n",
                    "groups": [
                      "rf"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_rf_rxclk_p": {
                "id": 6,
                "position": "A18",
                "alternates": [
                  {
                    "name": "rf_rxclk_p",
                    "groups": [
                      "rf"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_rf_rxclk_n": {
                "id": 7,
                "position": "B17",
                "alternates": [
                  {
                    "name": "rf_rxclk_n",
                    "groups": [
                      "rf"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_rf_miso": {
                "id": 8,
                "position": "A4",
                "alternates": [
                  {
                    "name": "spim1_miso",
                    "groups": [
                      "spim1"
                    ]
                  },
                  {
                    "name": "gpioA0",
                    "groups": [
                      "gpio0"
                    ]
                  },
                  {},
                  {}
                ]
              },
              "pad_rf_mosi": {
                "id": 9,
                "position": "B3",
                "alternates": [
                  {
                    "name": "spim1_mosi",
                    "groups": [
                      "spim1"
                    ]
                  },
                  {
                    "name": "gpioA1",
                    "groups": [
                      "gpio1"
                    ]
                  },
                  {},
                  {}
                ]
              },
              "pad_rf_csn": {
                "id": 10,
                "position": "A5",
                "alternates": [
                  {
                    "name": "spim1_cs0",
                    "groups": [
                      "spim1"
                    ]
                  },
                  {
                    "name": "gpioA2",
                    "groups": [
                      "gpio2"
                    ]
                  },
                  {
                    "name": "i2c1_sda",
                    "groups": [
                      "i2c1"
                    ]
                  },
                  {}
                ]
              },
              "pad_rf_sck": {
                "id": 11,
                "position": "B4",
                "alternates": [
                  {
                    "name": "spim1_sck",
                    "groups": [
                      "spim1"
                    ]
                  },
                  {
                    "name": "gpioA3",
                    "groups": [
                      "gpio3"
                    ]
                  },
                  {
                    "name": "i2c1_scl",
                    "groups": [
                      "i2c1"
                    ]
                  },
                  {}
                ]
              },
              "pad_rf_pactrl0": {
                "id": 12,
                "position": "A3",
                "alternates": [
                  {
                    "name": "orca_txsync",
                    "groups": [
                      "orca"
                    ]
                  },
                  {
                    "name": "gpioA0",
                    "groups": [
                      "gpio0"
                    ]
                  },
                  {
                    "name": "spim1_cs0",
                    "groups": [
                      "spim1"
                    ]
                  },
                  {}
                ]
              },
              "pad_rf_pactrl1": {
                "id": 13,
                "position": "B2",
                "alternates": [
                  {
                    "name": "orca_rxsync",
                    "groups": [
                      "orca"
                    ]
                  },
                  {
                    "name": "gpioA1",
                    "groups": [
                      "gpio1"
                    ]
                  },
                  {
                    "name": "spim1_cs1",
                    "groups": [
                      "spim1"
                    ]
                  },
                  {}
                ]
              },
              "pad_rf_pactrl2": {
                "id": 14,
                "position": "A2",
                "alternates": [
                  {
                    "name": "orca_txi",
                    "groups": [
                      "orca"
                    ]
                  },
                  {
                    "name": "gpioA2",
                    "groups": [
                      "gpio2"
                    ]
                  },
                  {},
                  {}
                ]
              },
              "pad_rf_pactrl3": {
                "id": 15,
                "position": "B1",
                "alternates": [
                  {
                    "name": "orca_txq",
                    "groups": [
                      "orca"
                    ]
                  },
                  {
                    "name": "gpioA3",
                    "groups": [
                      "gpio3"
                    ]
                  },
                  {},
                  {}
                ]
              },
              "pad_rf_pactrl4": {
                "id": 16,
                "position": "A44",
                "alternates": [
                  {
                    "name": "orca_rxi",
                    "groups": [
                      "orca"
                    ]
                  },
                  {
                    "name": "gpioA4",
                    "groups": [
                      "gpio4"
                    ]
                  },
                  {
                    "name": "spis0_sdio0",
                    "groups": [
                      "spis"
                    ]
                  },
                  {
                    "name": "spis0_sdio2",
                    "groups": [
                      "spis"
                    ]
                  }
                ]
              },
              "pad_rf_pactrl5": {
                "id": 17,
                "position": "B40",
                "alternates": [
                  {
                    "name": "orca_rxq",
                    "groups": [
                      "orca"
                    ]
                  },
                  {
                    "name": "gpioA5",
                    "groups": [
                      "gpio5"
                    ]
                  },
                  {
                    "name": "spis0_sdio1",
                    "groups": [
                      "spis"
                    ]
                  },
                  {
                    "name": "spis0_sdio3",
                    "groups": [
                      "spis"
                    ]
                  }
                ]
              },
              "pad_cam_pclk": {
                "id": 18,
                "position": "A43",
                "alternates": [
                  {
                    "name": "cam_pclk",
                    "groups": [
                      "cpi0"
                    ]
                  },
                  {
                    "name": "gpioA4",
                    "groups": [
                      "gpio4"
                    ]
                  },
                  {
                    "name": "timer1_ch0",
                    "groups": [
                      "timer1"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_hsync": {
                "id": 19,
                "position": "A37",
                "alternates": [
                  {
                    "name": "cam_hsync",
                    "groups": [
                      "cpi0"
                    ]
                  },
                  {
                    "name": "gpioA5",
                    "groups": [
                      "gpio5"
                    ]
                  },
                  {
                    "name": "timer1_ch1",
                    "groups": [
                      "timer1"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_data0": {
                "id": 20,
                "position": "B39",
                "alternates": [
                  {
                    "name": "cam_data0",
                    "groups": [
                      "cpi0"
                    ]
                  },
                  {
                    "name": "gpioA6",
                    "groups": [
                      "gpio6"
                    ]
                  },
                  {
                    "name": "timer1_ch2",
                    "groups": [
                      "timer1"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_data1": {
                "id": 21,
                "position": "A42",
                "alternates": [
                  {
                    "name": "cam_data1",
                    "groups": [
                      "cpi0"
                    ]
                  },
                  {
                    "name": "gpioA7",
                    "groups": [
                      "gpio7"
                    ]
                  },
                  {
                    "name": "timer1_ch3",
                    "groups": [
                      "timer1"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_data2": {
                "id": 22,
                "position": "B38",
                "alternates": [
                  {
                    "name": "cam_data2",
                    "groups": [
                      "cpi0"
                    ]
                  },
                  {
                    "name": "gpioA8",
                    "groups": [
                      "gpio8"
                    ]
                  },
                  {
                    "name": "timer2_ch0",
                    "groups": [
                      "timer2"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_data3": {
                "id": 23,
                "position": "A41",
                "alternates": [
                  {
                    "name": "cam_data3",
                    "groups": [
                      "cpi0"
                    ]
                  },
                  {
                    "name": "gpioA9",
                    "groups": [
                      "gpio9"
                    ]
                  },
                  {
                    "name": "timer2_ch1",
                    "groups": [
                      "timer2"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_data4": {
                "id": 24,
                "position": "B37",
                "alternates": [
                  {
                    "name": "cam_data4",
                    "groups": [
                      "cpi0"
                    ]
                  },
                  {
                    "name": "gpioA10",
                    "groups": [
                      "gpio10"
                    ]
                  },
                  {
                    "name": "timer2_ch2",
                    "groups": [
                      "timer2"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_data5": {
                "id": 25,
                "position": "A40",
                "alternates": [
                  {
                    "name": "cam_data5",
                    "groups": [
                      "cpi0"
                    ]
                  },
                  {
                    "name": "gpioA11",
                    "groups": [
                      "gpio11"
                    ]
                  },
                  {
                    "name": "timer2_ch3",
                    "groups": [
                      "timer2"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_data6": {
                "id": 26,
                "position": "B36",
                "alternates": [
                  {
                    "name": "cam_data6",
                    "groups": [
                      "cpi0"
                    ]
                  },
                  {
                    "name": "gpioA12",
                    "groups": [
                      "gpio12"
                    ]
                  },
                  {
                    "name": "timer3_ch0",
                    "groups": [
                      "timer3"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_data7": {
                "id": 27,
                "position": "A38",
                "alternates": [
                  {
                    "name": "cam_data7",
                    "groups": [
                      "cpi0"
                    ]
                  },
                  {
                    "name": "gpioA13",
                    "groups": [
                      "gpio13"
                    ]
                  },
                  {
                    "name": "timer3_ch1",
                    "groups": [
                      "timer3"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_vsync": {
                "id": 28,
                "position": "A36",
                "alternates": [
                  {
                    "name": "cam_vsync",
                    "groups": [
                      "cpi0"
                    ]
                  },
                  {
                    "name": "gpioA14",
                    "groups": [
                      "gpio14"
                    ]
                  },
                  {
                    "name": "timer3_ch2",
                    "groups": [
                      "timer3"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_sda": {
                "id": 29,
                "position": "B34",
                "alternates": [
                  {
                    "name": "i2c1_sda",
                    "groups": [
                      "i2c1"
                    ]
                  },
                  {
                    "name": "gpioA15",
                    "groups": [
                      "gpio15"
                    ]
                  },
                  {
                    "name": "timer3_ch3",
                    "groups": [
                      "timer3"
                    ]
                  },
                  {}
                ]
              },
              "pad_cam_scl": {
                "id": 30,
                "position": "D1",
                "alternates": [
                  {
                    "name": "i2c1_scl",
                    "groups": [
                      "i2c1"
                    ]
                  },
                  {
                    "name": "gpioA16",
                    "groups": [
                      "gpio16"
                    ]
                  },
                  {
                    "name": "orca_clk",
                    "groups": [
                      "orca"
                    ]
                  },
                  {}
                ]
              },
              "pad_timer0_ch0": {
                "id": 31,
                "position": "B11",
                "alternates": [
                  {
                    "name": "timer0_ch0",
                    "groups": [
                      "timer0"
                    ]
                  },
                  {
                    "name": "gpioA17",
                    "groups": [
                      "gpio17"
                    ]
                  },
                  {},
                  {}
                ]
              },
              "pad_timer0_ch1": {
                "id": 32,
                "position": "A13",
                "alternates": [
                  {
                    "name": "timer0_ch1",
                    "groups": [
                      "timer0"
                    ]
                  },
                  {
                    "name": "gpioA18",
                    "groups": [
                      "gpio18"
                    ]
                  },
                  {
                    "name": "timer1_ch0",
                    "groups": [
                      "timer1"
                    ]
                  },
                  {}
                ]
              },
              "pad_timer0_ch2": {
                "id": 33,
                "position": "B12",
                "alternates": [
                  {
                    "name": "timer0_ch2",
                    "groups": [
                      "timer0"
                    ]
                  },
                  {
                    "name": "gpioA19",
                    "groups": [
                      "gpio19"
                    ]
                  },
                  {
                    "name": "timer2_ch0",
                    "groups": [
                      "timer2"
                    ]
                  },
                  {}
                ]
              },
              "pad_timer0_ch3": {
                "id": 34,
                "position": "A14",
                "alternates": [
                  {
                    "name": "timer0_ch3",
                    "groups": [
                      "timer0"
                    ]
                  },
                  {
                    "name": "gpioA20",
                    "groups": [
                      "gpio20"
                    ]
                  },
                  {
                    "name": "timer3_ch0",
                    "groups": [
                      "timer3"
                    ]
                  },
                  {}
                ]
              },
              "pad_i2s1_sck": {
                "id": 35,
                "position": "B13",
                "alternates": [
                  {
                    "name": "i2s1_sck",
                    "groups": [
                      "i2s1"
                    ]
                  },
                  {
                    "name": "gpioA21",
                    "groups": [
                      "gpio21"
                    ]
                  },
                  {
                    "name": "spis0_sck",
                    "groups": [
                      "spis"
                    ]
                  },
                  {
                    "name": "i2s1_sdi",
                    "groups": [
                      "i2s1"
                    ]
                  }
                ]
              },
              "pad_i2s1_ws": {
                "id": 36,
                "position": "A15",
                "alternates": [
                  {
                    "name": "i2s1_ws",
                    "groups": [
                      "i2s1"
                    ]
                  },
                  {
                    "name": "gpioA22",
                    "groups": [
                      "gpio22"
                    ]
                  },
                  {
                    "name": "spis0_cs",
                    "groups": [
                      "spis"
                    ]
                  },
                  {
                    "name": "hyper_ckn",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_i2s1_sdi": {
                "id": 37,
                "position": "B14",
                "alternates": [
                  {
                    "name": "i2s1_sdi",
                    "groups": [
                      "i2s1"
                    ]
                  },
                  {
                    "name": "gpioA23",
                    "groups": [
                      "gpio23"
                    ]
                  },
                  {
                    "name": "spis0_sdio2",
                    "groups": [
                      "spis0"
                    ]
                  },
                  {
                    "name": "hyper_ck",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_uart_rx": {
                "id": 38,
                "position": "B6",
                "alternates": [
                  {
                    "name": "uart_rx",
                    "groups": [
                      "uart0"
                    ]
                  },
                  {
                    "name": "gpioA24",
                    "groups": [
                      "gpio24"
                    ]
                  },
                  {},
                  {}
                ]
              },
              "pad_uart_tx": {
                "id": 39,
                "position": "A7",
                "alternates": [
                  {
                    "name": "uart_tx",
                    "groups": [
                      "uart0"
                    ]
                  },
                  {
                    "name": "gpioA25",
                    "groups": [
                      "gpio25"
                    ]
                  },
                  {},
                  {}
                ]
              },
              "pad_spim0_sdio0 (mosi)": {
                "id": 40,
                "position": "D2",
                "alternates": [
                  {
                    "name": "spim0_sdio0",
                    "groups": [
                      "spim0"
                    ]
                  },
                  {},
                  {},
                  {
                    "name": "hyper_dq[0]",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_spim0_sdio1 (miso)": {
                "id": 41,
                "position": "A11",
                "alternates": [
                  {
                    "name": "spim0_sdio1",
                    "groups": [
                      "spim0"
                    ]
                  },
                  {},
                  {},
                  {
                    "name": "hyper_dq[1]",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_spim0_sdio2": {
                "id": 42,
                "position": "B10",
                "alternates": [
                  {
                    "name": "spim0_sdio2",
                    "groups": [
                      "spim0"
                    ]
                  },
                  {
                    "name": "gpioA26",
                    "groups": [
                      "gpio26"
                    ]
                  },
                  {
                    "name": "i2c1_sda",
                    "groups": [
                      "i2c1"
                    ]
                  },
                  {
                    "name": "hyper_dq[2]",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_spim0_sdio3": {
                "id": 43,
                "position": "A10",
                "alternates": [
                  {
                    "name": "spim0_sdio3",
                    "groups": [
                      "spim0"
                    ]
                  },
                  {
                    "name": "gpioA27",
                    "groups": [
                      "gpio27"
                    ]
                  },
                  {
                    "name": "i2c1_scl",
                    "groups": [
                      "i2c1"
                    ]
                  },
                  {
                    "name": "hyper_dq[3]",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_spim0_csn0": {
                "id": 44,
                "position": "B8",
                "alternates": [
                  {
                    "name": "spim0_cs0",
                    "groups": [
                      "spim0"
                    ]
                  },
                  {},
                  {},
                  {
                    "name": "hyper_dq[4]",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_spim0_csn1": {
                "id": 45,
                "position": "A8",
                "alternates": [
                  {
                    "name": "spim0_cs1",
                    "groups": [
                      "spim0"
                    ]
                  },
                  {
                    "name": "gpioA28",
                    "groups": [
                      "gpio28"
                    ]
                  },
                  {
                    "name": "spis0_sdio3",
                    "groups": [
                      "spis"
                    ]
                  },
                  {
                    "name": "hyper_dq[5]",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_spim0_sck": {
                "id": 46,
                "position": "B7",
                "alternates": [
                  {
                    "name": "spim0_sck",
                    "groups": [
                      "spim0"
                    ]
                  },
                  {},
                  {},
                  {
                    "name": "hyper_dq[6]",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_spis0_csn": {
                "id": 47,
                "position": "A9",
                "alternates": [
                  {
                    "name": "spis0_cs",
                    "groups": [
                      "spis"
                    ]
                  },
                  {
                    "name": "gpioA29",
                    "groups": [
                      "gpio29"
                    ]
                  },
                  {
                    "name": "spim1_cs0",
                    "groups": [
                      "spim1"
                    ]
                  },
                  {
                    "name": "hyper_dq[7]",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_spis0_miso": {
                "id": 48,
                "position": "B15",
                "alternates": [
                  {
                    "name": "spis0_sdio0",
                    "groups": [
                      "spis"
                    ]
                  },
                  {
                    "name": "gpioA30",
                    "groups": [
                      "gpio30"
                    ]
                  },
                  {
                    "name": "spim1_cs1",
                    "groups": [
                      "spim1"
                    ]
                  },
                  {
                    "name": "hyper_csn0",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_spis0_mosi": {
                "id": 49,
                "position": "A16",
                "alternates": [
                  {
                    "name": "spis0_sdio1",
                    "groups": [
                      "spis"
                    ]
                  },
                  {
                    "name": "gpioA31",
                    "groups": [
                      "gpio31"
                    ]
                  },
                  {},
                  {
                    "name": "hyper_csn1",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_spis0_sck": {
                "id": 50,
                "position": "B9",
                "alternates": [
                  {
                    "name": "spis0_sck",
                    "groups": [
                      "spis"
                    ]
                  },
                  {},
                  {},
                  {
                    "name": "hyper_rwds",
                    "groups": [
                      "hyper"
                    ]
                  }
                ]
              },
              "pad_xtal_in": {
                "id": 51,
                "position": "A32",
                "alternates": [
                  {
                    "groups": [
                      "xtal"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_xtal_out": {
                "id": 52,
                "position": "B30",
                "alternates": [
                  {
                    "groups": [
                      "xtal"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_i2c0_sda": {
                "id": 53,
                "position": "B22",
                "alternates": [
                  {
                    "name": "i2c0_sda",
                    "groups": [
                      "i2c0"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_i2c0_scl": {
                "id": 54,
                "position": "A25",
                "alternates": [
                  {
                    "name": "i2c0_scl",
                    "groups": [
                      "i2c0"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_i2s0_sck": {
                "id": 55,
                "position": "A24",
                "alternates": [
                  {
                    "name": "i2s0_sck",
                    "groups": [
                      "i2s0"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_i2s0_ws": {
                "id": 56,
                "position": "A26",
                "alternates": [
                  {
                    "name": "i2s0_ws",
                    "groups": [
                      "i2s0"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_i2s0_sdi": {
                "id": 57,
                "position": "B23",
                "alternates": [
                  {
                    "name": "i2s0_sdi",
                    "groups": [
                      "i2s0"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_reset_n": {
                "id": 58,
                "position": "A23",
                "alternates": [
                  {
                    "name": "reset_n",
                    "groups": [
                      "reset"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_jtag_tck": {
                "id": 59,
                "position": "B25",
                "alternates": [
                  {
                    "name": "jtag_tck",
                    "groups": [
                      "jtag0"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_jtag_tdi": {
                "id": 60,
                "position": "A28",
                "alternates": [
                  {
                    "name": "jtag_tdi",
                    "groups": [
                      "jtag0"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_jtag_tdo": {
                "id": 61,
                "position": "B26",
                "alternates": [
                  {
                    "name": "jtag_tdo",
                    "groups": [
                      "jtag0"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_jtag_tms": {
                "id": 62,
                "position": "A29",
                "alternates": [
                  {
                    "name": "jtag_tms",
                    "groups": [
                      "jtag0"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              },
              "pad_jtag_trst": {
                "id": 63,
                "position": "B27",
                "alternates": [
                  {
                    "name": "jtag_trst",
                    "groups": [
                      "jtag0"
                    ]
                  },
                  {},
                  {},
                  {}
                ]
              }
            },
            "vp_ports": [
              "ref_clock",
              "spim0_cs0_data_pad",
              "spim0_cs0_pad",
              "spim0_cs1_data_pad",
              "spim0_cs1_pad",
              "spim1_cs0_data_pad",
              "spim1_cs0_pad",
              "spim1_cs1_data_pad",
              "spim1_cs1_pad",
              "uart0_pad",
              "i2c0_pad",
              "i2c1_pad",
              "i2s0",
              "i2s1",
              "cpi0",
              "jtag0",
              "hyper0_cs0_data_pad",
              "hyper0_cs0_pad",
              "hyper0_cs1_data_pad",
              "hyper0_cs1_pad",
              "gpio0_pad",
              "gpio1_pad",
              "gpio2_pad",
              "gpio3_pad",
              "gpio4_pad",
              "gpio5_pad",
              "gpio6_pad",
              "gpio7_pad",
              "gpio8_pad",
              "gpio9_pad",
              "gpio10_pad",
              "gpio11_pad",
              "gpio12_pad",
              "gpio13_pad",
              "gpio14_pad",
              "gpio15_pad",
              "gpio16_pad",
              "gpio17_pad",
              "gpio18_pad",
              "gpio19_pad",
              "gpio20_pad",
              "gpio21_pad",
              "gpio22_pad",
              "gpio23_pad",
              "gpio24_pad",
              "gpio25_pad",
              "gpio26_pad",
              "gpio27_pad",
              "gpio28_pad",
              "gpio29_pad",
              "gpio30_pad",
              "gpio31_pad",
              "ref_clock_pad",
              "clock",
              "spim0",
              "spim1",
              "uart0",
              "i2c0",
              "i2c1",
              "i2s0_pad",
              "i2s1_pad",
              "cpi0_pad",
              "jtag0_out",
              "jtag0_pad",
              "hyper0"
            ]
          },
          "soc_clock": {
            "vp_class": "vp/clock_domain",
            "vp_component": "vp.clock_domain_impl",
            "frequency": 50000000,
            "vp_ports": [
              "out",
              "clock_in"
            ]
          },
          "soc": {
            "nb_cluster": 1,
            "vp_class": "pulp/soc",
            "vp_component": "utils.composite_impl",
            "peripherals_base": "0x1A100000",
            "soc_events_ids": {
              "soc_evt_spim0_rx": 0,
              "soc_evt_spim0_tx": 1,
              "soc_evt_spim1_rx": 2,
              "soc_evt_spim1_tx": 3,
              "soc_evt_hyper0_rx": 4,
              "soc_evt_hyper0_tx": 5,
              "soc_evt_uart0_rx": 6,
              "soc_evt_uart0_tx": 7,
              "soc_evt_i2c0_rx": 8,
              "soc_evt_i2c0_tx": 9,
              "soc_evt_i2c1_rx": 10,
              "soc_evt_i2c1_tx": 11,
              "soc_evt_i2s_ch0": 12,
              "soc_evt_i2s_ch1": 13,
              "soc_evt_cam0": 14,
              "soc_evt_spim0_eot": 22,
              "soc_evt_l2l2_eot": 23,
              "soc_evt_uart_eot": 25,
              "soc_evt_i2c0_extra": 26,
              "soc_evt_i2c1_extra": 27,
              "soc_evt_i2s_extra": 28,
              "soc_evt_cam0_eot": 29,
              "soc_evt_cluster_pok": 31,
              "soc_evt_cluster_not_busy": 34,
              "soc_evt_cluster_cg_ok": 35,
              "soc_evt_picl_ok": 36,
              "soc_evt_scu_ok": 37,
              "soc_evt_adv_timer0": 38,
              "soc_evt_adv_timer1": 39,
              "soc_evt_adv_timer2": 40,
              "soc_evt_adv_timer3": 41,
              "soc_evt_gpio": 42,
              "soc_evt_rtc_apb": 43,
              "soc_evt_rtc": 44,
              "soc_evt_ref_clock": 56,
              "soc_evt_sw_first": 48,
              "soc_evt_sw_nb": 8,
              "soc_evt_pmu0": 31
            },
            "fc_events": {
              "evt_sw_event0": 0,
              "evt_sw_event2": 2,
              "evt_sw_event1": 1,
              "evt_sw_event3": 3,
              "evt_sw_event4": 4,
              "evt_sw_event5": 5,
              "evt_sw_event6": 6,
              "evt_sw_event7": 7,
              "evt_timer0": 10,
              "evt_timer1": 11,
              "evt_clkref": 14,
              "evt_adv_timer0": 17,
              "evt_adv_timer1": 18,
              "evt_adv_timer2": 19,
              "evt_adv_timer3": 20,
              "evt_cluster_not_busy": 21,
              "evt_cluster_pok": 22,
              "evt_cluster_cg_ok": 23,
              "evt_picl_ok": 24,
              "evt_scu_ok": 25,
              "evt_soc_evt": 26,
              "udma.hyper0_tx_irq": 29,
              "udma.hyper0_rx_irq": 30
            },
            "vp_comps": [
              "axi_ico",
              "soc_ico",
              "apb_ico",
              "fc_ico",
              "fc",
              "l2",
              "rom",
              "plt_loader",
              "fc_eu",
              "fll",
              "fll_cluster",
              "fll_ctrl",
              "apb_soc_ctrl",
              "stdout",
              "fc_tcdm",
              "gpio",
              "fc_icache_ctrl",
              "fc_icache",
              "timer",
              "soc_eu",
              "udma",
              "efuse",
              "uart",
              "fc_debug",
              "pulp_tap"
            ],
            "vp_ports": [
              "ref_clock",
              "gpio0",
              "gpio1",
              "gpio2",
              "gpio3",
              "gpio4",
              "gpio5",
              "gpio6",
              "gpio7",
              "gpio8",
              "gpio9",
              "gpio10",
              "gpio11",
              "gpio12",
              "gpio13",
              "gpio14",
              "gpio15",
              "gpio16",
              "gpio17",
              "gpio18",
              "gpio19",
              "gpio20",
              "gpio21",
              "gpio22",
              "gpio23",
              "gpio24",
              "gpio25",
              "gpio26",
              "gpio27",
              "gpio28",
              "gpio29",
              "gpio30",
              "gpio31",
              "event",
              "wakeup_rtc",
              "rtc_event_in",
              "dma_irq",
              "soc_input",
              "i2s0",
              "i2s1",
              "cpi0",
              "jtag0",
              "cluster_reset",
              "cluster_fll",
              "cluster_input",
              "rtc_input",
              "pmu_input",
              "wakeup_out",
              "wakeup_seq",
              "spim0",
              "spim1",
              "uart0",
              "i2c0",
              "i2c1",
              "jtag0_out",
              "hyper0",
              "fll_soc_clock",
              "tcdm0",
              "rtc_apb_irq",
              "reset",
              "clock"
            ],
            "vp_bindings": [
              [
                "self->ref_clock",
                "fll->ref_clock"
              ],
              [
                "self->ref_clock",
                "fll_cluster->ref_clock"
              ],
              [
                "self->ref_clock",
                "timer->ref_clock"
              ],
              [
                "self->ref_clock",
                "soc_eu->ref_clock"
              ],
              [
                "self->gpio0",
                "gpio->gpio0"
              ],
              [
                "self->gpio0",
                "apb_soc_ctrl->wakeup_gpio0"
              ],
              [
                "self->gpio1",
                "gpio->gpio1"
              ],
              [
                "self->gpio1",
                "apb_soc_ctrl->wakeup_gpio1"
              ],
              [
                "self->gpio2",
                "gpio->gpio2"
              ],
              [
                "self->gpio2",
                "apb_soc_ctrl->wakeup_gpio2"
              ],
              [
                "self->gpio3",
                "gpio->gpio3"
              ],
              [
                "self->gpio3",
                "apb_soc_ctrl->wakeup_gpio3"
              ],
              [
                "self->gpio4",
                "gpio->gpio4"
              ],
              [
                "self->gpio4",
                "apb_soc_ctrl->wakeup_gpio4"
              ],
              [
                "self->gpio5",
                "gpio->gpio5"
              ],
              [
                "self->gpio5",
                "apb_soc_ctrl->wakeup_gpio5"
              ],
              [
                "self->gpio6",
                "gpio->gpio6"
              ],
              [
                "self->gpio6",
                "apb_soc_ctrl->wakeup_gpio6"
              ],
              [
                "self->gpio7",
                "gpio->gpio7"
              ],
              [
                "self->gpio7",
                "apb_soc_ctrl->wakeup_gpio7"
              ],
              [
                "self->gpio8",
                "gpio->gpio8"
              ],
              [
                "self->gpio8",
                "apb_soc_ctrl->wakeup_gpio8"
              ],
              [
                "self->gpio9",
                "gpio->gpio9"
              ],
              [
                "self->gpio9",
                "apb_soc_ctrl->wakeup_gpio9"
              ],
              [
                "self->gpio10",
                "gpio->gpio10"
              ],
              [
                "self->gpio10",
                "apb_soc_ctrl->wakeup_gpio10"
              ],
              [
                "self->gpio11",
                "gpio->gpio11"
              ],
              [
                "self->gpio11",
                "apb_soc_ctrl->wakeup_gpio11"
              ],
              [
                "self->gpio12",
                "gpio->gpio12"
              ],
              [
                "self->gpio12",
                "apb_soc_ctrl->wakeup_gpio12"
              ],
              [
                "self->gpio13",
                "gpio->gpio13"
              ],
              [
                "self->gpio13",
                "apb_soc_ctrl->wakeup_gpio13"
              ],
              [
                "self->gpio14",
                "gpio->gpio14"
              ],
              [
                "self->gpio14",
                "apb_soc_ctrl->wakeup_gpio14"
              ],
              [
                "self->gpio15",
                "gpio->gpio15"
              ],
              [
                "self->gpio15",
                "apb_soc_ctrl->wakeup_gpio15"
              ],
              [
                "self->gpio16",
                "gpio->gpio16"
              ],
              [
                "self->gpio16",
                "apb_soc_ctrl->wakeup_gpio16"
              ],
              [
                "self->gpio17",
                "gpio->gpio17"
              ],
              [
                "self->gpio17",
                "apb_soc_ctrl->wakeup_gpio17"
              ],
              [
                "self->gpio18",
                "gpio->gpio18"
              ],
              [
                "self->gpio18",
                "apb_soc_ctrl->wakeup_gpio18"
              ],
              [
                "self->gpio19",
                "gpio->gpio19"
              ],
              [
                "self->gpio19",
                "apb_soc_ctrl->wakeup_gpio19"
              ],
              [
                "self->gpio20",
                "gpio->gpio20"
              ],
              [
                "self->gpio20",
                "apb_soc_ctrl->wakeup_gpio20"
              ],
              [
                "self->gpio21",
                "gpio->gpio21"
              ],
              [
                "self->gpio21",
                "apb_soc_ctrl->wakeup_gpio21"
              ],
              [
                "self->gpio22",
                "gpio->gpio22"
              ],
              [
                "self->gpio22",
                "apb_soc_ctrl->wakeup_gpio22"
              ],
              [
                "self->gpio23",
                "gpio->gpio23"
              ],
              [
                "self->gpio23",
                "apb_soc_ctrl->wakeup_gpio23"
              ],
              [
                "self->gpio24",
                "gpio->gpio24"
              ],
              [
                "self->gpio24",
                "apb_soc_ctrl->wakeup_gpio24"
              ],
              [
                "self->gpio25",
                "gpio->gpio25"
              ],
              [
                "self->gpio25",
                "apb_soc_ctrl->wakeup_gpio25"
              ],
              [
                "self->gpio26",
                "gpio->gpio26"
              ],
              [
                "self->gpio26",
                "apb_soc_ctrl->wakeup_gpio26"
              ],
              [
                "self->gpio27",
                "gpio->gpio27"
              ],
              [
                "self->gpio27",
                "apb_soc_ctrl->wakeup_gpio27"
              ],
              [
                "self->gpio28",
                "gpio->gpio28"
              ],
              [
                "self->gpio28",
                "apb_soc_ctrl->wakeup_gpio28"
              ],
              [
                "self->gpio29",
                "gpio->gpio29"
              ],
              [
                "self->gpio29",
                "apb_soc_ctrl->wakeup_gpio29"
              ],
              [
                "self->gpio30",
                "gpio->gpio30"
              ],
              [
                "self->gpio30",
                "apb_soc_ctrl->wakeup_gpio30"
              ],
              [
                "self->gpio31",
                "gpio->gpio31"
              ],
              [
                "self->gpio31",
                "apb_soc_ctrl->wakeup_gpio31"
              ],
              [
                "self->event",
                "soc_eu->event_in"
              ],
              [
                "self->wakeup_rtc",
                "apb_soc_ctrl->wakeup_rtc"
              ],
              [
                "self->rtc_event_in",
                "soc_eu->event_in"
              ],
              [
                "self->dma_irq",
                "fc_eu->in_event_8_pe_0"
              ],
              [
                "self->soc_input",
                "axi_ico->input"
              ],
              [
                "self->i2s0",
                "udma->i2s0"
              ],
              [
                "self->i2s1",
                "udma->i2s1"
              ],
              [
                "self->cpi0",
                "udma->cpi0"
              ],
              [
                "self->jtag0",
                "pulp_tap->jtag_in"
              ],
              [
                "axi_ico->cluster",
                "self->cluster_input"
              ],
              [
                "axi_ico->soc",
                "soc_ico->axi_slave"
              ],
              [
                "soc_ico->fc",
                "fc_ico->input"
              ],
              [
                "soc_ico->fc_alias",
                "fc_ico->input"
              ],
              [
                "soc_ico->apb",
                "apb_ico->input"
              ],
              [
                "soc_ico->axi_master",
                "axi_ico->input"
              ],
              [
                "soc_ico->l2",
                "l2->input"
              ],
              [
                "apb_ico->gpio",
                "gpio->input"
              ],
              [
                "apb_ico->stdout",
                "stdout->input"
              ],
              [
                "apb_ico->fll",
                "fll->input"
              ],
              [
                "apb_ico->fll_cluster",
                "fll_cluster->input"
              ],
              [
                "apb_ico->udma",
                "udma->input"
              ],
              [
                "apb_ico->soc_eu",
                "soc_eu->input"
              ],
              [
                "apb_ico->apb_soc_ctrl",
                "apb_soc_ctrl->input"
              ],
              [
                "apb_ico->rtc",
                "self->rtc_input"
              ],
              [
                "apb_ico->rom",
                "rom->input"
              ],
              [
                "apb_ico->pmu",
                "self->pmu_input"
              ],
              [
                "apb_ico->efuse",
                "efuse->input"
              ],
              [
                "fc_ico->fc_eu_alias",
                "fc_eu->demux_in_0"
              ],
              [
                "fc_ico->fc_eu",
                "fc_eu->input"
              ],
              [
                "fc_ico->fc_timer",
                "timer->input"
              ],
              [
                "fc_ico->fc_icache",
                "fc_icache_ctrl->input"
              ],
              [
                "fc_ico->fc_dbg_unit",
                "fc->dbg_unit"
              ],
              [
                "fc_ico->fc_tcdm",
                "fc_tcdm->input"
              ],
              [
                "fc->flush_cache_req",
                "fc_icache->flush"
              ],
              [
                "fc->fetch",
                "fc_icache->input_0"
              ],
              [
                "fc->data",
                "soc_ico->fc_data"
              ],
              [
                "fc->irq_ack",
                "fc_eu->irq_ack_0"
              ],
              [
                "plt_loader->out",
                "soc_ico->debug"
              ],
              [
                "fc_eu->irq_req_0",
                "fc->irq_req"
              ],
              [
                "fc_eu->clock_0",
                "fc->clock"
              ],
              [
                "fll->clock_out",
                "self->fll_soc_clock"
              ],
              [
                "fll_cluster->clock_out",
                "self->cluster_fll"
              ],
              [
                "apb_soc_ctrl->cluster_reset",
                "self->cluster_reset"
              ],
              [
                "apb_soc_ctrl->wakeup_out",
                "self->wakeup_out"
              ],
              [
                "apb_soc_ctrl->wakeup_seq",
                "self->wakeup_seq"
              ],
              [
                "apb_soc_ctrl->bootaddr",
                "fc->bootaddr"
              ],
              [
                "apb_soc_ctrl->event",
                "soc_eu->event_in"
              ],
              [
                "apb_soc_ctrl->cluster_power_irq",
                "fc_eu->in_event_22_pe_0"
              ],
              [
                "apb_soc_ctrl->cluster_clock_gate_irq",
                "fc_eu->in_event_23_pe_0"
              ],
              [
                "apb_soc_ctrl->confreg_soc",
                "pulp_tap->confreg_soc"
              ],
              [
                "gpio->event",
                "soc_eu->event_in"
              ],
              [
                "fc_icache_ctrl->enable",
                "fc_icache->enable"
              ],
              [
                "fc_icache_ctrl->flush",
                "fc_icache->flush"
              ],
              [
                "fc_icache_ctrl->flush",
                "fc->flush_cache"
              ],
              [
                "fc_icache_ctrl->flush_line",
                "fc_icache->flush_line"
              ],
              [
                "fc_icache_ctrl->flush_line_addr",
                "fc_icache->flush_line_addr"
              ],
              [
                "fc_icache->flush_ack",
                "fc->flush_cache_ack"
              ],
              [
                "fc_icache->refill",
                "soc_ico->fc_fetch"
              ],
              [
                "timer->irq_itf_0",
                "fc_eu->in_event_10_pe_0"
              ],
              [
                "timer->irq_itf_1",
                "fc_eu->in_event_11_pe_0"
              ],
              [
                "soc_eu->ref_clock_event",
                "fc_eu->in_event_14_pe_0"
              ],
              [
                "soc_eu->fc_event_itf",
                "fc_eu->soc_event"
              ],
              [
                "udma->l2_itf",
                "soc_ico->udma_tx"
              ],
              [
                "udma->event_itf",
                "soc_eu->event_in"
              ],
              [
                "udma->spim0",
                "self->spim0"
              ],
              [
                "udma->spim1",
                "self->spim1"
              ],
              [
                "udma->i2c0",
                "self->i2c0"
              ],
              [
                "udma->i2c1",
                "self->i2c1"
              ],
              [
                "udma->uart0",
                "self->uart0"
              ],
              [
                "udma->hyper0",
                "self->hyper0"
              ],
              [
                "udma->tcdm0",
                "self->tcdm0"
              ],
              [
                "udma->hyper0_tx_irq",
                "fc_eu->in_event_29_pe_0"
              ],
              [
                "udma->hyper0_rx_irq",
                "fc_eu->in_event_30_pe_0"
              ],
              [
                "pulp_tap->jtag_out",
                "self->jtag0_out"
              ],
              [
                "pulp_tap->io",
                "soc_ico->debug"
              ],
              [
                "pulp_tap->confreg_ext",
                "apb_soc_ctrl->confreg_ext"
              ]
            ],
            "axi_ico": {
              "vp_class": "interco/router",
              "vp_component": "interco.router_impl",
              "bandwidth": 4,
              "latency": 9,
              "id": 0,
              "mappings": {
                "soc": {
                  "base": "0x1A000000",
                  "size": "0x06000000"
                },
                "cluster": {
                  "base": "0x10000000",
                  "size": "0x400000"
                }
              },
              "vp_ports": [
                "cluster",
                "soc",
                "input"
              ]
            },
            "soc_ico": {
              "nb_l2_shared_banks": 4,
              "gv_class": "pulp.Soc_Ico_v2.Soc_Ico",
              "vp_class": null,
              "vp_component": "",
              "vp_comps": [
                "ll_ico",
                "hb_ico",
                "fc_fetch_ico",
                "fc_data_ico",
                "udma_rx_ico",
                "udma_tx_ico"
              ],
              "vp_ports": [
                "debug",
                "axi_slave",
                "fc_fetch",
                "fc_data",
                "udma_tx",
                "fc",
                "fc_alias",
                "apb",
                "axi_master",
                "l2",
                "l2_shared_0",
                "l2_shared_1",
                "l2_shared_2",
                "l2_shared_3"
              ],
              "vp_bindings": [
                [
                  "self->debug",
                  "ll_ico->input"
                ],
                [
                  "self->axi_slave",
                  "ll_ico->input"
                ],
                [
                  "self->fc_fetch",
                  "fc_fetch_ico->input"
                ],
                [
                  "self->fc_data",
                  "fc_data_ico->input"
                ],
                [
                  "self->udma_tx",
                  "udma_tx_ico->input"
                ],
                [
                  "ll_ico->apb",
                  "self->apb"
                ],
                [
                  "ll_ico->rom",
                  "self->apb"
                ],
                [
                  "ll_ico->l2",
                  "self->l2"
                ],
                [
                  "ll_ico->axi_master",
                  "self->axi_master"
                ],
                [
                  "ll_ico->fc_ico",
                  "self->fc"
                ],
                [
                  "ll_ico->fc_ico_alias",
                  "self->fc_alias"
                ],
                [
                  "hb_ico->out_0",
                  "self->l2_shared_0"
                ],
                [
                  "hb_ico->out_1",
                  "self->l2_shared_1"
                ],
                [
                  "hb_ico->out_2",
                  "self->l2_shared_2"
                ],
                [
                  "hb_ico->out_3",
                  "self->l2_shared_3"
                ],
                [
                  "fc_fetch_ico->l2_shared",
                  "hb_ico->input"
                ],
                [
                  "fc_fetch_ico->ll_ico",
                  "ll_ico->input"
                ],
                [
                  "fc_data_ico->l2_shared",
                  "hb_ico->input"
                ],
                [
                  "fc_data_ico->ll_ico",
                  "ll_ico->input"
                ],
                [
                  "udma_rx_ico->l2_shared",
                  "hb_ico->input"
                ],
                [
                  "udma_rx_ico->ll_ico",
                  "ll_ico->input"
                ],
                [
                  "udma_tx_ico->l2_shared",
                  "hb_ico->input"
                ],
                [
                  "udma_tx_ico->ll_ico",
                  "ll_ico->input"
                ]
              ],
              "ll_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "apb": {
                    "base": "0x1A100000",
                    "size": "0x00100000"
                  },
                  "rom": {
                    "base": "0x1A000000",
                    "size": "0x00002000"
                  },
                  "fc_ico": {
                    "base": "0x1B000000",
                    "size": "0x00400000"
                  },
                  "fc_ico_alias": {
                    "base": "0x00000000",
                    "size": "0x00400000",
                    "add_offset": 452984832
                  },
                  "axi_master": {
                    "base": "0x10000000",
                    "size": "0x400000"
                  },
                  "l2": {
                    "base": "0x1C000000",
                    "size": "0x00080000",
                    "remove_offset": "0x1C000000",
                    "latency": 8
                  }
                },
                "vp_ports": [
                  "apb",
                  "rom",
                  "l2",
                  "axi_master",
                  "fc_ico",
                  "fc_ico_alias",
                  "input"
                ]
              },
              "hb_ico": {
                "vp_class": "interco/interleaver",
                "vp_component": "interco.interleaver_impl",
                "nb_slaves": 4,
                "nb_masters": 0,
                "interleaving_bits": 2,
                "stage_bits": 0,
                "remove_offset": "0x1C000000",
                "vp_ports": [
                  "out_0",
                  "out_1",
                  "out_2",
                  "out_3",
                  "input"
                ]
              },
              "fc_fetch_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 5,
                "id": 0,
                "mappings": {
                  "l2_shared": {
                    "base": "0x1C000000",
                    "size": "0x00000000"
                  },
                  "ll_ico": {}
                },
                "vp_ports": [
                  "l2_shared",
                  "ll_ico",
                  "input"
                ]
              },
              "fc_data_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "l2_shared": {
                    "base": "0x1C000000",
                    "size": "0x00000000"
                  },
                  "ll_ico": {}
                },
                "vp_ports": [
                  "l2_shared",
                  "ll_ico",
                  "input"
                ]
              },
              "udma_rx_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "l2_shared": {
                    "base": "0x1C000000",
                    "size": "0x00000000"
                  },
                  "ll_ico": {}
                },
                "vp_ports": [
                  "l2_shared",
                  "ll_ico"
                ]
              },
              "udma_tx_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "l2_shared": {
                    "base": "0x1C000000",
                    "size": "0x00000000"
                  },
                  "ll_ico": {}
                },
                "vp_ports": [
                  "l2_shared",
                  "ll_ico",
                  "input"
                ]
              }
            },
            "apb_ico": {
              "vp_class": "interco/router",
              "vp_component": "interco.router_impl",
              "bandwidth": 4,
              "latency": 8,
              "id": 0,
              "mappings": {
                "stdout": {
                  "base": "0x1A110000",
                  "size": "0x00002000",
                  "remove_offset": "0x1A110000"
                },
                "apb_soc_ctrl": {
                  "base": "0x1A104000",
                  "size": "0x00001000",
                  "remove_offset": "0x1A104000"
                },
                "soc_eu": {
                  "base": "0x1A106000",
                  "size": "0x00001000",
                  "remove_offset": "0x1A106000"
                },
                "gpio": {
                  "base": "0x1A101000",
                  "size": "0x00001000",
                  "remove_offset": "0x1A101000"
                },
                "fll": {
                  "base": "0x1A100000",
                  "size": "0x00000010",
                  "remove_offset": "0x1A100000"
                },
                "fll_cluster": {
                  "base": "0x1A100010",
                  "size": "0x00000010",
                  "remove_offset": "0x1A100010"
                },
                "udma": {
                  "base": "0x1A102000",
                  "size": "0x00002000",
                  "remove_offset": "0x1A102000"
                },
                "efuse": {
                  "base": "0x1A109000",
                  "size": "0x00001000",
                  "remove_offset": "0x1A109000"
                },
                "pmu": {
                  "base": "0x1A107000",
                  "size": "0x00000800",
                  "remove_offset": "0x1A107000"
                },
                "rom": {
                  "base": "0x1A000000",
                  "size": "0x00002000",
                  "remove_offset": "0x1A000000"
                },
                "rtc": {
                  "base": "0x1A108000",
                  "size": "0x00001000",
                  "remove_offset": "0x1A108000"
                }
              },
              "vp_ports": [
                "gpio",
                "stdout",
                "fll",
                "fll_cluster",
                "udma",
                "soc_eu",
                "apb_soc_ctrl",
                "rtc",
                "rom",
                "pmu",
                "efuse",
                "input"
              ]
            },
            "fc_ico": {
              "vp_class": "interco/router",
              "vp_component": "interco.router_impl",
              "bandwidth": 4,
              "latency": 0,
              "id": 0,
              "mappings": {
                "fc_icache": {
                  "base": "0x1B201400",
                  "size": "0x00001400",
                  "remove_offset": "0x1B201400"
                },
                "fc_eu": {
                  "base": "0x1B200800",
                  "size": "0x00000800",
                  "remove_offset": "0x1B200800"
                },
                "fc_eu_alias": {
                  "base": "0x1B204000",
                  "size": "0x00001000",
                  "remove_offset": "0x1B204000"
                },
                "fc_debug": {
                  "base": "0x1B300000",
                  "size": "0x00008000",
                  "remove_offset": "0x1B300000"
                },
                "fc_timer": {
                  "base": "0x1B200400",
                  "size": "0x00001000",
                  "remove_offset": "0x1B200400"
                },
                "fc_dbg_unit": {
                  "base": "0x1B300000",
                  "size": "0x00008000",
                  "remove_offset": "0x1B300000"
                },
                "fc_tcdm": {
                  "base": "0x1B000000",
                  "size": "0x00010000",
                  "remove_offset": "0x1B000000"
                }
              },
              "vp_ports": [
                "fc_eu_alias",
                "fc_eu",
                "fc_timer",
                "fc_icache",
                "fc_dbg_unit",
                "fc_tcdm",
                "input"
              ]
            },
            "fc": {
              "vp_class": "cpu/iss/iss",
              "vp_component": "cpu/iss/iss_riscy",
              "bootaddr_offset": "0x80",
              "version": "ri5cyv2",
              "archi": "riscv",
              "implementation": "ri5cy",
              "gv_isa": [
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--itc-external-req",
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--gap8",
                "--itc-external-req"
              ],
              "march": "imcXgap8",
              "isa": "rv32imcXgap8",
              "priv_version": 1.9,
              "perf_counters": true,
              "features": [
                "misaligned",
                "perf"
              ],
              "hal_files": [
                "hal/riscv/riscv_v4.h",
                "hal/riscv/types.h"
              ],
              "archi_files": [
                "archi/riscv/priv_1_9.h",
                "archi/riscv/builtins_v2.h",
                "archi/riscv/builtins_v2_emu.h",
                "archi/riscv/pcer_v1.h"
              ],
              "defines": [
                "ARCHI_CORE_HAS_PULPV2",
                "CORE_PULP_BUILTINS",
                "ARCHI_CORE_HAS_PULPV2",
                "ARCHI_CORE_HAS_CPLX",
                "ARCHI_CORE_HAS_SECURITY"
              ],
              "fetch_enable": true,
              "boot_addr": "0x1A000000",
              "debug_binaries": [],
              "power_models": {
                "clock_gated": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.0000016"
                        }
                      }
                    }
                  }
                },
                "insn": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "pJ",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "2.4854524"
                        },
                        "1.1": {
                          "any": "1.2"
                        }
                      }
                    }
                  }
                },
                "leakage": {
                  "leakage": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.000030"
                        }
                      }
                    }
                  }
                }
              },
              "iss_class": "iss_riscy",
              "cluster_id": 32,
              "core_id": 0,
              "vp_ports": [
                "flush_cache_req",
                "fetch",
                "data",
                "irq_ack",
                "flush_cache",
                "flush_cache_ack",
                "dbg_unit",
                "bootaddr",
                "irq_req",
                "clock"
              ]
            },
            "l2": {
              "size": 524288,
              "map_base": "0x1C000000",
              "map_size": "0x00080000",
              "vp_class": "memory/memory",
              "vp_component": "memory.memory_impl",
              "vp_ports": [
                "input"
              ]
            },
            "rom": {
              "version": 2,
              "hal_files": [
                "hal/rom/rom_v2.h"
              ],
              "size": 8192,
              "map_base": "0x1A000000",
              "map_size": "0x00002000",
              "vp_class": "memory/memory",
              "vp_component": "memory.memory_impl",
              "stim_file": "/home/osboxes/test-C/greenwaves-interview/test/gap_sdk/install/workstation/python/pulp/chips/gap8_revc/rom.bin",
              "vp_ports": [
                "input"
              ]
            },
            "plt_loader": {
              "vp_class": "utils/loader",
              "vp_component": "utils.loader_impl",
              "binaries": [],
              "vp_ports": [
                "out"
              ]
            },
            "fc_eu": {
              "version": 3,
              "nb_core": 1,
              "vp_class": "pulp/event_unit/eu_v3",
              "vp_component": "pulp.event_unit.eu_v3_impl",
              "hal_files": [
                "hal/eu/eu_v3.h"
              ],
              "archi_files": [
                "archi/eu/eu_v3.h"
              ],
              "regmap": {
                "areas": {
                  "global": {
                    "cores": {
                      "offset": "0x0000",
                      "size": "0x0400",
                      "areas": {
                        "core": {
                          "offset": "0x0000",
                          "size": "0x0040",
                          "number": 16
                        }
                      }
                    },
                    "barriers": {
                      "offset": "0x0400",
                      "size": "0x0200",
                      "areas": {
                        "barrier": {
                          "offset": "0x0000",
                          "size": "0x0020",
                          "number": 16
                        }
                      }
                    },
                    "sw_events": {
                      "offset": "0x0600",
                      "size": "0x0100"
                    },
                    "soc_events": {
                      "offset": "0x0700",
                      "size": "0x0080"
                    },
                    "ext_events": {
                      "offset": "0x0780",
                      "size": "0x0080"
                    },
                    "mutex": {
                      "size": "0x0040"
                    },
                    "dispatch": {
                      "size": "0x0040"
                    }
                  },
                  "demux": {
                    "core": {
                      "offset": "0x0000",
                      "size": "0x0040"
                    },
                    "dispatch": {
                      "offset": "0x0080",
                      "size": "0x0040"
                    },
                    "mutex": {
                      "offset": "0x00C0",
                      "size": "0x0040"
                    },
                    "sw_events": {
                      "offset": "0x0100",
                      "size": "0x0100"
                    },
                    "barriers": {
                      "offset": "0x0200",
                      "size": "0x0200"
                    }
                  }
                },
                "registers": {
                  "mask": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x00",
                    "width": 32
                  },
                  "mask_and": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x04",
                    "width": 32
                  },
                  "mask_or": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x08",
                    "width": 32
                  },
                  "mask_irq": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x0C",
                    "width": 32
                  },
                  "mask_irq_and": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x10",
                    "width": 32
                  },
                  "mask_irq_or": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x14",
                    "width": 32
                  },
                  "status": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x18",
                    "width": 32
                  },
                  "buffer": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x1C",
                    "width": 32
                  },
                  "buffer_masked": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x20",
                    "width": 32
                  },
                  "buffer_irq_masked": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x24",
                    "width": 32
                  },
                  "buffer_clear": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x28",
                    "width": 32
                  },
                  "sw_events_mask": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x2C",
                    "width": 32
                  },
                  "sw_events_mask_and": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x30",
                    "width": 32
                  },
                  "sw_events_mask_or": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x34",
                    "width": 32
                  },
                  "event_wait": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x38",
                    "width": 32
                  },
                  "event_wait_clear": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x3C",
                    "width": 32
                  },
                  "trigg_sw_event": {
                    "areas": [
                      "demux/sw_events",
                      "global/sw_events"
                    ],
                    "offset": "0x00",
                    "width": 32,
                    "number": 16
                  },
                  "trigg_sw_event_wait": {
                    "areas": [
                      "demux/sw_events",
                      "global/sw_events"
                    ],
                    "offset": "0x40",
                    "width": 32,
                    "number": 16
                  },
                  "trigg_sw_event_wait_clear": {
                    "areas": [
                      "demux/sw_events",
                      "global/sw_events"
                    ],
                    "offset": "0x80",
                    "width": 32,
                    "number": 16
                  },
                  "soc_events_current_event": {
                    "areas": [
                      "global/soc_events"
                    ],
                    "offset": "0x00",
                    "width": 32,
                    "bitfield": {
                      "event_id": {
                        "bit": 0,
                        "width": 9
                      },
                      "valid": {
                        "bit": 31,
                        "width": 1
                      }
                    }
                  },
                  "barr_trigger_mask": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x00",
                    "width": 32
                  },
                  "barr_status": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x04",
                    "width": 32
                  },
                  "barr_status_summary": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x08",
                    "width": 32
                  },
                  "barr_target_mask": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x0C",
                    "width": 32
                  },
                  "barr_trigger": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x10",
                    "width": 32
                  },
                  "barr_trigger_self": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x14",
                    "width": 32
                  },
                  "barr_trigger_wait": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x18",
                    "width": 32
                  },
                  "barr_trigger_wait_clear": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x1C",
                    "width": 32
                  },
                  "dispatch_fifo_access": {
                    "areas": [
                      "demux/dispatch",
                      "global/dispatch"
                    ],
                    "offset": "0x00",
                    "width": 32
                  },
                  "dispatch_team_config": {
                    "areas": [
                      "demux/dispatch",
                      "global/dispatch"
                    ],
                    "offset": "0x04",
                    "width": 32
                  }
                }
              },
              "properties": {
                "dispatch": {
                  "size": 8
                },
                "mutex": {
                  "nb_mutexes": 1
                },
                "barriers": {
                  "nb_barriers": 8
                },
                "soc_event": {
                  "nb_fifo_events": 8,
                  "fifo_event": 27
                },
                "events": {
                  "barrier": 16,
                  "mutex": 17,
                  "dispatch": 18
                }
              },
              "vp_ports": [
                "irq_req_0",
                "clock_0",
                "in_event_14_pe_0",
                "demux_in_0",
                "input",
                "in_event_22_pe_0",
                "in_event_23_pe_0",
                "irq_ack_0",
                "in_event_8_pe_0",
                "in_event_10_pe_0",
                "in_event_11_pe_0",
                "soc_event",
                "in_event_29_pe_0",
                "in_event_30_pe_0"
              ]
            },
            "fll": {
              "version": 1,
              "vp_class": "pulp/fll/fll_v1",
              "vp_component": "pulp.fll.fll_v1_impl",
              "hal_files": [
                "hal/fll/fll_v1.h"
              ],
              "archi_files": [
                "archi/fll/fll_v1.h"
              ],
              "regmap": {
                "status": {
                  "desc": "Return the current status of the FLL",
                  "type": "register",
                  "offset": "0x00",
                  "width": 32,
                  "reset": "0x00000000",
                  "content": {
                    "actual_mult": {
                      "bit": 0,
                      "width": 16,
                      "access": "R/W",
                      "name": "Actual multiplication factor.",
                      "desc": "Returns the current multiplication factor (i.e., current frequency), which is measured out of the DCO at each clock ref cycle."
                    }
                  }
                },
                "conf1": {
                  "desc": "Configuration register I",
                  "type": "register",
                  "offset": "0x00",
                  "width": 32,
                  "reset": "0x454C05F5",
                  "content": {
                    "mult_factor": {
                      "bit": 0,
                      "width": 16,
                      "access": "R/W",
                      "name": "Target clock multiplication factor for normal mode.",
                      "desc": "When using normal mode, this sets the target multiplication factor, i.e. the one that the feedback will try to reach by tuning the DCO input code."
                    },
                    "dco_input": {
                      "bit": 16,
                      "width": 10,
                      "access": "R/W",
                      "name": "DCO input code for stand-alone mode.",
                      "desc": "When using the stand-alone mode, this sets the DCO input code, i.e. this sets the output frequency of the DCO. See the transfer function to get more details about the relationship between output frequency and DCO input code."
                    },
                    "div": {
                      "bit": 26,
                      "width": 4,
                      "access": "R/W",
                      "name": "FLL output clock divider setting.",
                      "desc": "This sets the divider between the FLL output frequency and the DCO output frequency. 0 means no division."
                    },
                    "lock_en": {
                      "bit": 30,
                      "width": 1,
                      "access": "R/W",
                      "name": "FLL output gated by LOCK signal (active high)",
                      "desc": "When active, the FLL is producing the output clock signal only if the produced frequency is within the lock tolerance."
                    },
                    "mode": {
                      "bit": 31,
                      "width": 1,
                      "access": "R/W",
                      "name": "Operation mode select (0=stand-alone, 1=normal).",
                      "desc": "The normal mode is using a feedback loop to reach the requested frequency while the stand-alone mode is directly using the output of the DCO to get a frequency proportional to the given DCO input code."
                    }
                  }
                },
                "conf2": {
                  "desc": "Configuration register II",
                  "type": "register",
                  "offset": "0x00",
                  "width": 32,
                  "reset": "0x02004109",
                  "content": {
                    "gain": {
                      "bit": 0,
                      "width": 4,
                      "access": "R/W",
                      "name": "FLL loop gain setting (default: 2^-8 = 1/256).",
                      "desc": "When using normal mode, this defines the gain applied to the difference between the specified multiplication factor and the actual one, before it is provided to the loop filter."
                    },
                    "deassert_cycles": {
                      "bit": 4,
                      "width": 6,
                      "access": "R/W",
                      "name": "De-assert cycles",
                      "desc": "In normal mode, this gives the number of unstable ref-clock cycles (i.e. out of the tolerance) until the lock is de-asserted. In stand-alone mode, this gives the lower 6-bit of the LOCK assert counter target, after which the FLL starts producing a clock."
                    },
                    "assert_cycles": {
                      "bit": 10,
                      "width": 6,
                      "access": "R/W",
                      "name": "Assert cycles",
                      "desc": "In normal mode, this gives the number of stable ref-clock cycles (i.e. within the tolerance) after which the lock is asserted. In stand-alone mode, this gives the upper 6-bit of LOCK assert counter target, after which the FLL starts producing a clock."
                    },
                    "tolerance": {
                      "bit": 16,
                      "width": 12,
                      "access": "R/W",
                      "name": "Lock tolerance",
                      "desc": "this gives the margin around the target multiplication factor within which the output clock is considered stable."
                    },
                    "reserved0": {
                      "bit": 28,
                      "width": 1,
                      "access": "R/W"
                    },
                    "sta_clock": {
                      "bit": 29,
                      "width": 1,
                      "access": "R/W",
                      "name": "Config clock select in STA mode (0=DCOCLK, 1=REFCLK).",
                      "desc": "In stand-alone mode, this specifies the clock driving the configuration registers (either ref-clock or DCO clock)."
                    },
                    "open_lock": {
                      "bit": 30,
                      "width": 1,
                      "access": "R/W",
                      "name": "Open-loop-when-locked (active high).",
                      "desc": "This switched to open loop mode when the output frequency is within the tolerance."
                    },
                    "dithering": {
                      "bit": 31,
                      "width": 1,
                      "access": "R/W",
                      "name": "Dithering enable (active high).",
                      "desc": "Applies dither filter to the DCO input code to get one moe bit and improve the precision using noise generation."
                    }
                  }
                },
                "integrator": {
                  "name": "Integrator register",
                  "type": "register",
                  "offset": "0x00",
                  "width": 32,
                  "reset": "0x00000000",
                  "content": {
                    "state_fract": {
                      "bit": 6,
                      "width": 10,
                      "access": "R/W",
                      "name": "Integrator state: fractional part (dither unit input)",
                      "desc": "This gives the fractional part of the integrator unit output used to compute the DCO input code. This corresponds to the input given to the dither unit."
                    },
                    "state_int": {
                      "bit": 16,
                      "width": 10,
                      "access": "R/W",
                      "name": "Integrator state: integer part (DCO input bits)",
                      "desc": "This gives the integer part of the integrator unit output used to compute the DCO input code. This corresponds to the DCO input code before it is rounded with the dither unit output."
                    }
                  }
                }
              },
              "vp_ports": [
                "clock_out",
                "ref_clock",
                "input"
              ]
            },
            "fll_cluster": {
              "version": 1,
              "vp_class": "pulp/fll/fll_v1",
              "vp_component": "pulp.fll.fll_v1_impl",
              "hal_files": [
                "hal/fll/fll_v1.h"
              ],
              "archi_files": [
                "archi/fll/fll_v1.h"
              ],
              "regmap": {
                "status": {
                  "desc": "Return the current status of the FLL",
                  "type": "register",
                  "offset": "0x00",
                  "width": 32,
                  "reset": "0x00000000",
                  "content": {
                    "actual_mult": {
                      "bit": 0,
                      "width": 16,
                      "access": "R/W",
                      "name": "Actual multiplication factor.",
                      "desc": "Returns the current multiplication factor (i.e., current frequency), which is measured out of the DCO at each clock ref cycle."
                    }
                  }
                },
                "conf1": {
                  "desc": "Configuration register I",
                  "type": "register",
                  "offset": "0x00",
                  "width": 32,
                  "reset": "0x454C05F5",
                  "content": {
                    "mult_factor": {
                      "bit": 0,
                      "width": 16,
                      "access": "R/W",
                      "name": "Target clock multiplication factor for normal mode.",
                      "desc": "When using normal mode, this sets the target multiplication factor, i.e. the one that the feedback will try to reach by tuning the DCO input code."
                    },
                    "dco_input": {
                      "bit": 16,
                      "width": 10,
                      "access": "R/W",
                      "name": "DCO input code for stand-alone mode.",
                      "desc": "When using the stand-alone mode, this sets the DCO input code, i.e. this sets the output frequency of the DCO. See the transfer function to get more details about the relationship between output frequency and DCO input code."
                    },
                    "div": {
                      "bit": 26,
                      "width": 4,
                      "access": "R/W",
                      "name": "FLL output clock divider setting.",
                      "desc": "This sets the divider between the FLL output frequency and the DCO output frequency. 0 means no division."
                    },
                    "lock_en": {
                      "bit": 30,
                      "width": 1,
                      "access": "R/W",
                      "name": "FLL output gated by LOCK signal (active high)",
                      "desc": "When active, the FLL is producing the output clock signal only if the produced frequency is within the lock tolerance."
                    },
                    "mode": {
                      "bit": 31,
                      "width": 1,
                      "access": "R/W",
                      "name": "Operation mode select (0=stand-alone, 1=normal).",
                      "desc": "The normal mode is using a feedback loop to reach the requested frequency while the stand-alone mode is directly using the output of the DCO to get a frequency proportional to the given DCO input code."
                    }
                  }
                },
                "conf2": {
                  "desc": "Configuration register II",
                  "type": "register",
                  "offset": "0x00",
                  "width": 32,
                  "reset": "0x02004109",
                  "content": {
                    "gain": {
                      "bit": 0,
                      "width": 4,
                      "access": "R/W",
                      "name": "FLL loop gain setting (default: 2^-8 = 1/256).",
                      "desc": "When using normal mode, this defines the gain applied to the difference between the specified multiplication factor and the actual one, before it is provided to the loop filter."
                    },
                    "deassert_cycles": {
                      "bit": 4,
                      "width": 6,
                      "access": "R/W",
                      "name": "De-assert cycles",
                      "desc": "In normal mode, this gives the number of unstable ref-clock cycles (i.e. out of the tolerance) until the lock is de-asserted. In stand-alone mode, this gives the lower 6-bit of the LOCK assert counter target, after which the FLL starts producing a clock."
                    },
                    "assert_cycles": {
                      "bit": 10,
                      "width": 6,
                      "access": "R/W",
                      "name": "Assert cycles",
                      "desc": "In normal mode, this gives the number of stable ref-clock cycles (i.e. within the tolerance) after which the lock is asserted. In stand-alone mode, this gives the upper 6-bit of LOCK assert counter target, after which the FLL starts producing a clock."
                    },
                    "tolerance": {
                      "bit": 16,
                      "width": 12,
                      "access": "R/W",
                      "name": "Lock tolerance",
                      "desc": "this gives the margin around the target multiplication factor within which the output clock is considered stable."
                    },
                    "reserved0": {
                      "bit": 28,
                      "width": 1,
                      "access": "R/W"
                    },
                    "sta_clock": {
                      "bit": 29,
                      "width": 1,
                      "access": "R/W",
                      "name": "Config clock select in STA mode (0=DCOCLK, 1=REFCLK).",
                      "desc": "In stand-alone mode, this specifies the clock driving the configuration registers (either ref-clock or DCO clock)."
                    },
                    "open_lock": {
                      "bit": 30,
                      "width": 1,
                      "access": "R/W",
                      "name": "Open-loop-when-locked (active high).",
                      "desc": "This switched to open loop mode when the output frequency is within the tolerance."
                    },
                    "dithering": {
                      "bit": 31,
                      "width": 1,
                      "access": "R/W",
                      "name": "Dithering enable (active high).",
                      "desc": "Applies dither filter to the DCO input code to get one moe bit and improve the precision using noise generation."
                    }
                  }
                },
                "integrator": {
                  "name": "Integrator register",
                  "type": "register",
                  "offset": "0x00",
                  "width": 32,
                  "reset": "0x00000000",
                  "content": {
                    "state_fract": {
                      "bit": 6,
                      "width": 10,
                      "access": "R/W",
                      "name": "Integrator state: fractional part (dither unit input)",
                      "desc": "This gives the fractional part of the integrator unit output used to compute the DCO input code. This corresponds to the input given to the dither unit."
                    },
                    "state_int": {
                      "bit": 16,
                      "width": 10,
                      "access": "R/W",
                      "name": "Integrator state: integer part (DCO input bits)",
                      "desc": "This gives the integer part of the integrator unit output used to compute the DCO input code. This corresponds to the DCO input code before it is rounded with the dither unit output."
                    }
                  }
                }
              },
              "vp_ports": [
                "clock_out",
                "ref_clock",
                "input"
              ]
            },
            "fll_ctrl": {
              "version": 3,
              "vp_class": "pulp/fll/fll_ctrl",
              "vp_component": "pulp.fll.fll_ctrl_impl",
              "gv_class": "pulp.Fll_ctrl.fll_ctrl"
            },
            "apb_soc_ctrl": {
              "version": 2,
              "vp_class": "pulp/chips/gap/apb_soc",
              "vp_component": "pulp.chips/gap/apb_soc_impl",
              "hal_files": [
                "hal/chips/gap/apb_soc.h"
              ],
              "regmap": {
                "power": {
                  "bypass": {
                    "offset": "0x70",
                    "content": {
                      "dbg1": {
                        "bit": 16
                      }
                    }
                  }
                },
                "info": {
                  "offset": "0x000"
                },
                "fcboot": {
                  "offset": "0x004"
                },
                "fcfetch": {
                  "offset": "0x008"
                },
                "clusiso": {
                  "offset": "0x000C"
                },
                "padfun0": {
                  "offset": "0x010"
                },
                "padfun1": {
                  "offset": "0x014"
                },
                "padfun2": {
                  "offset": "0x018"
                },
                "padfun3": {
                  "offset": "0x01C"
                },
                "padcfg0": {
                  "offset": "0x020"
                },
                "padcfg1": {
                  "offset": "0x024"
                },
                "padcfg2": {
                  "offset": "0x028"
                },
                "padcfg3": {
                  "offset": "0x02C"
                },
                "padcfg4": {
                  "offset": "0x030"
                },
                "padcfg5": {
                  "offset": "0x034"
                },
                "padcfg6": {
                  "offset": "0x038"
                },
                "padcfg7": {
                  "offset": "0x03C"
                },
                "padcfg8": {
                  "offset": "0x040"
                },
                "padcfg9": {
                  "offset": "0x044"
                },
                "padcfg10": {
                  "offset": "0x048"
                },
                "padcfg11": {
                  "offset": "0x04C"
                },
                "padcfg12": {
                  "offset": "0x050"
                },
                "padcfg13": {
                  "offset": "0x054"
                },
                "padcfg14": {
                  "offset": "0x058"
                },
                "padcfg15": {
                  "offset": "0x05C"
                },
                "clusbusy": {
                  "offset": "0x6C"
                },
                "jtagreg": {
                  "offset": "0x74"
                },
                "l2_sleep": {
                  "offset": "0x78"
                },
                "sleep_ctrl": {
                  "offset": "0x7C"
                },
                "corestatus": {
                  "offset": "0xA0"
                },
                "cs_ro": {
                  "offset": "0xC0"
                },
                "bootsel": {
                  "offset": "0xC4"
                },
                "clk_sel": {
                  "offset": "0xD0"
                },
                "clk_div_soc": {
                  "offset": "0xD4"
                },
                "clk_div_clu": {
                  "offset": "0xD8"
                },
                "clk_div_per": {
                  "offset": "0xDC"
                }
              },
              "cluster_power_event": 31,
              "cluster_clock_gate_event": 35,
              "vp_ports": [
                "cluster_reset",
                "wakeup_out",
                "wakeup_seq",
                "bootaddr",
                "event",
                "cluster_power_irq",
                "cluster_clock_gate_irq",
                "confreg_soc",
                "wakeup_gpio0",
                "wakeup_gpio1",
                "wakeup_gpio2",
                "wakeup_gpio3",
                "wakeup_gpio4",
                "wakeup_gpio5",
                "wakeup_gpio6",
                "wakeup_gpio7",
                "wakeup_gpio8",
                "wakeup_gpio9",
                "wakeup_gpio10",
                "wakeup_gpio11",
                "wakeup_gpio12",
                "wakeup_gpio13",
                "wakeup_gpio14",
                "wakeup_gpio15",
                "wakeup_gpio16",
                "wakeup_gpio17",
                "wakeup_gpio18",
                "wakeup_gpio19",
                "wakeup_gpio20",
                "wakeup_gpio21",
                "wakeup_gpio22",
                "wakeup_gpio23",
                "wakeup_gpio24",
                "wakeup_gpio25",
                "wakeup_gpio26",
                "wakeup_gpio27",
                "wakeup_gpio28",
                "wakeup_gpio29",
                "wakeup_gpio30",
                "wakeup_gpio31",
                "input",
                "wakeup_rtc",
                "confreg_ext"
              ]
            },
            "stdout": {
              "version": 3,
              "vp_class": "pulp/stdout/stdout_v3",
              "vp_component": "pulp.stdout.stdout_v3_impl",
              "archi_files": [
                "archi/stdout/stdout_v3.h"
              ],
              "max_cluster": 33,
              "max_core_per_cluster": 16,
              "vp_ports": [
                "input"
              ]
            },
            "fc_tcdm": {
              "size": 65536,
              "vp_class": "memory/memory",
              "vp_component": "memory.memory_impl",
              "vp_ports": [
                "input"
              ]
            },
            "gpio": {
              "version": 2,
              "nb_gpio": 32,
              "vp_class": "pulp/gpio/gpio_v2",
              "vp_component": "pulp.gpio.gpio_v2_impl",
              "archi_files": [
                "archi/gpio/gpio_v2.h"
              ],
              "hal_files": [
                "hal/gpio/gpio_v2.h"
              ],
              "soc_event": 42,
              "vp_ports": [
                "event",
                "input",
                "gpio0",
                "gpio1",
                "gpio2",
                "gpio3",
                "gpio4",
                "gpio5",
                "gpio6",
                "gpio7",
                "gpio8",
                "gpio9",
                "gpio10",
                "gpio11",
                "gpio12",
                "gpio13",
                "gpio14",
                "gpio15",
                "gpio16",
                "gpio17",
                "gpio18",
                "gpio19",
                "gpio20",
                "gpio21",
                "gpio22",
                "gpio23",
                "gpio24",
                "gpio25",
                "gpio26",
                "gpio27",
                "gpio28",
                "gpio29",
                "gpio30",
                "gpio31"
              ]
            },
            "fc_icache_ctrl": {
              "version": 2,
              "vp_class": "pulp/icache_ctrl/icache_ctrl_v2",
              "vp_component": "pulp.icache_ctrl.icache_ctrl_v2_impl",
              "hal_files": [
                "hal/icache/icache_ctrl_v2.h"
              ],
              "vp_ports": [
                "enable",
                "flush",
                "flush_line",
                "flush_line_addr",
                "input"
              ]
            },
            "fc_icache": {
              "vp_class": "cache/cache",
              "vp_component": "cache.cache_impl",
              "nb_ports": 1,
              "nb_sets_bits": 4,
              "nb_ways_bits": 2,
              "line_size_bits": 4,
              "vp_ports": [
                "flush_ack",
                "refill",
                "enable",
                "flush",
                "flush_line",
                "flush_line_addr",
                "input_0"
              ]
            },
            "timer": {
              "version": 2,
              "vp_class": "pulp/timer/timer_v2",
              "vp_component": "pulp.timer.timer_v2_impl",
              "hal_files": [
                "hal/timer/timer_v2.h"
              ],
              "archi_files": [
                "archi/timer/timer_v2.h"
              ],
              "vp_ports": [
                "irq_itf_0",
                "irq_itf_1",
                "ref_clock",
                "input"
              ]
            },
            "soc_eu": {
              "version": 1,
              "hal_files": [
                "hal/soc_eu/soc_eu_v1.h"
              ],
              "archi_files": [
                "archi/soc_eu/soc_eu_v1.h"
              ],
              "vp_class": "pulp/soc_eu/soc_eu_v1",
              "vp_component": "pulp.soc_eu.soc_eu_v1_impl",
              "properties": {
                "nb_fc_events": 8,
                "first_fc_event": 48
              },
              "ref_clock_event": 56,
              "vp_ports": [
                "ref_clock_event",
                "fc_event_itf",
                "event_in",
                "input",
                "ref_clock"
              ]
            },
            "udma": {
              "version": 2,
              "archi": 2,
              "vp_class": "pulp/udma/udma_v2",
              "hal_files": [
                "hal/udma/udma_v2.h",
                "hal/udma/cpi/udma_cpi_v1.h",
                "hal/udma/hyper/udma_hyper_v1.h",
                "hal/udma/i2c/udma_i2c_v2.h",
                "hal/udma/i2s/udma_i2s_v1.h",
                "hal/udma/spim/udma_spim_v2.h",
                "hal/udma/tcdm/udma_tcdm_v1.h",
                "hal/udma/uart/udma_uart_v1.h"
              ],
              "archi_files": [
                "archi/udma/udma_v2.h",
                "archi/udma/cpi/udma_cpi_v1.h",
                "archi/udma/hyper/udma_hyper_v1.h",
                "archi/udma/i2c/udma_i2c_v2.h",
                "archi/udma/i2s/udma_i2s_v1.h",
                "archi/udma/spim/udma_spim_v2.h",
                "archi/udma/tcdm/udma_tcdm_v1.h",
                "archi/udma/uart/udma_uart_v1.h"
              ],
              "regmap": {
                "channel": {
                  "type": "template",
                  "saddr": {
                    "type": "register",
                    "offset": "0x00",
                    "width": 32,
                    "desc": "uDMA start reg",
                    "content": {
                      "saddr": {
                        "bit": 0,
                        "width": 16,
                        "access": "R/W",
                        "reset": "0x0",
                        "desc": "Configure pointer to memory buffer:\n  - Read: value of the pointer until transfer is over. Else returns 0\n  - Write: set Address Pointer to memory buffer start address"
                      }
                    }
                  },
                  "size": {
                    "type": "register",
                    "offset": "0x04",
                    "width": 32,
                    "desc": "uDMA size reg",
                    "content": {
                      "size": {
                        "bit": 0,
                        "width": 16,
                        "access": "R/W",
                        "reset": "0x0",
                        "desc": "Buffer size in DATASIZE. (128kBytes maximum)\n  - Read: buffer size left\n  - Write: set buffer size"
                      }
                    }
                  },
                  "cfg": {
                    "type": "register",
                    "offset": "0x08",
                    "width": 32,
                    "desc": "uDMA config reg",
                    "content": {
                      "continuous": {
                        "bit": 0,
                        "width": 1,
                        "reset": "0x0",
                        "access": "R/W",
                        "desc": "Channel continuous mode:\n  -1'b0: disable\n  -1'b1: enable\nAt the end of the buffer the uDMA reloads the address and size and starts a new transfer."
                      },
                      "datasize": {
                        "bit": 1,
                        "width": 2,
                        "reset": "0x0",
                        "access": "R/W",
                        "desc": "Channel transfer size used to increment uDMA buffer address pointer:\n  - 2'b00: +1 (8 bits)\n  - 2'b01: +2 (16 bits)\n  - 2'b10: +4 (32 bits)\n  - 2'b11: +0"
                      },
                      "en": {
                        "bit": 4,
                        "width": 1,
                        "reset": "0x0",
                        "access": "R/W",
                        "desc": "Channel enable and start transfer:\n  -1'b0: disable\n  -1'b1: enable\nThis signal is used also to queue a transfer if one is already ongoing."
                      },
                      "clr": {
                        "bit": 5,
                        "width": 1,
                        "reset": "0x0",
                        "access": "W",
                        "desc": "Channel clear and stop transfer:\n  -1'b0: disable\n  -1'b1: enable"
                      },
                      "pending": {
                        "bit": 6,
                        "width": 1,
                        "reset": "0x0",
                        "access": "R",
                        "desc": "Transfer pending in queue status flag:\n  -1'b0: free\n  -1'b1: pending"
                      }
                    }
                  }
                },
                "SPIM": {
                  "type": "template",
                  "RX": {
                    "type": "group",
                    "template": "channel",
                    "offset": "0x00",
                    "cfg": {
                      "content": {
                        "datasize": {
                          "access": "R",
                          "reset": "0x2"
                        }
                      }
                    }
                  },
                  "TX": {
                    "type": "group",
                    "template": "channel",
                    "offset": "0x10"
                  }
                },
                "SPIM0": {
                  "type": "group",
                  "template": "SPIM",
                  "offset": "0x080"
                },
                "SPIM1": {
                  "type": "group",
                  "template": "SPIM",
                  "offset": "0x100"
                }
              },
              "commands": {
                "SPI_CMD_CFG": {
                  "desc": "Sets the configuration for the SPI Master IP",
                  "content": {
                    "CLKDIV": {
                      "bit": 0,
                      "width": 8,
                      "desc": "Sets the clock divider value"
                    },
                    "CPHA": {
                      "bit": 8,
                      "width": 1,
                      "desc": "Sets the clock phase:\n  - 1'b0: \n  - 1'b1:"
                    },
                    "CPOL": {
                      "bit": 9,
                      "width": 1,
                      "desc": "Sets the clock polarity:\n  - 1'b0:\n  - 1'b1:"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here CFG"
                    }
                  }
                },
                "SPI_CMD_SOT": {
                  "desc": "Start of stream",
                  "content": {
                    "CS": {
                      "bit": 0,
                      "width": 2,
                      "desc": "Sets the Chip Select (CS):\n  - 2'b00: select csn0\n  - 2'b01: select csn1\n  - 2'b10: select csn2\n  - 2'b11: select csn3"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here SOT"
                    }
                  }
                },
                "SPI_CMD_SEND_CMD": {
                  "desc": "Transmits a configurable size command",
                  "content": {
                    "CMD_VALUE": {
                      "bit": 0,
                      "width": 16,
                      "desc": "Sets the command to send. MSB must always be at bit15 also if cmd size is lower than 16"
                    },
                    "CMD_SIZE": {
                      "bit": 16,
                      "width": 5,
                      "desc": "Size in bits of the command to send. The value written here is num bits - 1."
                    },
                    "QPI": {
                      "bit": 27,
                      "width": 1,
                      "desc": "Sends the command using QuadSPI"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here SEND_CMD"
                    }
                  }
                },
                "SPI_CMD_SEND_ADDR": {
                  "desc": "Transmits a configurable size address",
                  "content": {
                    "CMD_SIZE": {
                      "bit": 16,
                      "width": 5,
                      "desc": "Size in bits of the address to send. The value written here is num bits - 1."
                    },
                    "QPI": {
                      "bit": 27,
                      "width": 1,
                      "desc": "Sends the command using QuadSPI"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here SEND_ADDR"
                    }
                  }
                },
                "SPI_CMD_DUMMY": {
                  "desc": "Transmits a configurable size address",
                  "content": {
                    "DUMMY_CYCLE": {
                      "bit": 16,
                      "width": 5,
                      "desc": "Number of dummy cycles to perform"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here DUMMY"
                    }
                  }
                },
                "SPI_CMD_WAIT": {
                  "desc": "Waits an external event to move to the next instruction",
                  "content": {
                    "EVENT_ID": {
                      "bit": 0,
                      "width": 2,
                      "desc": "External event id"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here WAIT"
                    }
                  }
                },
                "SPI_CMD_TX_DATA": {
                  "desc": "Sends data (max 64Kbits)",
                  "content": {
                    "DATA_SIZE": {
                      "bit": 0,
                      "width": 16,
                      "desc": "Number of bits to send (Max 64Kbits). The value written here is num bits - 1."
                    },
                    "BYTE_ALIGN": {
                      "bit": 26,
                      "width": 1,
                      "desc": "Disable byte alignment\n  - 1'b0: enable byte alignment\n  - 1'b1: disable byte alignment"
                    },
                    "QPI": {
                      "bit": 27,
                      "width": 1,
                      "desc": "Sends the command using QuadSPI"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here TX_DATA"
                    }
                  }
                },
                "SPI_CMD_RX_DATA": {
                  "desc": "Receives data (max 64Kbits)",
                  "content": {
                    "DATA_SIZE": {
                      "bit": 0,
                      "width": 16,
                      "desc": "Number of bits to receive (Max 64Kbits). The value written here is num bits - 1."
                    },
                    "BYTE_ALIGN": {
                      "bit": 26,
                      "width": 1,
                      "desc": "Disable byte alignment\n  - 1'b0: enable byte alignment\n  - 1'b1: disable byte alignment"
                    },
                    "QPI": {
                      "bit": 27,
                      "width": 1,
                      "desc": "Sends the command using QuadSPI"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here RX_DATA"
                    }
                  }
                },
                "SPI_CMD_RPT": {
                  "desc": "Repeat the next transfer N times",
                  "content": {
                    "RPT_CNT": {
                      "bit": 0,
                      "width": 16,
                      "desc": "Number of transfers to repeat (Max 64K)"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here RPT"
                    }
                  }
                },
                "SPI_CMD_EOT": {
                  "desc": "End of stream",
                  "content": {
                    "EVENT_GEN": {
                      "bit": 0,
                      "width": 1,
                      "desc": "Enable EOT event:\n  - 1'b0: disable\n  - 1'b1: enable"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here EOT"
                    }
                  }
                },
                "SPI_CMD_RPT_END": {
                  "desc": "End of the repeat loop command",
                  "content": {
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here RPT_END"
                    }
                  }
                },
                "SPI_CMD_RX_CHECK": {
                  "desc": "Check up ot 16 bits of data against an expected value",
                  "content": {
                    "COMP_DATA": {
                      "bit": 0,
                      "width": 16,
                      "desc": "Data to compare. Max 16bits"
                    },
                    "STATUS_SIZE": {
                      "bit": 16,
                      "width": 4,
                      "desc": "Size in bits of the word to read. The value written here is num bits - 1."
                    },
                    "CHECK_TYPE": {
                      "bit": 24,
                      "width": 2,
                      "desc": "Select check to process:\n  - 2'b00: compare bit a bit\n  - 2'b01: compare only ones\n  - 2'b10: compare ony zeros"
                    },
                    "BYTE_ALIGN": {
                      "bit": 26,
                      "width": 1,
                      "desc": "Disable byte alignment\n  - 1'b0: enable byte alignment\n  - 1'b1: disable byte alignment"
                    },
                    "QPI": {
                      "bit": 27,
                      "width": 1,
                      "desc": "Sends the command using QuadSPI"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here RX_CHECK"
                    }
                  }
                },
                "SPI_CMD_FULL_DUPL": {
                  "desc": "Activate full duplex mode",
                  "content": {
                    "DATA_SIZE": {
                      "bit": 0,
                      "width": 16,
                      "desc": "Number of bits to send (Max 64Kbits). The value written here is num bits - 1."
                    },
                    "BYTE_ALIGN": {
                      "bit": 26,
                      "width": 1,
                      "desc": "Disable byte alignment\n  - 1'b0: enable byte alignment\n  - 1'b1: disable byte alignment"
                    },
                    "SPI_CMD": {
                      "bit": 28,
                      "width": 4,
                      "desc": "Select the SPIM command to be processed. Here FULL_DUPLEX"
                    }
                  }
                }
              },
              "vp_impl": "pulp.udma.udma_v2_gap_impl",
              "vp_component": "pulp.udma.udma_v2_gap_impl",
              "nb_periphs": 10,
              "interfaces": [
                "spim",
                "i2c",
                "i2s",
                "uart",
                "cpi",
                "hyper",
                "lvds",
                "tcdm"
              ],
              "properties": {
                "l2_read_fifo_size": 8
              },
              "lvds": {
                "version": 1,
                "nb_channels": 1,
                "ids": [
                  0
                ],
                "offsets": [
                  "0x000"
                ]
              },
              "spim": {
                "version": 2,
                "nb_channels": 2,
                "ids": [
                  1,
                  2
                ],
                "offsets": [
                  "0x080",
                  "0x100"
                ],
                "is_master": true,
                "eot_events": [
                  22,
                  23
                ]
              },
              "hyper": {
                "version": 1,
                "nb_channels": 1,
                "ids": [
                  3
                ],
                "offsets": [
                  "0x180"
                ],
                "is_master": true
              },
              "uart": {
                "version": 1,
                "nb_channels": 1,
                "ids": [
                  4
                ],
                "offsets": [
                  "0x200"
                ],
                "is_master": true
              },
              "i2c": {
                "version": 2,
                "nb_channels": 2,
                "ids": [
                  5,
                  6
                ],
                "offsets": [
                  "0x280",
                  "0x300"
                ],
                "is_master": true
              },
              "tcdm": {
                "version": 1,
                "nb_channels": 1,
                "ids": [
                  7
                ],
                "offsets": [
                  "0x380"
                ],
                "is_master": true
              },
              "i2s": {
                "version": 1,
                "nb_channels": 1,
                "ids": [
                  8
                ],
                "offsets": [
                  "0x400"
                ],
                "is_slave": true,
                "is_dual": true
              },
              "cpi": {
                "version": 1,
                "nb_channels": 1,
                "ids": [
                  9
                ],
                "offsets": [
                  "0x480"
                ],
                "is_slave": true
              },
              "vp_ports": [
                "l2_itf",
                "event_itf",
                "spim0",
                "spim1",
                "i2c0",
                "i2c1",
                "uart0",
                "hyper0",
                "tcdm0",
                "hyper0_tx_irq",
                "hyper0_rx_irq",
                "input",
                "i2s0",
                "i2s1",
                "cpi0"
              ]
            },
            "efuse": {
              "version": 1,
              "vp_class": "pulp/efuse/efuse_v1",
              "vp_component": "pulp.efuse.efuse_v1_impl",
              "hal_files": [
                "hal/efuse/efuse_v1.h"
              ],
              "archi_files": [
                "archi/efuse/efuse_v1.h"
              ],
              "stim_file": "efuse_preload.data",
              "nb_regs": 128,
              "encrypted": false,
              "aes_key": "12345678275689075642768987654345",
              "aes_iv": "0987654323456789",
              "xtal_check": false,
              "xtalCheck_delta": "0.1",
              "xtalCheck_min": "3",
              "xtalCheck_max": "10",
              "values": [],
              "vp_ports": [
                "input"
              ]
            },
            "uart": {
              "version": 1
            },
            "fc_debug": {
              "version": 1
            },
            "pulp_tap": {
              "vp_class": "pulp/adv_dbg_unit/adv_dbg_unit",
              "vp_component": "pulp.adv_dbg_unit.adv_dbg_unit_impl",
              "has_io_port": true,
              "has_confreg": true,
              "vp_ports": [
                "jtag_out",
                "io",
                "confreg_ext",
                "jtag_in",
                "confreg_soc"
              ]
            },
            "rtc": {
              "version": 1
            }
          },
          "cluster": {
            "version": 5,
            "nb_pe": 8,
            "has_cc": null,
            "vp_class": "pulp/cluster/cluster",
            "vp_component": "utils.composite_impl",
            "vp_comps": [
              "cluster_ico",
              "demux_periph_ico",
              "periph_ico",
              "l1_ico",
              "l1",
              "icache",
              "dma",
              "cluster_ctrl",
              "event_unit",
              "timer",
              "hwce",
              "icache_ctrl",
              "pe0",
              "pe1",
              "pe2",
              "pe3",
              "pe4",
              "pe5",
              "pe6",
              "pe7"
            ],
            "vp_ports": [
              "input",
              "ref_clock",
              "dma_irq",
              "soc",
              "clock",
              "reset"
            ],
            "vp_bindings": [
              [
                "self->input",
                "cluster_ico->input"
              ],
              [
                "self->ref_clock",
                "timer->ref_clock"
              ],
              [
                "cluster_ico->soc",
                "self->soc"
              ],
              [
                "cluster_ico->l1",
                "l1_ico->ext2loc_itf"
              ],
              [
                "cluster_ico->l1_ts",
                "l1_ico->ext2loc_ts_itf"
              ],
              [
                "cluster_ico->periph_ico",
                "periph_ico->input"
              ],
              [
                "cluster_ico->periph_ico_alias",
                "periph_ico->input"
              ],
              [
                "periph_ico->icache_ctrl",
                "icache_ctrl->input"
              ],
              [
                "periph_ico->hwce",
                "hwce->input"
              ],
              [
                "periph_ico->event_unit",
                "event_unit->input"
              ],
              [
                "periph_ico->cluster_ctrl",
                "cluster_ctrl->input"
              ],
              [
                "periph_ico->timer",
                "timer->input"
              ],
              [
                "periph_ico->dma",
                "dma->in_8"
              ],
              [
                "periph_ico->dbg_unit_0",
                "pe0->dbg_unit"
              ],
              [
                "periph_ico->dbg_unit_1",
                "pe1->dbg_unit"
              ],
              [
                "periph_ico->dbg_unit_2",
                "pe2->dbg_unit"
              ],
              [
                "periph_ico->dbg_unit_3",
                "pe3->dbg_unit"
              ],
              [
                "periph_ico->dbg_unit_4",
                "pe4->dbg_unit"
              ],
              [
                "periph_ico->dbg_unit_5",
                "pe5->dbg_unit"
              ],
              [
                "periph_ico->dbg_unit_6",
                "pe6->dbg_unit"
              ],
              [
                "periph_ico->dbg_unit_7",
                "pe7->dbg_unit"
              ],
              [
                "periph_ico->cluster_ico",
                "cluster_ico->input"
              ],
              [
                "l1_ico->event_unit_0",
                "event_unit->demux_in_0"
              ],
              [
                "l1_ico->event_unit_1",
                "event_unit->demux_in_1"
              ],
              [
                "l1_ico->event_unit_2",
                "event_unit->demux_in_2"
              ],
              [
                "l1_ico->event_unit_3",
                "event_unit->demux_in_3"
              ],
              [
                "l1_ico->event_unit_4",
                "event_unit->demux_in_4"
              ],
              [
                "l1_ico->event_unit_5",
                "event_unit->demux_in_5"
              ],
              [
                "l1_ico->event_unit_6",
                "event_unit->demux_in_6"
              ],
              [
                "l1_ico->event_unit_7",
                "event_unit->demux_in_7"
              ],
              [
                "l1_ico->event_unit_alias_0",
                "event_unit->demux_in_0"
              ],
              [
                "l1_ico->event_unit_alias_1",
                "event_unit->demux_in_1"
              ],
              [
                "l1_ico->event_unit_alias_2",
                "event_unit->demux_in_2"
              ],
              [
                "l1_ico->event_unit_alias_3",
                "event_unit->demux_in_3"
              ],
              [
                "l1_ico->event_unit_alias_4",
                "event_unit->demux_in_4"
              ],
              [
                "l1_ico->event_unit_alias_5",
                "event_unit->demux_in_5"
              ],
              [
                "l1_ico->event_unit_alias_6",
                "event_unit->demux_in_6"
              ],
              [
                "l1_ico->event_unit_alias_7",
                "event_unit->demux_in_7"
              ],
              [
                "l1_ico->dma_0",
                "dma->in_0"
              ],
              [
                "l1_ico->dma_1",
                "dma->in_1"
              ],
              [
                "l1_ico->dma_2",
                "dma->in_2"
              ],
              [
                "l1_ico->dma_3",
                "dma->in_3"
              ],
              [
                "l1_ico->dma_4",
                "dma->in_4"
              ],
              [
                "l1_ico->dma_5",
                "dma->in_5"
              ],
              [
                "l1_ico->dma_6",
                "dma->in_6"
              ],
              [
                "l1_ico->dma_7",
                "dma->in_7"
              ],
              [
                "l1_ico->dma_alias_0",
                "dma->in_0"
              ],
              [
                "l1_ico->dma_alias_1",
                "dma->in_1"
              ],
              [
                "l1_ico->dma_alias_2",
                "dma->in_2"
              ],
              [
                "l1_ico->dma_alias_3",
                "dma->in_3"
              ],
              [
                "l1_ico->dma_alias_4",
                "dma->in_4"
              ],
              [
                "l1_ico->dma_alias_5",
                "dma->in_5"
              ],
              [
                "l1_ico->dma_alias_6",
                "dma->in_6"
              ],
              [
                "l1_ico->dma_alias_7",
                "dma->in_7"
              ],
              [
                "l1_ico->out_0",
                "l1->in_0"
              ],
              [
                "l1_ico->out_1",
                "l1->in_1"
              ],
              [
                "l1_ico->out_2",
                "l1->in_2"
              ],
              [
                "l1_ico->out_3",
                "l1->in_3"
              ],
              [
                "l1_ico->out_4",
                "l1->in_4"
              ],
              [
                "l1_ico->out_5",
                "l1->in_5"
              ],
              [
                "l1_ico->out_6",
                "l1->in_6"
              ],
              [
                "l1_ico->out_7",
                "l1->in_7"
              ],
              [
                "l1_ico->out_8",
                "l1->in_8"
              ],
              [
                "l1_ico->out_9",
                "l1->in_9"
              ],
              [
                "l1_ico->out_10",
                "l1->in_10"
              ],
              [
                "l1_ico->out_11",
                "l1->in_11"
              ],
              [
                "l1_ico->out_12",
                "l1->in_12"
              ],
              [
                "l1_ico->out_13",
                "l1->in_13"
              ],
              [
                "l1_ico->out_14",
                "l1->in_14"
              ],
              [
                "l1_ico->out_15",
                "l1->in_15"
              ],
              [
                "l1_ico->cluster_ico",
                "cluster_ico->input"
              ],
              [
                "icache->refill",
                "cluster_ico->input"
              ],
              [
                "dma->ext_irq_itf",
                "self->dma_irq"
              ],
              [
                "dma->ext_irq_itf",
                "event_unit->in_event_22_pe_0"
              ],
              [
                "dma->ext_irq_itf",
                "event_unit->in_event_22_pe_1"
              ],
              [
                "dma->ext_irq_itf",
                "event_unit->in_event_22_pe_2"
              ],
              [
                "dma->ext_irq_itf",
                "event_unit->in_event_22_pe_3"
              ],
              [
                "dma->ext_irq_itf",
                "event_unit->in_event_22_pe_4"
              ],
              [
                "dma->ext_irq_itf",
                "event_unit->in_event_22_pe_5"
              ],
              [
                "dma->ext_irq_itf",
                "event_unit->in_event_22_pe_6"
              ],
              [
                "dma->ext_irq_itf",
                "event_unit->in_event_22_pe_7"
              ],
              [
                "dma->event_itf_0",
                "event_unit->in_event_8_pe_0"
              ],
              [
                "dma->event_itf_1",
                "event_unit->in_event_8_pe_1"
              ],
              [
                "dma->event_itf_2",
                "event_unit->in_event_8_pe_2"
              ],
              [
                "dma->event_itf_3",
                "event_unit->in_event_8_pe_3"
              ],
              [
                "dma->event_itf_4",
                "event_unit->in_event_8_pe_4"
              ],
              [
                "dma->event_itf_5",
                "event_unit->in_event_8_pe_5"
              ],
              [
                "dma->event_itf_6",
                "event_unit->in_event_8_pe_6"
              ],
              [
                "dma->event_itf_7",
                "event_unit->in_event_8_pe_7"
              ],
              [
                "dma->irq_itf_0",
                "event_unit->in_event_9_pe_0"
              ],
              [
                "dma->irq_itf_1",
                "event_unit->in_event_9_pe_1"
              ],
              [
                "dma->irq_itf_2",
                "event_unit->in_event_9_pe_2"
              ],
              [
                "dma->irq_itf_3",
                "event_unit->in_event_9_pe_3"
              ],
              [
                "dma->irq_itf_4",
                "event_unit->in_event_9_pe_4"
              ],
              [
                "dma->irq_itf_5",
                "event_unit->in_event_9_pe_5"
              ],
              [
                "dma->irq_itf_6",
                "event_unit->in_event_9_pe_6"
              ],
              [
                "dma->irq_itf_7",
                "event_unit->in_event_9_pe_7"
              ],
              [
                "dma->ext_itf",
                "cluster_ico->input"
              ],
              [
                "dma->loc_itf_0",
                "l1_ico->dma_in_0"
              ],
              [
                "dma->loc_itf_1",
                "l1_ico->dma_in_1"
              ],
              [
                "dma->loc_itf_2",
                "l1_ico->dma_in_2"
              ],
              [
                "dma->loc_itf_3",
                "l1_ico->dma_in_3"
              ],
              [
                "cluster_ctrl->bootaddr_0",
                "pe0->bootaddr"
              ],
              [
                "cluster_ctrl->bootaddr_1",
                "pe1->bootaddr"
              ],
              [
                "cluster_ctrl->bootaddr_2",
                "pe2->bootaddr"
              ],
              [
                "cluster_ctrl->bootaddr_3",
                "pe3->bootaddr"
              ],
              [
                "cluster_ctrl->bootaddr_4",
                "pe4->bootaddr"
              ],
              [
                "cluster_ctrl->bootaddr_5",
                "pe5->bootaddr"
              ],
              [
                "cluster_ctrl->bootaddr_6",
                "pe6->bootaddr"
              ],
              [
                "cluster_ctrl->bootaddr_7",
                "pe7->bootaddr"
              ],
              [
                "cluster_ctrl->fetchen_0",
                "pe0->fetchen"
              ],
              [
                "cluster_ctrl->fetchen_1",
                "pe1->fetchen"
              ],
              [
                "cluster_ctrl->fetchen_2",
                "pe2->fetchen"
              ],
              [
                "cluster_ctrl->fetchen_3",
                "pe3->fetchen"
              ],
              [
                "cluster_ctrl->fetchen_4",
                "pe4->fetchen"
              ],
              [
                "cluster_ctrl->fetchen_5",
                "pe5->fetchen"
              ],
              [
                "cluster_ctrl->fetchen_6",
                "pe6->fetchen"
              ],
              [
                "cluster_ctrl->fetchen_7",
                "pe7->fetchen"
              ],
              [
                "cluster_ctrl->halt_0",
                "pe0->halt"
              ],
              [
                "cluster_ctrl->halt_1",
                "pe1->halt"
              ],
              [
                "cluster_ctrl->halt_2",
                "pe2->halt"
              ],
              [
                "cluster_ctrl->halt_3",
                "pe3->halt"
              ],
              [
                "cluster_ctrl->halt_4",
                "pe4->halt"
              ],
              [
                "cluster_ctrl->halt_5",
                "pe5->halt"
              ],
              [
                "cluster_ctrl->halt_6",
                "pe6->halt"
              ],
              [
                "cluster_ctrl->halt_7",
                "pe7->halt"
              ],
              [
                "event_unit->irq_req_0",
                "pe0->irq_req"
              ],
              [
                "event_unit->irq_req_1",
                "pe1->irq_req"
              ],
              [
                "event_unit->irq_req_2",
                "pe2->irq_req"
              ],
              [
                "event_unit->irq_req_3",
                "pe3->irq_req"
              ],
              [
                "event_unit->irq_req_4",
                "pe4->irq_req"
              ],
              [
                "event_unit->irq_req_5",
                "pe5->irq_req"
              ],
              [
                "event_unit->irq_req_6",
                "pe6->irq_req"
              ],
              [
                "event_unit->irq_req_7",
                "pe7->irq_req"
              ],
              [
                "event_unit->clock_0",
                "pe0->clock"
              ],
              [
                "event_unit->clock_1",
                "pe1->clock"
              ],
              [
                "event_unit->clock_2",
                "pe2->clock"
              ],
              [
                "event_unit->clock_3",
                "pe3->clock"
              ],
              [
                "event_unit->clock_4",
                "pe4->clock"
              ],
              [
                "event_unit->clock_5",
                "pe5->clock"
              ],
              [
                "event_unit->clock_6",
                "pe6->clock"
              ],
              [
                "event_unit->clock_7",
                "pe7->clock"
              ],
              [
                "timer->irq_itf_0",
                "event_unit->in_event_10_pe_0"
              ],
              [
                "timer->irq_itf_0",
                "event_unit->in_event_10_pe_1"
              ],
              [
                "timer->irq_itf_0",
                "event_unit->in_event_10_pe_2"
              ],
              [
                "timer->irq_itf_0",
                "event_unit->in_event_10_pe_3"
              ],
              [
                "timer->irq_itf_0",
                "event_unit->in_event_10_pe_4"
              ],
              [
                "timer->irq_itf_0",
                "event_unit->in_event_10_pe_5"
              ],
              [
                "timer->irq_itf_0",
                "event_unit->in_event_10_pe_6"
              ],
              [
                "timer->irq_itf_0",
                "event_unit->in_event_10_pe_7"
              ],
              [
                "timer->irq_itf_1",
                "event_unit->in_event_11_pe_0"
              ],
              [
                "timer->irq_itf_1",
                "event_unit->in_event_11_pe_1"
              ],
              [
                "timer->irq_itf_1",
                "event_unit->in_event_11_pe_2"
              ],
              [
                "timer->irq_itf_1",
                "event_unit->in_event_11_pe_3"
              ],
              [
                "timer->irq_itf_1",
                "event_unit->in_event_11_pe_4"
              ],
              [
                "timer->irq_itf_1",
                "event_unit->in_event_11_pe_5"
              ],
              [
                "timer->irq_itf_1",
                "event_unit->in_event_11_pe_6"
              ],
              [
                "timer->irq_itf_1",
                "event_unit->in_event_11_pe_7"
              ],
              [
                "hwce->irq",
                "event_unit->in_event_12_pe_0"
              ],
              [
                "hwce->irq",
                "event_unit->in_event_12_pe_1"
              ],
              [
                "hwce->irq",
                "event_unit->in_event_12_pe_2"
              ],
              [
                "hwce->irq",
                "event_unit->in_event_12_pe_3"
              ],
              [
                "hwce->irq",
                "event_unit->in_event_12_pe_4"
              ],
              [
                "hwce->irq",
                "event_unit->in_event_12_pe_5"
              ],
              [
                "hwce->irq",
                "event_unit->in_event_12_pe_6"
              ],
              [
                "hwce->irq",
                "event_unit->in_event_12_pe_7"
              ],
              [
                "hwce->out_0",
                "l1_ico->hwce_in_0"
              ],
              [
                "hwce->out_1",
                "l1_ico->hwce_in_1"
              ],
              [
                "hwce->out_2",
                "l1_ico->hwce_in_2"
              ],
              [
                "hwce->out_3",
                "l1_ico->hwce_in_3"
              ],
              [
                "icache_ctrl->enable",
                "icache->enable"
              ],
              [
                "icache_ctrl->flush",
                "icache->flush"
              ],
              [
                "icache_ctrl->flush",
                "pe0->flush_cache"
              ],
              [
                "icache_ctrl->flush",
                "pe1->flush_cache"
              ],
              [
                "icache_ctrl->flush",
                "pe2->flush_cache"
              ],
              [
                "icache_ctrl->flush",
                "pe3->flush_cache"
              ],
              [
                "icache_ctrl->flush",
                "pe4->flush_cache"
              ],
              [
                "icache_ctrl->flush",
                "pe5->flush_cache"
              ],
              [
                "icache_ctrl->flush",
                "pe6->flush_cache"
              ],
              [
                "icache_ctrl->flush",
                "pe7->flush_cache"
              ],
              [
                "icache_ctrl->flush_line",
                "icache->flush_line"
              ],
              [
                "icache_ctrl->flush_line_addr",
                "icache->flush_line_addr"
              ],
              [
                "pe0->halt_status",
                "cluster_ctrl->core_halt_0"
              ],
              [
                "pe0->data",
                "l1_ico->data_pe_0"
              ],
              [
                "pe0->fetch",
                "icache->input_0"
              ],
              [
                "pe0->irq_ack",
                "event_unit->irq_ack_0"
              ],
              [
                "pe0->ext_counter[11]",
                "l1_ico->ext_counter_0[11]"
              ],
              [
                "pe0->ext_counter[12]",
                "l1_ico->ext_counter_0[12]"
              ],
              [
                "pe0->ext_counter[13]",
                "l1_ico->ext_counter_0[13]"
              ],
              [
                "pe0->ext_counter[14]",
                "l1_ico->ext_counter_0[14]"
              ],
              [
                "pe0->ext_counter[15]",
                "l1_ico->ext_counter_0[15]"
              ],
              [
                "pe1->halt_status",
                "cluster_ctrl->core_halt_1"
              ],
              [
                "pe1->data",
                "l1_ico->data_pe_1"
              ],
              [
                "pe1->fetch",
                "icache->input_1"
              ],
              [
                "pe1->irq_ack",
                "event_unit->irq_ack_1"
              ],
              [
                "pe1->ext_counter[11]",
                "l1_ico->ext_counter_1[11]"
              ],
              [
                "pe1->ext_counter[12]",
                "l1_ico->ext_counter_1[12]"
              ],
              [
                "pe1->ext_counter[13]",
                "l1_ico->ext_counter_1[13]"
              ],
              [
                "pe1->ext_counter[14]",
                "l1_ico->ext_counter_1[14]"
              ],
              [
                "pe1->ext_counter[15]",
                "l1_ico->ext_counter_1[15]"
              ],
              [
                "pe2->halt_status",
                "cluster_ctrl->core_halt_2"
              ],
              [
                "pe2->data",
                "l1_ico->data_pe_2"
              ],
              [
                "pe2->fetch",
                "icache->input_2"
              ],
              [
                "pe2->irq_ack",
                "event_unit->irq_ack_2"
              ],
              [
                "pe2->ext_counter[11]",
                "l1_ico->ext_counter_2[11]"
              ],
              [
                "pe2->ext_counter[12]",
                "l1_ico->ext_counter_2[12]"
              ],
              [
                "pe2->ext_counter[13]",
                "l1_ico->ext_counter_2[13]"
              ],
              [
                "pe2->ext_counter[14]",
                "l1_ico->ext_counter_2[14]"
              ],
              [
                "pe2->ext_counter[15]",
                "l1_ico->ext_counter_2[15]"
              ],
              [
                "pe3->halt_status",
                "cluster_ctrl->core_halt_3"
              ],
              [
                "pe3->data",
                "l1_ico->data_pe_3"
              ],
              [
                "pe3->fetch",
                "icache->input_3"
              ],
              [
                "pe3->irq_ack",
                "event_unit->irq_ack_3"
              ],
              [
                "pe3->ext_counter[11]",
                "l1_ico->ext_counter_3[11]"
              ],
              [
                "pe3->ext_counter[12]",
                "l1_ico->ext_counter_3[12]"
              ],
              [
                "pe3->ext_counter[13]",
                "l1_ico->ext_counter_3[13]"
              ],
              [
                "pe3->ext_counter[14]",
                "l1_ico->ext_counter_3[14]"
              ],
              [
                "pe3->ext_counter[15]",
                "l1_ico->ext_counter_3[15]"
              ],
              [
                "pe4->halt_status",
                "cluster_ctrl->core_halt_4"
              ],
              [
                "pe4->data",
                "l1_ico->data_pe_4"
              ],
              [
                "pe4->fetch",
                "icache->input_4"
              ],
              [
                "pe4->irq_ack",
                "event_unit->irq_ack_4"
              ],
              [
                "pe4->ext_counter[11]",
                "l1_ico->ext_counter_4[11]"
              ],
              [
                "pe4->ext_counter[12]",
                "l1_ico->ext_counter_4[12]"
              ],
              [
                "pe4->ext_counter[13]",
                "l1_ico->ext_counter_4[13]"
              ],
              [
                "pe4->ext_counter[14]",
                "l1_ico->ext_counter_4[14]"
              ],
              [
                "pe4->ext_counter[15]",
                "l1_ico->ext_counter_4[15]"
              ],
              [
                "pe5->halt_status",
                "cluster_ctrl->core_halt_5"
              ],
              [
                "pe5->data",
                "l1_ico->data_pe_5"
              ],
              [
                "pe5->fetch",
                "icache->input_5"
              ],
              [
                "pe5->irq_ack",
                "event_unit->irq_ack_5"
              ],
              [
                "pe5->ext_counter[11]",
                "l1_ico->ext_counter_5[11]"
              ],
              [
                "pe5->ext_counter[12]",
                "l1_ico->ext_counter_5[12]"
              ],
              [
                "pe5->ext_counter[13]",
                "l1_ico->ext_counter_5[13]"
              ],
              [
                "pe5->ext_counter[14]",
                "l1_ico->ext_counter_5[14]"
              ],
              [
                "pe5->ext_counter[15]",
                "l1_ico->ext_counter_5[15]"
              ],
              [
                "pe6->halt_status",
                "cluster_ctrl->core_halt_6"
              ],
              [
                "pe6->data",
                "l1_ico->data_pe_6"
              ],
              [
                "pe6->fetch",
                "icache->input_6"
              ],
              [
                "pe6->irq_ack",
                "event_unit->irq_ack_6"
              ],
              [
                "pe6->ext_counter[11]",
                "l1_ico->ext_counter_6[11]"
              ],
              [
                "pe6->ext_counter[12]",
                "l1_ico->ext_counter_6[12]"
              ],
              [
                "pe6->ext_counter[13]",
                "l1_ico->ext_counter_6[13]"
              ],
              [
                "pe6->ext_counter[14]",
                "l1_ico->ext_counter_6[14]"
              ],
              [
                "pe6->ext_counter[15]",
                "l1_ico->ext_counter_6[15]"
              ],
              [
                "pe7->halt_status",
                "cluster_ctrl->core_halt_7"
              ],
              [
                "pe7->data",
                "l1_ico->data_pe_7"
              ],
              [
                "pe7->fetch",
                "icache->input_7"
              ],
              [
                "pe7->irq_ack",
                "event_unit->irq_ack_7"
              ],
              [
                "pe7->ext_counter[11]",
                "l1_ico->ext_counter_7[11]"
              ],
              [
                "pe7->ext_counter[12]",
                "l1_ico->ext_counter_7[12]"
              ],
              [
                "pe7->ext_counter[13]",
                "l1_ico->ext_counter_7[13]"
              ],
              [
                "pe7->ext_counter[14]",
                "l1_ico->ext_counter_7[14]"
              ],
              [
                "pe7->ext_counter[15]",
                "l1_ico->ext_counter_7[15]"
              ]
            ],
            "cluster_ico": {
              "vp_class": "interco/router",
              "vp_component": "interco.router_impl",
              "bandwidth": 4,
              "latency": 2,
              "id": 0,
              "mappings": {
                "l1": {
                  "base": "0x10000000",
                  "size": "0x00010000",
                  "remove_offset": "0x10000000"
                },
                "l1_ts": {
                  "base": "0x10100000",
                  "size": "0x00010000",
                  "remove_offset": "0x10100000"
                },
                "periph_ico": {
                  "base": "0x10200000",
                  "size": "0x00200000"
                },
                "periph_ico_alias": {
                  "base": "0x00200000",
                  "size": "0x00200000",
                  "add_offset": "268435456"
                },
                "error": {
                  "base": "0x10000000",
                  "size": "0x400000"
                },
                "soc": {}
              },
              "vp_ports": [
                "soc",
                "l1",
                "l1_ts",
                "periph_ico",
                "periph_ico_alias",
                "input"
              ]
            },
            "demux_periph_ico": {
              "vp_class": "interco/router",
              "vp_component": "interco.router_impl",
              "bandwidth": 4,
              "latency": 0,
              "id": 0,
              "mappings": {
                "demux_event_unit": {
                  "base": "0x0",
                  "size": "0x00000400"
                }
              }
            },
            "periph_ico": {
              "vp_class": "interco/router",
              "vp_component": "interco.router_impl",
              "bandwidth": 4,
              "latency": 0,
              "id": 0,
              "mappings": {
                "dbg_unit_0": {
                  "base": "0x10300000",
                  "size": "0x8000",
                  "remove_offset": "0x10300000"
                },
                "dbg_unit_1": {
                  "base": "0x10308000",
                  "size": "0x8000",
                  "remove_offset": "0x10308000"
                },
                "dbg_unit_2": {
                  "base": "0x10310000",
                  "size": "0x8000",
                  "remove_offset": "0x10310000"
                },
                "dbg_unit_3": {
                  "base": "0x10318000",
                  "size": "0x8000",
                  "remove_offset": "0x10318000"
                },
                "dbg_unit_4": {
                  "base": "0x10320000",
                  "size": "0x8000",
                  "remove_offset": "0x10320000"
                },
                "dbg_unit_5": {
                  "base": "0x10328000",
                  "size": "0x8000",
                  "remove_offset": "0x10328000"
                },
                "dbg_unit_6": {
                  "base": "0x10330000",
                  "size": "0x8000",
                  "remove_offset": "0x10330000"
                },
                "dbg_unit_7": {
                  "base": "0x10338000",
                  "size": "0x8000",
                  "remove_offset": "0x10338000"
                },
                "cluster_ctrl": {
                  "base": "0x10200000",
                  "size": "0x00000400",
                  "remove_offset": "0x10200000"
                },
                "timer": {
                  "base": "0x10200400",
                  "size": "0x00000400",
                  "remove_offset": "0x10200400"
                },
                "event_unit": {
                  "base": "0x10200800",
                  "size": "0x00000800",
                  "remove_offset": "0x10200800"
                },
                "icache_ctrl": {
                  "base": "0x10201400",
                  "size": "0x00000400",
                  "remove_offset": "0x10201400"
                },
                "dma": {
                  "base": "0x10201800",
                  "size": "0x00000400",
                  "remove_offset": "0x10201800"
                },
                "error": {
                  "base": "0x10200000",
                  "size": "0x10200000"
                },
                "cluster_ico": {},
                "hwce": {
                  "base": "0x10201000",
                  "size": "0x00000400",
                  "remove_offset": "0x10201000"
                }
              },
              "vp_ports": [
                "icache_ctrl",
                "hwce",
                "event_unit",
                "cluster_ctrl",
                "timer",
                "dma",
                "dbg_unit_0",
                "dbg_unit_1",
                "dbg_unit_2",
                "dbg_unit_3",
                "dbg_unit_4",
                "dbg_unit_5",
                "dbg_unit_6",
                "dbg_unit_7",
                "cluster_ico",
                "input"
              ]
            },
            "l1_ico": {
              "vp_class": null,
              "vp_component": "",
              "vp_comps": [
                "pe0_ico",
                "pe1_ico",
                "pe2_ico",
                "pe3_ico",
                "pe4_ico",
                "pe5_ico",
                "pe6_ico",
                "pe7_ico",
                "interleaver",
                "ext2loc",
                "ext2loc_ts"
              ],
              "vp_ports": [
                "event_unit_0",
                "event_unit_1",
                "event_unit_2",
                "event_unit_3",
                "event_unit_4",
                "event_unit_5",
                "event_unit_6",
                "event_unit_7",
                "event_unit_alias_0",
                "event_unit_alias_1",
                "event_unit_alias_2",
                "event_unit_alias_3",
                "event_unit_alias_4",
                "event_unit_alias_5",
                "event_unit_alias_6",
                "event_unit_alias_7",
                "dma_0",
                "dma_1",
                "dma_2",
                "dma_3",
                "dma_4",
                "dma_5",
                "dma_6",
                "dma_7",
                "dma_alias_0",
                "dma_alias_1",
                "dma_alias_2",
                "dma_alias_3",
                "dma_alias_4",
                "dma_alias_5",
                "dma_alias_6",
                "dma_alias_7",
                "out_0",
                "out_1",
                "out_2",
                "out_3",
                "out_4",
                "out_5",
                "out_6",
                "out_7",
                "out_8",
                "out_9",
                "out_10",
                "out_11",
                "out_12",
                "out_13",
                "out_14",
                "out_15",
                "cluster_ico",
                "dma_in_0",
                "dma_in_1",
                "dma_in_2",
                "dma_in_3",
                "hwce_in_0",
                "hwce_in_1",
                "hwce_in_2",
                "hwce_in_3",
                "ext2loc_itf",
                "ext2loc_ts_itf",
                "ext_counter_0[11]",
                "ext_counter_1[11]",
                "ext_counter_2[11]",
                "ext_counter_3[11]",
                "ext_counter_4[11]",
                "ext_counter_5[11]",
                "ext_counter_6[11]",
                "ext_counter_7[11]",
                "ext_counter_0[12]",
                "ext_counter_1[12]",
                "ext_counter_2[12]",
                "ext_counter_3[12]",
                "ext_counter_4[12]",
                "ext_counter_5[12]",
                "ext_counter_6[12]",
                "ext_counter_7[12]",
                "ext_counter_0[13]",
                "ext_counter_1[13]",
                "ext_counter_2[13]",
                "ext_counter_3[13]",
                "ext_counter_4[13]",
                "ext_counter_5[13]",
                "ext_counter_6[13]",
                "ext_counter_7[13]",
                "ext_counter_0[14]",
                "ext_counter_1[14]",
                "ext_counter_2[14]",
                "ext_counter_3[14]",
                "ext_counter_4[14]",
                "ext_counter_5[14]",
                "ext_counter_6[14]",
                "ext_counter_7[14]",
                "ext_counter_0[15]",
                "ext_counter_1[15]",
                "ext_counter_2[15]",
                "ext_counter_3[15]",
                "ext_counter_4[15]",
                "ext_counter_5[15]",
                "ext_counter_6[15]",
                "ext_counter_7[15]",
                "data_pe_0",
                "data_pe_1",
                "data_pe_2",
                "data_pe_3",
                "data_pe_4",
                "data_pe_5",
                "data_pe_6",
                "data_pe_7"
              ],
              "vp_bindings": [
                [
                  "self->dma_in_0",
                  "interleaver->in_8"
                ],
                [
                  "self->dma_in_1",
                  "interleaver->in_9"
                ],
                [
                  "self->dma_in_2",
                  "interleaver->in_10"
                ],
                [
                  "self->dma_in_3",
                  "interleaver->in_11"
                ],
                [
                  "self->hwce_in_0",
                  "interleaver->in_12"
                ],
                [
                  "self->hwce_in_1",
                  "interleaver->in_13"
                ],
                [
                  "self->hwce_in_2",
                  "interleaver->in_14"
                ],
                [
                  "self->hwce_in_3",
                  "interleaver->in_15"
                ],
                [
                  "self->ext2loc_itf",
                  "ext2loc->input"
                ],
                [
                  "self->ext2loc_ts_itf",
                  "ext2loc_ts->input"
                ],
                [
                  "self->ext_counter_0[11]",
                  "pe0_ico->nb_read[1]"
                ],
                [
                  "self->ext_counter_1[11]",
                  "pe1_ico->nb_read[1]"
                ],
                [
                  "self->ext_counter_2[11]",
                  "pe2_ico->nb_read[1]"
                ],
                [
                  "self->ext_counter_3[11]",
                  "pe3_ico->nb_read[1]"
                ],
                [
                  "self->ext_counter_4[11]",
                  "pe4_ico->nb_read[1]"
                ],
                [
                  "self->ext_counter_5[11]",
                  "pe5_ico->nb_read[1]"
                ],
                [
                  "self->ext_counter_6[11]",
                  "pe6_ico->nb_read[1]"
                ],
                [
                  "self->ext_counter_7[11]",
                  "pe7_ico->nb_read[1]"
                ],
                [
                  "self->ext_counter_0[12]",
                  "pe0_ico->nb_write[1]"
                ],
                [
                  "self->ext_counter_1[12]",
                  "pe1_ico->nb_write[1]"
                ],
                [
                  "self->ext_counter_2[12]",
                  "pe2_ico->nb_write[1]"
                ],
                [
                  "self->ext_counter_3[12]",
                  "pe3_ico->nb_write[1]"
                ],
                [
                  "self->ext_counter_4[12]",
                  "pe4_ico->nb_write[1]"
                ],
                [
                  "self->ext_counter_5[12]",
                  "pe5_ico->nb_write[1]"
                ],
                [
                  "self->ext_counter_6[12]",
                  "pe6_ico->nb_write[1]"
                ],
                [
                  "self->ext_counter_7[12]",
                  "pe7_ico->nb_write[1]"
                ],
                [
                  "self->ext_counter_0[13]",
                  "pe0_ico->read_stalls[1]"
                ],
                [
                  "self->ext_counter_1[13]",
                  "pe1_ico->read_stalls[1]"
                ],
                [
                  "self->ext_counter_2[13]",
                  "pe2_ico->read_stalls[1]"
                ],
                [
                  "self->ext_counter_3[13]",
                  "pe3_ico->read_stalls[1]"
                ],
                [
                  "self->ext_counter_4[13]",
                  "pe4_ico->read_stalls[1]"
                ],
                [
                  "self->ext_counter_5[13]",
                  "pe5_ico->read_stalls[1]"
                ],
                [
                  "self->ext_counter_6[13]",
                  "pe6_ico->read_stalls[1]"
                ],
                [
                  "self->ext_counter_7[13]",
                  "pe7_ico->read_stalls[1]"
                ],
                [
                  "self->ext_counter_0[14]",
                  "pe0_ico->write_stalls[1]"
                ],
                [
                  "self->ext_counter_1[14]",
                  "pe1_ico->write_stalls[1]"
                ],
                [
                  "self->ext_counter_2[14]",
                  "pe2_ico->write_stalls[1]"
                ],
                [
                  "self->ext_counter_3[14]",
                  "pe3_ico->write_stalls[1]"
                ],
                [
                  "self->ext_counter_4[14]",
                  "pe4_ico->write_stalls[1]"
                ],
                [
                  "self->ext_counter_5[14]",
                  "pe5_ico->write_stalls[1]"
                ],
                [
                  "self->ext_counter_6[14]",
                  "pe6_ico->write_stalls[1]"
                ],
                [
                  "self->ext_counter_7[14]",
                  "pe7_ico->write_stalls[1]"
                ],
                [
                  "self->ext_counter_0[15]",
                  "pe0_ico->stalls[0]"
                ],
                [
                  "self->ext_counter_1[15]",
                  "pe1_ico->stalls[0]"
                ],
                [
                  "self->ext_counter_2[15]",
                  "pe2_ico->stalls[0]"
                ],
                [
                  "self->ext_counter_3[15]",
                  "pe3_ico->stalls[0]"
                ],
                [
                  "self->ext_counter_4[15]",
                  "pe4_ico->stalls[0]"
                ],
                [
                  "self->ext_counter_5[15]",
                  "pe5_ico->stalls[0]"
                ],
                [
                  "self->ext_counter_6[15]",
                  "pe6_ico->stalls[0]"
                ],
                [
                  "self->ext_counter_7[15]",
                  "pe7_ico->stalls[0]"
                ],
                [
                  "self->data_pe_0",
                  "pe0_ico->input"
                ],
                [
                  "self->data_pe_1",
                  "pe1_ico->input"
                ],
                [
                  "self->data_pe_2",
                  "pe2_ico->input"
                ],
                [
                  "self->data_pe_3",
                  "pe3_ico->input"
                ],
                [
                  "self->data_pe_4",
                  "pe4_ico->input"
                ],
                [
                  "self->data_pe_5",
                  "pe5_ico->input"
                ],
                [
                  "self->data_pe_6",
                  "pe6_ico->input"
                ],
                [
                  "self->data_pe_7",
                  "pe7_ico->input"
                ],
                [
                  "pe0_ico->dma",
                  "self->dma_0"
                ],
                [
                  "pe0_ico->dma_alias",
                  "self->dma_alias_0"
                ],
                [
                  "pe0_ico->event_unit",
                  "self->event_unit_0"
                ],
                [
                  "pe0_ico->event_unit_alias",
                  "self->event_unit_alias_0"
                ],
                [
                  "pe0_ico->cluster_ico",
                  "self->cluster_ico"
                ],
                [
                  "pe0_ico->l1",
                  "interleaver->in_0"
                ],
                [
                  "pe0_ico->l1_alias",
                  "interleaver->in_0"
                ],
                [
                  "pe0_ico->l1_ts",
                  "interleaver->ts_in_0"
                ],
                [
                  "pe0_ico->l1_ts_alias",
                  "interleaver->ts_in_0"
                ],
                [
                  "pe1_ico->dma",
                  "self->dma_1"
                ],
                [
                  "pe1_ico->dma_alias",
                  "self->dma_alias_1"
                ],
                [
                  "pe1_ico->event_unit",
                  "self->event_unit_1"
                ],
                [
                  "pe1_ico->event_unit_alias",
                  "self->event_unit_alias_1"
                ],
                [
                  "pe1_ico->cluster_ico",
                  "self->cluster_ico"
                ],
                [
                  "pe1_ico->l1",
                  "interleaver->in_1"
                ],
                [
                  "pe1_ico->l1_alias",
                  "interleaver->in_1"
                ],
                [
                  "pe1_ico->l1_ts",
                  "interleaver->ts_in_1"
                ],
                [
                  "pe1_ico->l1_ts_alias",
                  "interleaver->ts_in_1"
                ],
                [
                  "pe2_ico->dma",
                  "self->dma_2"
                ],
                [
                  "pe2_ico->dma_alias",
                  "self->dma_alias_2"
                ],
                [
                  "pe2_ico->event_unit",
                  "self->event_unit_2"
                ],
                [
                  "pe2_ico->event_unit_alias",
                  "self->event_unit_alias_2"
                ],
                [
                  "pe2_ico->cluster_ico",
                  "self->cluster_ico"
                ],
                [
                  "pe2_ico->l1",
                  "interleaver->in_2"
                ],
                [
                  "pe2_ico->l1_alias",
                  "interleaver->in_2"
                ],
                [
                  "pe2_ico->l1_ts",
                  "interleaver->ts_in_2"
                ],
                [
                  "pe2_ico->l1_ts_alias",
                  "interleaver->ts_in_2"
                ],
                [
                  "pe3_ico->dma",
                  "self->dma_3"
                ],
                [
                  "pe3_ico->dma_alias",
                  "self->dma_alias_3"
                ],
                [
                  "pe3_ico->event_unit",
                  "self->event_unit_3"
                ],
                [
                  "pe3_ico->event_unit_alias",
                  "self->event_unit_alias_3"
                ],
                [
                  "pe3_ico->cluster_ico",
                  "self->cluster_ico"
                ],
                [
                  "pe3_ico->l1",
                  "interleaver->in_3"
                ],
                [
                  "pe3_ico->l1_alias",
                  "interleaver->in_3"
                ],
                [
                  "pe3_ico->l1_ts",
                  "interleaver->ts_in_3"
                ],
                [
                  "pe3_ico->l1_ts_alias",
                  "interleaver->ts_in_3"
                ],
                [
                  "pe4_ico->dma",
                  "self->dma_4"
                ],
                [
                  "pe4_ico->dma_alias",
                  "self->dma_alias_4"
                ],
                [
                  "pe4_ico->event_unit",
                  "self->event_unit_4"
                ],
                [
                  "pe4_ico->event_unit_alias",
                  "self->event_unit_alias_4"
                ],
                [
                  "pe4_ico->cluster_ico",
                  "self->cluster_ico"
                ],
                [
                  "pe4_ico->l1",
                  "interleaver->in_4"
                ],
                [
                  "pe4_ico->l1_alias",
                  "interleaver->in_4"
                ],
                [
                  "pe4_ico->l1_ts",
                  "interleaver->ts_in_4"
                ],
                [
                  "pe4_ico->l1_ts_alias",
                  "interleaver->ts_in_4"
                ],
                [
                  "pe5_ico->dma",
                  "self->dma_5"
                ],
                [
                  "pe5_ico->dma_alias",
                  "self->dma_alias_5"
                ],
                [
                  "pe5_ico->event_unit",
                  "self->event_unit_5"
                ],
                [
                  "pe5_ico->event_unit_alias",
                  "self->event_unit_alias_5"
                ],
                [
                  "pe5_ico->cluster_ico",
                  "self->cluster_ico"
                ],
                [
                  "pe5_ico->l1",
                  "interleaver->in_5"
                ],
                [
                  "pe5_ico->l1_alias",
                  "interleaver->in_5"
                ],
                [
                  "pe5_ico->l1_ts",
                  "interleaver->ts_in_5"
                ],
                [
                  "pe5_ico->l1_ts_alias",
                  "interleaver->ts_in_5"
                ],
                [
                  "pe6_ico->dma",
                  "self->dma_6"
                ],
                [
                  "pe6_ico->dma_alias",
                  "self->dma_alias_6"
                ],
                [
                  "pe6_ico->event_unit",
                  "self->event_unit_6"
                ],
                [
                  "pe6_ico->event_unit_alias",
                  "self->event_unit_alias_6"
                ],
                [
                  "pe6_ico->cluster_ico",
                  "self->cluster_ico"
                ],
                [
                  "pe6_ico->l1",
                  "interleaver->in_6"
                ],
                [
                  "pe6_ico->l1_alias",
                  "interleaver->in_6"
                ],
                [
                  "pe6_ico->l1_ts",
                  "interleaver->ts_in_6"
                ],
                [
                  "pe6_ico->l1_ts_alias",
                  "interleaver->ts_in_6"
                ],
                [
                  "pe7_ico->dma",
                  "self->dma_7"
                ],
                [
                  "pe7_ico->dma_alias",
                  "self->dma_alias_7"
                ],
                [
                  "pe7_ico->event_unit",
                  "self->event_unit_7"
                ],
                [
                  "pe7_ico->event_unit_alias",
                  "self->event_unit_alias_7"
                ],
                [
                  "pe7_ico->cluster_ico",
                  "self->cluster_ico"
                ],
                [
                  "pe7_ico->l1",
                  "interleaver->in_7"
                ],
                [
                  "pe7_ico->l1_alias",
                  "interleaver->in_7"
                ],
                [
                  "pe7_ico->l1_ts",
                  "interleaver->ts_in_7"
                ],
                [
                  "pe7_ico->l1_ts_alias",
                  "interleaver->ts_in_7"
                ],
                [
                  "interleaver->out_0",
                  "self->out_0"
                ],
                [
                  "interleaver->out_1",
                  "self->out_1"
                ],
                [
                  "interleaver->out_2",
                  "self->out_2"
                ],
                [
                  "interleaver->out_3",
                  "self->out_3"
                ],
                [
                  "interleaver->out_4",
                  "self->out_4"
                ],
                [
                  "interleaver->out_5",
                  "self->out_5"
                ],
                [
                  "interleaver->out_6",
                  "self->out_6"
                ],
                [
                  "interleaver->out_7",
                  "self->out_7"
                ],
                [
                  "interleaver->out_8",
                  "self->out_8"
                ],
                [
                  "interleaver->out_9",
                  "self->out_9"
                ],
                [
                  "interleaver->out_10",
                  "self->out_10"
                ],
                [
                  "interleaver->out_11",
                  "self->out_11"
                ],
                [
                  "interleaver->out_12",
                  "self->out_12"
                ],
                [
                  "interleaver->out_13",
                  "self->out_13"
                ],
                [
                  "interleaver->out_14",
                  "self->out_14"
                ],
                [
                  "interleaver->out_15",
                  "self->out_15"
                ],
                [
                  "ext2loc->out",
                  "interleaver->in_8"
                ],
                [
                  "ext2loc_ts->out",
                  "interleaver->ts_in_8"
                ]
              ],
              "pe0_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "l1": {
                    "base": "0x10000000",
                    "size": "0x00010000",
                    "remove_offset": "0x10000000",
                    "id": 0
                  },
                  "l1_ts": {
                    "base": "0x10100000",
                    "size": "0x00010000",
                    "remove_offset": "0x10100000",
                    "id": 0
                  },
                  "event_unit": {
                    "base": "0x10204000",
                    "size": "0x00000400",
                    "remove_offset": "0x10204000",
                    "id": 1
                  },
                  "dma": {
                    "base": "0x10204400",
                    "size": "0x00000400",
                    "remove_offset": "0x10204400",
                    "id": 1
                  },
                  "l1_alias": {
                    "base": "0x0",
                    "size": "0x00010000",
                    "remove_offset": "0x0",
                    "id": 0
                  },
                  "l1_ts_alias": {
                    "base": "0x100000",
                    "size": "0x00010000",
                    "remove_offset": "0x100000",
                    "id": 0
                  },
                  "event_unit_alias": {
                    "base": "0x204000",
                    "size": "0x00000400",
                    "remove_offset": "0x204000",
                    "id": 1
                  },
                  "dma_alias": {
                    "base": "0x204400",
                    "size": "0x00000400",
                    "remove_offset": "0x204400",
                    "id": 1
                  },
                  "cluster_ico": {
                    "id": 1
                  }
                },
                "vp_ports": [
                  "dma",
                  "dma_alias",
                  "event_unit",
                  "event_unit_alias",
                  "cluster_ico",
                  "l1",
                  "l1_alias",
                  "l1_ts",
                  "l1_ts_alias",
                  "nb_read[1]",
                  "nb_write[1]",
                  "read_stalls[1]",
                  "write_stalls[1]",
                  "stalls[0]",
                  "input"
                ]
              },
              "pe1_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "l1": {
                    "base": "0x10000000",
                    "size": "0x00010000",
                    "remove_offset": "0x10000000",
                    "id": 0
                  },
                  "l1_ts": {
                    "base": "0x10100000",
                    "size": "0x00010000",
                    "remove_offset": "0x10100000",
                    "id": 0
                  },
                  "event_unit": {
                    "base": "0x10204000",
                    "size": "0x00000400",
                    "remove_offset": "0x10204000",
                    "id": 1
                  },
                  "dma": {
                    "base": "0x10204400",
                    "size": "0x00000400",
                    "remove_offset": "0x10204400",
                    "id": 1
                  },
                  "l1_alias": {
                    "base": "0x0",
                    "size": "0x00010000",
                    "remove_offset": "0x0",
                    "id": 0
                  },
                  "l1_ts_alias": {
                    "base": "0x100000",
                    "size": "0x00010000",
                    "remove_offset": "0x100000",
                    "id": 0
                  },
                  "event_unit_alias": {
                    "base": "0x204000",
                    "size": "0x00000400",
                    "remove_offset": "0x204000",
                    "id": 1
                  },
                  "dma_alias": {
                    "base": "0x204400",
                    "size": "0x00000400",
                    "remove_offset": "0x204400",
                    "id": 1
                  },
                  "cluster_ico": {
                    "id": 1
                  }
                },
                "vp_ports": [
                  "dma",
                  "dma_alias",
                  "event_unit",
                  "event_unit_alias",
                  "cluster_ico",
                  "l1",
                  "l1_alias",
                  "l1_ts",
                  "l1_ts_alias",
                  "nb_read[1]",
                  "nb_write[1]",
                  "read_stalls[1]",
                  "write_stalls[1]",
                  "stalls[0]",
                  "input"
                ]
              },
              "pe2_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "l1": {
                    "base": "0x10000000",
                    "size": "0x00010000",
                    "remove_offset": "0x10000000",
                    "id": 0
                  },
                  "l1_ts": {
                    "base": "0x10100000",
                    "size": "0x00010000",
                    "remove_offset": "0x10100000",
                    "id": 0
                  },
                  "event_unit": {
                    "base": "0x10204000",
                    "size": "0x00000400",
                    "remove_offset": "0x10204000",
                    "id": 1
                  },
                  "dma": {
                    "base": "0x10204400",
                    "size": "0x00000400",
                    "remove_offset": "0x10204400",
                    "id": 1
                  },
                  "l1_alias": {
                    "base": "0x0",
                    "size": "0x00010000",
                    "remove_offset": "0x0",
                    "id": 0
                  },
                  "l1_ts_alias": {
                    "base": "0x100000",
                    "size": "0x00010000",
                    "remove_offset": "0x100000",
                    "id": 0
                  },
                  "event_unit_alias": {
                    "base": "0x204000",
                    "size": "0x00000400",
                    "remove_offset": "0x204000",
                    "id": 1
                  },
                  "dma_alias": {
                    "base": "0x204400",
                    "size": "0x00000400",
                    "remove_offset": "0x204400",
                    "id": 1
                  },
                  "cluster_ico": {
                    "id": 1
                  }
                },
                "vp_ports": [
                  "dma",
                  "dma_alias",
                  "event_unit",
                  "event_unit_alias",
                  "cluster_ico",
                  "l1",
                  "l1_alias",
                  "l1_ts",
                  "l1_ts_alias",
                  "nb_read[1]",
                  "nb_write[1]",
                  "read_stalls[1]",
                  "write_stalls[1]",
                  "stalls[0]",
                  "input"
                ]
              },
              "pe3_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "l1": {
                    "base": "0x10000000",
                    "size": "0x00010000",
                    "remove_offset": "0x10000000",
                    "id": 0
                  },
                  "l1_ts": {
                    "base": "0x10100000",
                    "size": "0x00010000",
                    "remove_offset": "0x10100000",
                    "id": 0
                  },
                  "event_unit": {
                    "base": "0x10204000",
                    "size": "0x00000400",
                    "remove_offset": "0x10204000",
                    "id": 1
                  },
                  "dma": {
                    "base": "0x10204400",
                    "size": "0x00000400",
                    "remove_offset": "0x10204400",
                    "id": 1
                  },
                  "l1_alias": {
                    "base": "0x0",
                    "size": "0x00010000",
                    "remove_offset": "0x0",
                    "id": 0
                  },
                  "l1_ts_alias": {
                    "base": "0x100000",
                    "size": "0x00010000",
                    "remove_offset": "0x100000",
                    "id": 0
                  },
                  "event_unit_alias": {
                    "base": "0x204000",
                    "size": "0x00000400",
                    "remove_offset": "0x204000",
                    "id": 1
                  },
                  "dma_alias": {
                    "base": "0x204400",
                    "size": "0x00000400",
                    "remove_offset": "0x204400",
                    "id": 1
                  },
                  "cluster_ico": {
                    "id": 1
                  }
                },
                "vp_ports": [
                  "dma",
                  "dma_alias",
                  "event_unit",
                  "event_unit_alias",
                  "cluster_ico",
                  "l1",
                  "l1_alias",
                  "l1_ts",
                  "l1_ts_alias",
                  "nb_read[1]",
                  "nb_write[1]",
                  "read_stalls[1]",
                  "write_stalls[1]",
                  "stalls[0]",
                  "input"
                ]
              },
              "pe4_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "l1": {
                    "base": "0x10000000",
                    "size": "0x00010000",
                    "remove_offset": "0x10000000",
                    "id": 0
                  },
                  "l1_ts": {
                    "base": "0x10100000",
                    "size": "0x00010000",
                    "remove_offset": "0x10100000",
                    "id": 0
                  },
                  "event_unit": {
                    "base": "0x10204000",
                    "size": "0x00000400",
                    "remove_offset": "0x10204000",
                    "id": 1
                  },
                  "dma": {
                    "base": "0x10204400",
                    "size": "0x00000400",
                    "remove_offset": "0x10204400",
                    "id": 1
                  },
                  "l1_alias": {
                    "base": "0x0",
                    "size": "0x00010000",
                    "remove_offset": "0x0",
                    "id": 0
                  },
                  "l1_ts_alias": {
                    "base": "0x100000",
                    "size": "0x00010000",
                    "remove_offset": "0x100000",
                    "id": 0
                  },
                  "event_unit_alias": {
                    "base": "0x204000",
                    "size": "0x00000400",
                    "remove_offset": "0x204000",
                    "id": 1
                  },
                  "dma_alias": {
                    "base": "0x204400",
                    "size": "0x00000400",
                    "remove_offset": "0x204400",
                    "id": 1
                  },
                  "cluster_ico": {
                    "id": 1
                  }
                },
                "vp_ports": [
                  "dma",
                  "dma_alias",
                  "event_unit",
                  "event_unit_alias",
                  "cluster_ico",
                  "l1",
                  "l1_alias",
                  "l1_ts",
                  "l1_ts_alias",
                  "nb_read[1]",
                  "nb_write[1]",
                  "read_stalls[1]",
                  "write_stalls[1]",
                  "stalls[0]",
                  "input"
                ]
              },
              "pe5_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "l1": {
                    "base": "0x10000000",
                    "size": "0x00010000",
                    "remove_offset": "0x10000000",
                    "id": 0
                  },
                  "l1_ts": {
                    "base": "0x10100000",
                    "size": "0x00010000",
                    "remove_offset": "0x10100000",
                    "id": 0
                  },
                  "event_unit": {
                    "base": "0x10204000",
                    "size": "0x00000400",
                    "remove_offset": "0x10204000",
                    "id": 1
                  },
                  "dma": {
                    "base": "0x10204400",
                    "size": "0x00000400",
                    "remove_offset": "0x10204400",
                    "id": 1
                  },
                  "l1_alias": {
                    "base": "0x0",
                    "size": "0x00010000",
                    "remove_offset": "0x0",
                    "id": 0
                  },
                  "l1_ts_alias": {
                    "base": "0x100000",
                    "size": "0x00010000",
                    "remove_offset": "0x100000",
                    "id": 0
                  },
                  "event_unit_alias": {
                    "base": "0x204000",
                    "size": "0x00000400",
                    "remove_offset": "0x204000",
                    "id": 1
                  },
                  "dma_alias": {
                    "base": "0x204400",
                    "size": "0x00000400",
                    "remove_offset": "0x204400",
                    "id": 1
                  },
                  "cluster_ico": {
                    "id": 1
                  }
                },
                "vp_ports": [
                  "dma",
                  "dma_alias",
                  "event_unit",
                  "event_unit_alias",
                  "cluster_ico",
                  "l1",
                  "l1_alias",
                  "l1_ts",
                  "l1_ts_alias",
                  "nb_read[1]",
                  "nb_write[1]",
                  "read_stalls[1]",
                  "write_stalls[1]",
                  "stalls[0]",
                  "input"
                ]
              },
              "pe6_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "l1": {
                    "base": "0x10000000",
                    "size": "0x00010000",
                    "remove_offset": "0x10000000",
                    "id": 0
                  },
                  "l1_ts": {
                    "base": "0x10100000",
                    "size": "0x00010000",
                    "remove_offset": "0x10100000",
                    "id": 0
                  },
                  "event_unit": {
                    "base": "0x10204000",
                    "size": "0x00000400",
                    "remove_offset": "0x10204000",
                    "id": 1
                  },
                  "dma": {
                    "base": "0x10204400",
                    "size": "0x00000400",
                    "remove_offset": "0x10204400",
                    "id": 1
                  },
                  "l1_alias": {
                    "base": "0x0",
                    "size": "0x00010000",
                    "remove_offset": "0x0",
                    "id": 0
                  },
                  "l1_ts_alias": {
                    "base": "0x100000",
                    "size": "0x00010000",
                    "remove_offset": "0x100000",
                    "id": 0
                  },
                  "event_unit_alias": {
                    "base": "0x204000",
                    "size": "0x00000400",
                    "remove_offset": "0x204000",
                    "id": 1
                  },
                  "dma_alias": {
                    "base": "0x204400",
                    "size": "0x00000400",
                    "remove_offset": "0x204400",
                    "id": 1
                  },
                  "cluster_ico": {
                    "id": 1
                  }
                },
                "vp_ports": [
                  "dma",
                  "dma_alias",
                  "event_unit",
                  "event_unit_alias",
                  "cluster_ico",
                  "l1",
                  "l1_alias",
                  "l1_ts",
                  "l1_ts_alias",
                  "nb_read[1]",
                  "nb_write[1]",
                  "read_stalls[1]",
                  "write_stalls[1]",
                  "stalls[0]",
                  "input"
                ]
              },
              "pe7_ico": {
                "vp_class": "interco/router",
                "vp_component": "interco.router_impl",
                "bandwidth": 4,
                "latency": 0,
                "id": 0,
                "mappings": {
                  "l1": {
                    "base": "0x10000000",
                    "size": "0x00010000",
                    "remove_offset": "0x10000000",
                    "id": 0
                  },
                  "l1_ts": {
                    "base": "0x10100000",
                    "size": "0x00010000",
                    "remove_offset": "0x10100000",
                    "id": 0
                  },
                  "event_unit": {
                    "base": "0x10204000",
                    "size": "0x00000400",
                    "remove_offset": "0x10204000",
                    "id": 1
                  },
                  "dma": {
                    "base": "0x10204400",
                    "size": "0x00000400",
                    "remove_offset": "0x10204400",
                    "id": 1
                  },
                  "l1_alias": {
                    "base": "0x0",
                    "size": "0x00010000",
                    "remove_offset": "0x0",
                    "id": 0
                  },
                  "l1_ts_alias": {
                    "base": "0x100000",
                    "size": "0x00010000",
                    "remove_offset": "0x100000",
                    "id": 0
                  },
                  "event_unit_alias": {
                    "base": "0x204000",
                    "size": "0x00000400",
                    "remove_offset": "0x204000",
                    "id": 1
                  },
                  "dma_alias": {
                    "base": "0x204400",
                    "size": "0x00000400",
                    "remove_offset": "0x204400",
                    "id": 1
                  },
                  "cluster_ico": {
                    "id": 1
                  }
                },
                "vp_ports": [
                  "dma",
                  "dma_alias",
                  "event_unit",
                  "event_unit_alias",
                  "cluster_ico",
                  "l1",
                  "l1_alias",
                  "l1_ts",
                  "l1_ts_alias",
                  "nb_read[1]",
                  "nb_write[1]",
                  "read_stalls[1]",
                  "write_stalls[1]",
                  "stalls[0]",
                  "input"
                ]
              },
              "interleaver": {
                "vp_class": "pulp/cluster/l1_interleaver",
                "vp_component": "pulp.cluster.l1_interleaver_impl",
                "nb_slaves": 16,
                "nb_masters": 16,
                "stage_bits": 0,
                "interleaving_bits": 2,
                "vp_ports": [
                  "out_0",
                  "out_1",
                  "out_2",
                  "out_3",
                  "out_4",
                  "out_5",
                  "out_6",
                  "out_7",
                  "out_8",
                  "out_9",
                  "out_10",
                  "out_11",
                  "out_12",
                  "out_13",
                  "out_14",
                  "out_15",
                  "in_8",
                  "in_9",
                  "in_10",
                  "in_11",
                  "in_12",
                  "in_13",
                  "in_14",
                  "in_15",
                  "in_0",
                  "in_1",
                  "in_2",
                  "in_3",
                  "in_4",
                  "in_5",
                  "in_6",
                  "in_7",
                  "ts_in_0",
                  "ts_in_1",
                  "ts_in_2",
                  "ts_in_3",
                  "ts_in_4",
                  "ts_in_5",
                  "ts_in_6",
                  "ts_in_7",
                  "ts_in_8"
                ]
              },
              "ext2loc": {
                "vp_class": "interco/converter",
                "vp_component": "interco.converter_impl",
                "output_width": 4,
                "output_align": 4,
                "vp_ports": [
                  "out",
                  "input"
                ]
              },
              "ext2loc_ts": {
                "vp_class": "interco/converter",
                "vp_component": "interco.converter_impl",
                "output_width": 4,
                "output_align": 4,
                "vp_ports": [
                  "out",
                  "input"
                ]
              }
            },
            "l1": {
              "vp_class": null,
              "vp_component": "",
              "size": 65536,
              "alias": true,
              "has_l1_alias": true,
              "alias_base": "0x00000000",
              "map_base": "0x10000000",
              "nb_banks": 16,
              "vp_comps": [
                "bank0",
                "bank1",
                "bank2",
                "bank3",
                "bank4",
                "bank5",
                "bank6",
                "bank7",
                "bank8",
                "bank9",
                "bank10",
                "bank11",
                "bank12",
                "bank13",
                "bank14",
                "bank15"
              ],
              "vp_ports": [
                "in_0",
                "in_1",
                "in_2",
                "in_3",
                "in_4",
                "in_5",
                "in_6",
                "in_7",
                "in_8",
                "in_9",
                "in_10",
                "in_11",
                "in_12",
                "in_13",
                "in_14",
                "in_15"
              ],
              "vp_bindings": [
                [
                  "self->in_0",
                  "bank0->input"
                ],
                [
                  "self->in_1",
                  "bank1->input"
                ],
                [
                  "self->in_2",
                  "bank2->input"
                ],
                [
                  "self->in_3",
                  "bank3->input"
                ],
                [
                  "self->in_4",
                  "bank4->input"
                ],
                [
                  "self->in_5",
                  "bank5->input"
                ],
                [
                  "self->in_6",
                  "bank6->input"
                ],
                [
                  "self->in_7",
                  "bank7->input"
                ],
                [
                  "self->in_8",
                  "bank8->input"
                ],
                [
                  "self->in_9",
                  "bank9->input"
                ],
                [
                  "self->in_10",
                  "bank10->input"
                ],
                [
                  "self->in_11",
                  "bank11->input"
                ],
                [
                  "self->in_12",
                  "bank12->input"
                ],
                [
                  "self->in_13",
                  "bank13->input"
                ],
                [
                  "self->in_14",
                  "bank14->input"
                ],
                [
                  "self->in_15",
                  "bank15->input"
                ]
              ],
              "bank0": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": true,
                "vp_ports": [
                  "input"
                ]
              },
              "bank1": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank2": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank3": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank4": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank5": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank6": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank7": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank8": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank9": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank10": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank11": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank12": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank13": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank14": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              },
              "bank15": {
                "size": 4096,
                "width_bits": 2,
                "vp_class": "memory/memory",
                "vp_component": "memory.memory_impl",
                "power_models": {
                  "idle": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00000501264031"
                          }
                        }
                      }
                    }
                  },
                  "leakage": {
                    "leakage": {
                      "type": "linear",
                      "unit": "W",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "0.00001707210625"
                          }
                        }
                      }
                    }
                  },
                  "read_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "read_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_8": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_16": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  },
                  "write_32": {
                    "dynamic": {
                      "type": "linear",
                      "unit": "pJ",
                      "values": {
                        "25": {
                          "1.2": {
                            "any": "2.124280487"
                          }
                        }
                      }
                    }
                  }
                },
                "power_trigger": false,
                "vp_ports": [
                  "input"
                ]
              }
            },
            "icache": {
              "vp_class": "cache/cache",
              "vp_component": "cache.cache_impl",
              "nb_ports": 8,
              "nb_sets_bits": 6,
              "nb_ways_bits": 2,
              "line_size_bits": 4,
              "vp_ports": [
                "refill",
                "enable",
                "flush",
                "flush_line",
                "flush_line_addr",
                "input_0",
                "input_1",
                "input_2",
                "input_3",
                "input_4",
                "input_5",
                "input_6",
                "input_7"
              ]
            },
            "dma": {
              "version": 6,
              "hal_files": [
                "hal/dma/mchan_v6.h"
              ],
              "archi_files": [
                "archi/dma/mchan_v6.h"
              ],
              "vp_class": "pulp/mchan/mchan_v6",
              "vp_component": "pulp.mchan.mchan_v6_impl",
              "nb_channels": 9,
              "core_queue_depth": 2,
              "global_queue_depth": 8,
              "is_64": false,
              "max_nb_ext_read_req": 8,
              "max_nb_ext_write_req": 8,
              "max_burst_length": 256,
              "nb_loc_ports": 4,
              "tcdm_addr_width": 20,
              "vp_ports": [
                "ext_irq_itf",
                "event_itf_0",
                "event_itf_1",
                "event_itf_2",
                "event_itf_3",
                "event_itf_4",
                "event_itf_5",
                "event_itf_6",
                "event_itf_7",
                "irq_itf_0",
                "irq_itf_1",
                "irq_itf_2",
                "irq_itf_3",
                "irq_itf_4",
                "irq_itf_5",
                "irq_itf_6",
                "irq_itf_7",
                "ext_itf",
                "loc_itf_0",
                "loc_itf_1",
                "loc_itf_2",
                "loc_itf_3",
                "in_8",
                "in_0",
                "in_1",
                "in_2",
                "in_3",
                "in_4",
                "in_5",
                "in_6",
                "in_7"
              ]
            },
            "cluster_ctrl": {
              "version": 2,
              "vp_class": "pulp/cluster/cluster_ctrl_v2",
              "vp_component": "pulp.cluster.cluster_ctrl_v2_impl",
              "hal_files": [
                "hal/cluster_ctrl/cluster_ctrl_v2.h"
              ],
              "archi_files": [
                "archi/cluster_ctrl/cluster_ctrl_v2.h"
              ],
              "nb_core": 8,
              "vp_ports": [
                "bootaddr_0",
                "bootaddr_1",
                "bootaddr_2",
                "bootaddr_3",
                "bootaddr_4",
                "bootaddr_5",
                "bootaddr_6",
                "bootaddr_7",
                "fetchen_0",
                "fetchen_1",
                "fetchen_2",
                "fetchen_3",
                "fetchen_4",
                "fetchen_5",
                "fetchen_6",
                "fetchen_7",
                "halt_0",
                "halt_1",
                "halt_2",
                "halt_3",
                "halt_4",
                "halt_5",
                "halt_6",
                "halt_7",
                "input",
                "core_halt_0",
                "core_halt_1",
                "core_halt_2",
                "core_halt_3",
                "core_halt_4",
                "core_halt_5",
                "core_halt_6",
                "core_halt_7"
              ]
            },
            "event_unit": {
              "version": 3,
              "nb_core": 8,
              "vp_class": "pulp/event_unit/eu_v3",
              "vp_component": "pulp.event_unit.eu_v3_impl",
              "hal_files": [
                "hal/eu/eu_v3.h"
              ],
              "archi_files": [
                "archi/eu/eu_v3.h"
              ],
              "regmap": {
                "areas": {
                  "global": {
                    "cores": {
                      "offset": "0x0000",
                      "size": "0x0400",
                      "areas": {
                        "core": {
                          "offset": "0x0000",
                          "size": "0x0040",
                          "number": 16
                        }
                      }
                    },
                    "barriers": {
                      "offset": "0x0400",
                      "size": "0x0200",
                      "areas": {
                        "barrier": {
                          "offset": "0x0000",
                          "size": "0x0020",
                          "number": 16
                        }
                      }
                    },
                    "sw_events": {
                      "offset": "0x0600",
                      "size": "0x0100"
                    },
                    "soc_events": {
                      "offset": "0x0700",
                      "size": "0x0080"
                    },
                    "ext_events": {
                      "offset": "0x0780",
                      "size": "0x0080"
                    },
                    "mutex": {
                      "size": "0x0040"
                    },
                    "dispatch": {
                      "size": "0x0040"
                    }
                  },
                  "demux": {
                    "core": {
                      "offset": "0x0000",
                      "size": "0x0040"
                    },
                    "dispatch": {
                      "offset": "0x0080",
                      "size": "0x0040"
                    },
                    "mutex": {
                      "offset": "0x00C0",
                      "size": "0x0040"
                    },
                    "sw_events": {
                      "offset": "0x0100",
                      "size": "0x0100"
                    },
                    "barriers": {
                      "offset": "0x0200",
                      "size": "0x0200"
                    }
                  }
                },
                "registers": {
                  "mask": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x00",
                    "width": 32
                  },
                  "mask_and": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x04",
                    "width": 32
                  },
                  "mask_or": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x08",
                    "width": 32
                  },
                  "mask_irq": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x0C",
                    "width": 32
                  },
                  "mask_irq_and": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x10",
                    "width": 32
                  },
                  "mask_irq_or": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x14",
                    "width": 32
                  },
                  "status": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x18",
                    "width": 32
                  },
                  "buffer": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x1C",
                    "width": 32
                  },
                  "buffer_masked": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x20",
                    "width": 32
                  },
                  "buffer_irq_masked": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x24",
                    "width": 32
                  },
                  "buffer_clear": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x28",
                    "width": 32
                  },
                  "sw_events_mask": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x2C",
                    "width": 32
                  },
                  "sw_events_mask_and": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x30",
                    "width": 32
                  },
                  "sw_events_mask_or": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x34",
                    "width": 32
                  },
                  "event_wait": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x38",
                    "width": 32
                  },
                  "event_wait_clear": {
                    "areas": [
                      "demux/core",
                      "global/cores/core"
                    ],
                    "offset": "0x3C",
                    "width": 32
                  },
                  "trigg_sw_event": {
                    "areas": [
                      "demux/sw_events",
                      "global/sw_events"
                    ],
                    "offset": "0x00",
                    "width": 32,
                    "number": 16
                  },
                  "trigg_sw_event_wait": {
                    "areas": [
                      "demux/sw_events",
                      "global/sw_events"
                    ],
                    "offset": "0x40",
                    "width": 32,
                    "number": 16
                  },
                  "trigg_sw_event_wait_clear": {
                    "areas": [
                      "demux/sw_events",
                      "global/sw_events"
                    ],
                    "offset": "0x80",
                    "width": 32,
                    "number": 16
                  },
                  "soc_events_current_event": {
                    "areas": [
                      "global/soc_events"
                    ],
                    "offset": "0x00",
                    "width": 32,
                    "bitfield": {
                      "event_id": {
                        "bit": 0,
                        "width": 9
                      },
                      "valid": {
                        "bit": 31,
                        "width": 1
                      }
                    }
                  },
                  "barr_trigger_mask": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x00",
                    "width": 32
                  },
                  "barr_status": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x04",
                    "width": 32
                  },
                  "barr_status_summary": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x08",
                    "width": 32
                  },
                  "barr_target_mask": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x0C",
                    "width": 32
                  },
                  "barr_trigger": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x10",
                    "width": 32
                  },
                  "barr_trigger_self": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x14",
                    "width": 32
                  },
                  "barr_trigger_wait": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x18",
                    "width": 32
                  },
                  "barr_trigger_wait_clear": {
                    "areas": [
                      "demux/barriers",
                      "global/barriers"
                    ],
                    "offset": "0x1C",
                    "width": 32
                  },
                  "dispatch_fifo_access": {
                    "areas": [
                      "demux/dispatch",
                      "global/dispatch"
                    ],
                    "offset": "0x00",
                    "width": 32
                  },
                  "dispatch_team_config": {
                    "areas": [
                      "demux/dispatch",
                      "global/dispatch"
                    ],
                    "offset": "0x04",
                    "width": 32
                  }
                }
              },
              "properties": {
                "dispatch": {
                  "size": 8
                },
                "mutex": {
                  "nb_mutexes": 1
                },
                "barriers": {
                  "nb_barriers": 8
                },
                "soc_event": {
                  "nb_fifo_events": 8,
                  "fifo_event": 27
                },
                "events": {
                  "barrier": 16,
                  "mutex": 17,
                  "dispatch": 18
                }
              },
              "vp_ports": [
                "irq_req_0",
                "irq_req_1",
                "irq_req_2",
                "irq_req_3",
                "irq_req_4",
                "irq_req_5",
                "irq_req_6",
                "irq_req_7",
                "clock_0",
                "clock_1",
                "clock_2",
                "clock_3",
                "clock_4",
                "clock_5",
                "clock_6",
                "clock_7",
                "input",
                "in_event_12_pe_0",
                "in_event_12_pe_1",
                "in_event_12_pe_2",
                "in_event_12_pe_3",
                "in_event_12_pe_4",
                "in_event_12_pe_5",
                "in_event_12_pe_6",
                "in_event_12_pe_7",
                "demux_in_0",
                "demux_in_1",
                "demux_in_2",
                "demux_in_3",
                "demux_in_4",
                "demux_in_5",
                "demux_in_6",
                "demux_in_7",
                "in_event_8_pe_0",
                "in_event_8_pe_1",
                "in_event_8_pe_2",
                "in_event_8_pe_3",
                "in_event_8_pe_4",
                "in_event_8_pe_5",
                "in_event_8_pe_6",
                "in_event_8_pe_7",
                "in_event_9_pe_0",
                "in_event_9_pe_1",
                "in_event_9_pe_2",
                "in_event_9_pe_3",
                "in_event_9_pe_4",
                "in_event_9_pe_5",
                "in_event_9_pe_6",
                "in_event_9_pe_7",
                "in_event_22_pe_0",
                "in_event_22_pe_1",
                "in_event_22_pe_2",
                "in_event_22_pe_3",
                "in_event_22_pe_4",
                "in_event_22_pe_5",
                "in_event_22_pe_6",
                "in_event_22_pe_7",
                "in_event_10_pe_0",
                "in_event_10_pe_1",
                "in_event_10_pe_2",
                "in_event_10_pe_3",
                "in_event_10_pe_4",
                "in_event_10_pe_5",
                "in_event_10_pe_6",
                "in_event_10_pe_7",
                "in_event_11_pe_0",
                "in_event_11_pe_1",
                "in_event_11_pe_2",
                "in_event_11_pe_3",
                "in_event_11_pe_4",
                "in_event_11_pe_5",
                "in_event_11_pe_6",
                "in_event_11_pe_7",
                "irq_ack_0",
                "irq_ack_1",
                "irq_ack_2",
                "irq_ack_3",
                "irq_ack_4",
                "irq_ack_5",
                "irq_ack_6",
                "irq_ack_7"
              ]
            },
            "timer": {
              "version": 2,
              "vp_class": "pulp/timer/timer_v2",
              "vp_component": "pulp.timer.timer_v2_impl",
              "hal_files": [
                "hal/timer/timer_v2.h"
              ],
              "archi_files": [
                "archi/timer/timer_v2.h"
              ],
              "vp_ports": [
                "irq_itf_0",
                "irq_itf_1",
                "input",
                "ref_clock"
              ]
            },
            "hwce": {
              "version": 4,
              "hal_files": [
                "hal/hwce/hwce_v4.h"
              ],
              "archi_files": [
                "archi/hwce/hwce_v4.h"
              ],
              "vp_class": "pulp/hwce/hwce_v4",
              "vp_component": "pulp.hwce.hwce_v4_impl",
              "vp_ports": [
                "irq",
                "out_0",
                "out_1",
                "out_2",
                "out_3",
                "input"
              ]
            },
            "icache_ctrl": {
              "version": 2,
              "vp_class": "pulp/icache_ctrl/icache_ctrl_v2",
              "vp_component": "pulp.icache_ctrl.icache_ctrl_v2_impl",
              "hal_files": [
                "hal/icache/icache_ctrl_v2.h"
              ],
              "vp_ports": [
                "enable",
                "flush",
                "flush_line",
                "flush_line_addr",
                "input"
              ]
            },
            "pe": {
              "vp_class": "cpu/iss/iss",
              "vp_component": "cpu/iss/iss_riscy",
              "bootaddr_offset": "0x80",
              "version": "ri5cyv2",
              "archi": "riscv",
              "implementation": "ri5cy",
              "gv_isa": [
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--itc-external-req",
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--gap8",
                "--itc-external-req"
              ],
              "march": "imcXgap8",
              "isa": "rv32imcXgap8",
              "priv_version": 1.9,
              "perf_counters": true,
              "features": [
                "misaligned",
                "perf"
              ],
              "hal_files": [
                "hal/riscv/riscv_v4.h",
                "hal/riscv/types.h"
              ],
              "archi_files": [
                "archi/riscv/priv_1_9.h",
                "archi/riscv/builtins_v2.h",
                "archi/riscv/builtins_v2_emu.h",
                "archi/riscv/pcer_v1.h"
              ],
              "defines": [
                "ARCHI_CORE_HAS_PULPV2",
                "CORE_PULP_BUILTINS",
                "ARCHI_CORE_HAS_PULPV2",
                "ARCHI_CORE_HAS_CPLX",
                "ARCHI_CORE_HAS_SECURITY"
              ],
              "fetch_enable": false,
              "boot_addr": "0x1C000000",
              "debug_binaries": [],
              "power_models": {
                "clock_gated": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.0000016"
                        }
                      }
                    }
                  }
                },
                "insn": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "pJ",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "2.4854524"
                        },
                        "1.1": {
                          "any": "1.2"
                        }
                      }
                    }
                  }
                },
                "leakage": {
                  "leakage": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.000030"
                        }
                      }
                    }
                  }
                }
              },
              "iss_class": "iss_riscy",
              "cluster_id": 0,
              "core_id": 0
            },
            "pe0": {
              "vp_class": "cpu/iss/iss",
              "vp_component": "cpu/iss/iss_riscy",
              "bootaddr_offset": "0x80",
              "version": "ri5cyv2",
              "archi": "riscv",
              "implementation": "ri5cy",
              "gv_isa": [
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--itc-external-req",
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--gap8",
                "--itc-external-req"
              ],
              "march": "imcXgap8",
              "isa": "rv32imcXgap8",
              "priv_version": 1.9,
              "perf_counters": true,
              "features": [
                "misaligned",
                "perf"
              ],
              "hal_files": [
                "hal/riscv/riscv_v4.h",
                "hal/riscv/types.h"
              ],
              "archi_files": [
                "archi/riscv/priv_1_9.h",
                "archi/riscv/builtins_v2.h",
                "archi/riscv/builtins_v2_emu.h",
                "archi/riscv/pcer_v1.h"
              ],
              "defines": [
                "ARCHI_CORE_HAS_PULPV2",
                "CORE_PULP_BUILTINS",
                "ARCHI_CORE_HAS_PULPV2",
                "ARCHI_CORE_HAS_CPLX",
                "ARCHI_CORE_HAS_SECURITY"
              ],
              "fetch_enable": null,
              "boot_addr": null,
              "debug_binaries": [],
              "power_models": {
                "clock_gated": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.0000016"
                        }
                      }
                    }
                  }
                },
                "insn": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "pJ",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "2.4854524"
                        },
                        "1.1": {
                          "any": "1.2"
                        }
                      }
                    }
                  }
                },
                "leakage": {
                  "leakage": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.000030"
                        }
                      }
                    }
                  }
                }
              },
              "iss_class": "iss_riscy",
              "cluster_id": 0,
              "core_id": 0,
              "vp_ports": [
                "halt_status",
                "data",
                "fetch",
                "irq_ack",
                "ext_counter[11]",
                "ext_counter[12]",
                "ext_counter[13]",
                "ext_counter[14]",
                "ext_counter[15]",
                "flush_cache",
                "dbg_unit",
                "bootaddr",
                "fetchen",
                "halt",
                "irq_req",
                "clock"
              ]
            },
            "pe1": {
              "vp_class": "cpu/iss/iss",
              "vp_component": "cpu/iss/iss_riscy",
              "bootaddr_offset": "0x80",
              "version": "ri5cyv2",
              "archi": "riscv",
              "implementation": "ri5cy",
              "gv_isa": [
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--itc-external-req",
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--gap8",
                "--itc-external-req"
              ],
              "march": "imcXgap8",
              "isa": "rv32imcXgap8",
              "priv_version": 1.9,
              "perf_counters": true,
              "features": [
                "misaligned",
                "perf"
              ],
              "hal_files": [
                "hal/riscv/riscv_v4.h",
                "hal/riscv/types.h"
              ],
              "archi_files": [
                "archi/riscv/priv_1_9.h",
                "archi/riscv/builtins_v2.h",
                "archi/riscv/builtins_v2_emu.h",
                "archi/riscv/pcer_v1.h"
              ],
              "defines": [
                "ARCHI_CORE_HAS_PULPV2",
                "CORE_PULP_BUILTINS",
                "ARCHI_CORE_HAS_PULPV2",
                "ARCHI_CORE_HAS_CPLX",
                "ARCHI_CORE_HAS_SECURITY"
              ],
              "fetch_enable": null,
              "boot_addr": null,
              "debug_binaries": [],
              "power_models": {
                "clock_gated": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.0000016"
                        }
                      }
                    }
                  }
                },
                "insn": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "pJ",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "2.4854524"
                        },
                        "1.1": {
                          "any": "1.2"
                        }
                      }
                    }
                  }
                },
                "leakage": {
                  "leakage": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.000030"
                        }
                      }
                    }
                  }
                }
              },
              "iss_class": "iss_riscy",
              "cluster_id": 0,
              "core_id": 1,
              "vp_ports": [
                "halt_status",
                "data",
                "fetch",
                "irq_ack",
                "ext_counter[11]",
                "ext_counter[12]",
                "ext_counter[13]",
                "ext_counter[14]",
                "ext_counter[15]",
                "flush_cache",
                "dbg_unit",
                "bootaddr",
                "fetchen",
                "halt",
                "irq_req",
                "clock"
              ]
            },
            "pe2": {
              "vp_class": "cpu/iss/iss",
              "vp_component": "cpu/iss/iss_riscy",
              "bootaddr_offset": "0x80",
              "version": "ri5cyv2",
              "archi": "riscv",
              "implementation": "ri5cy",
              "gv_isa": [
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--itc-external-req",
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--gap8",
                "--itc-external-req"
              ],
              "march": "imcXgap8",
              "isa": "rv32imcXgap8",
              "priv_version": 1.9,
              "perf_counters": true,
              "features": [
                "misaligned",
                "perf"
              ],
              "hal_files": [
                "hal/riscv/riscv_v4.h",
                "hal/riscv/types.h"
              ],
              "archi_files": [
                "archi/riscv/priv_1_9.h",
                "archi/riscv/builtins_v2.h",
                "archi/riscv/builtins_v2_emu.h",
                "archi/riscv/pcer_v1.h"
              ],
              "defines": [
                "ARCHI_CORE_HAS_PULPV2",
                "CORE_PULP_BUILTINS",
                "ARCHI_CORE_HAS_PULPV2",
                "ARCHI_CORE_HAS_CPLX",
                "ARCHI_CORE_HAS_SECURITY"
              ],
              "fetch_enable": null,
              "boot_addr": null,
              "debug_binaries": [],
              "power_models": {
                "clock_gated": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.0000016"
                        }
                      }
                    }
                  }
                },
                "insn": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "pJ",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "2.4854524"
                        },
                        "1.1": {
                          "any": "1.2"
                        }
                      }
                    }
                  }
                },
                "leakage": {
                  "leakage": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.000030"
                        }
                      }
                    }
                  }
                }
              },
              "iss_class": "iss_riscy",
              "cluster_id": 0,
              "core_id": 2,
              "vp_ports": [
                "halt_status",
                "data",
                "fetch",
                "irq_ack",
                "ext_counter[11]",
                "ext_counter[12]",
                "ext_counter[13]",
                "ext_counter[14]",
                "ext_counter[15]",
                "flush_cache",
                "dbg_unit",
                "bootaddr",
                "fetchen",
                "halt",
                "irq_req",
                "clock"
              ]
            },
            "pe3": {
              "vp_class": "cpu/iss/iss",
              "vp_component": "cpu/iss/iss_riscy",
              "bootaddr_offset": "0x80",
              "version": "ri5cyv2",
              "archi": "riscv",
              "implementation": "ri5cy",
              "gv_isa": [
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--itc-external-req",
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--gap8",
                "--itc-external-req"
              ],
              "march": "imcXgap8",
              "isa": "rv32imcXgap8",
              "priv_version": 1.9,
              "perf_counters": true,
              "features": [
                "misaligned",
                "perf"
              ],
              "hal_files": [
                "hal/riscv/riscv_v4.h",
                "hal/riscv/types.h"
              ],
              "archi_files": [
                "archi/riscv/priv_1_9.h",
                "archi/riscv/builtins_v2.h",
                "archi/riscv/builtins_v2_emu.h",
                "archi/riscv/pcer_v1.h"
              ],
              "defines": [
                "ARCHI_CORE_HAS_PULPV2",
                "CORE_PULP_BUILTINS",
                "ARCHI_CORE_HAS_PULPV2",
                "ARCHI_CORE_HAS_CPLX",
                "ARCHI_CORE_HAS_SECURITY"
              ],
              "fetch_enable": null,
              "boot_addr": null,
              "debug_binaries": [],
              "power_models": {
                "clock_gated": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.0000016"
                        }
                      }
                    }
                  }
                },
                "insn": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "pJ",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "2.4854524"
                        },
                        "1.1": {
                          "any": "1.2"
                        }
                      }
                    }
                  }
                },
                "leakage": {
                  "leakage": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.000030"
                        }
                      }
                    }
                  }
                }
              },
              "iss_class": "iss_riscy",
              "cluster_id": 0,
              "core_id": 3,
              "vp_ports": [
                "halt_status",
                "data",
                "fetch",
                "irq_ack",
                "ext_counter[11]",
                "ext_counter[12]",
                "ext_counter[13]",
                "ext_counter[14]",
                "ext_counter[15]",
                "flush_cache",
                "dbg_unit",
                "bootaddr",
                "fetchen",
                "halt",
                "irq_req",
                "clock"
              ]
            },
            "pe4": {
              "vp_class": "cpu/iss/iss",
              "vp_component": "cpu/iss/iss_riscy",
              "bootaddr_offset": "0x80",
              "version": "ri5cyv2",
              "archi": "riscv",
              "implementation": "ri5cy",
              "gv_isa": [
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--itc-external-req",
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--gap8",
                "--itc-external-req"
              ],
              "march": "imcXgap8",
              "isa": "rv32imcXgap8",
              "priv_version": 1.9,
              "perf_counters": true,
              "features": [
                "misaligned",
                "perf"
              ],
              "hal_files": [
                "hal/riscv/riscv_v4.h",
                "hal/riscv/types.h"
              ],
              "archi_files": [
                "archi/riscv/priv_1_9.h",
                "archi/riscv/builtins_v2.h",
                "archi/riscv/builtins_v2_emu.h",
                "archi/riscv/pcer_v1.h"
              ],
              "defines": [
                "ARCHI_CORE_HAS_PULPV2",
                "CORE_PULP_BUILTINS",
                "ARCHI_CORE_HAS_PULPV2",
                "ARCHI_CORE_HAS_CPLX",
                "ARCHI_CORE_HAS_SECURITY"
              ],
              "fetch_enable": null,
              "boot_addr": null,
              "debug_binaries": [],
              "power_models": {
                "clock_gated": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.0000016"
                        }
                      }
                    }
                  }
                },
                "insn": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "pJ",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "2.4854524"
                        },
                        "1.1": {
                          "any": "1.2"
                        }
                      }
                    }
                  }
                },
                "leakage": {
                  "leakage": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.000030"
                        }
                      }
                    }
                  }
                }
              },
              "iss_class": "iss_riscy",
              "cluster_id": 0,
              "core_id": 4,
              "vp_ports": [
                "halt_status",
                "data",
                "fetch",
                "irq_ack",
                "ext_counter[11]",
                "ext_counter[12]",
                "ext_counter[13]",
                "ext_counter[14]",
                "ext_counter[15]",
                "flush_cache",
                "dbg_unit",
                "bootaddr",
                "fetchen",
                "halt",
                "irq_req",
                "clock"
              ]
            },
            "pe5": {
              "vp_class": "cpu/iss/iss",
              "vp_component": "cpu/iss/iss_riscy",
              "bootaddr_offset": "0x80",
              "version": "ri5cyv2",
              "archi": "riscv",
              "implementation": "ri5cy",
              "gv_isa": [
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--itc-external-req",
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--gap8",
                "--itc-external-req"
              ],
              "march": "imcXgap8",
              "isa": "rv32imcXgap8",
              "priv_version": 1.9,
              "perf_counters": true,
              "features": [
                "misaligned",
                "perf"
              ],
              "hal_files": [
                "hal/riscv/riscv_v4.h",
                "hal/riscv/types.h"
              ],
              "archi_files": [
                "archi/riscv/priv_1_9.h",
                "archi/riscv/builtins_v2.h",
                "archi/riscv/builtins_v2_emu.h",
                "archi/riscv/pcer_v1.h"
              ],
              "defines": [
                "ARCHI_CORE_HAS_PULPV2",
                "CORE_PULP_BUILTINS",
                "ARCHI_CORE_HAS_PULPV2",
                "ARCHI_CORE_HAS_CPLX",
                "ARCHI_CORE_HAS_SECURITY"
              ],
              "fetch_enable": null,
              "boot_addr": null,
              "debug_binaries": [],
              "power_models": {
                "clock_gated": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.0000016"
                        }
                      }
                    }
                  }
                },
                "insn": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "pJ",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "2.4854524"
                        },
                        "1.1": {
                          "any": "1.2"
                        }
                      }
                    }
                  }
                },
                "leakage": {
                  "leakage": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.000030"
                        }
                      }
                    }
                  }
                }
              },
              "iss_class": "iss_riscy",
              "cluster_id": 0,
              "core_id": 5,
              "vp_ports": [
                "halt_status",
                "data",
                "fetch",
                "irq_ack",
                "ext_counter[11]",
                "ext_counter[12]",
                "ext_counter[13]",
                "ext_counter[14]",
                "ext_counter[15]",
                "flush_cache",
                "dbg_unit",
                "bootaddr",
                "fetchen",
                "halt",
                "irq_req",
                "clock"
              ]
            },
            "pe6": {
              "vp_class": "cpu/iss/iss",
              "vp_component": "cpu/iss/iss_riscy",
              "bootaddr_offset": "0x80",
              "version": "ri5cyv2",
              "archi": "riscv",
              "implementation": "ri5cy",
              "gv_isa": [
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--itc-external-req",
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--gap8",
                "--itc-external-req"
              ],
              "march": "imcXgap8",
              "isa": "rv32imcXgap8",
              "priv_version": 1.9,
              "perf_counters": true,
              "features": [
                "misaligned",
                "perf"
              ],
              "hal_files": [
                "hal/riscv/riscv_v4.h",
                "hal/riscv/types.h"
              ],
              "archi_files": [
                "archi/riscv/priv_1_9.h",
                "archi/riscv/builtins_v2.h",
                "archi/riscv/builtins_v2_emu.h",
                "archi/riscv/pcer_v1.h"
              ],
              "defines": [
                "ARCHI_CORE_HAS_PULPV2",
                "CORE_PULP_BUILTINS",
                "ARCHI_CORE_HAS_PULPV2",
                "ARCHI_CORE_HAS_CPLX",
                "ARCHI_CORE_HAS_SECURITY"
              ],
              "fetch_enable": null,
              "boot_addr": null,
              "debug_binaries": [],
              "power_models": {
                "clock_gated": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.0000016"
                        }
                      }
                    }
                  }
                },
                "insn": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "pJ",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "2.4854524"
                        },
                        "1.1": {
                          "any": "1.2"
                        }
                      }
                    }
                  }
                },
                "leakage": {
                  "leakage": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.000030"
                        }
                      }
                    }
                  }
                }
              },
              "iss_class": "iss_riscy",
              "cluster_id": 0,
              "core_id": 6,
              "vp_ports": [
                "halt_status",
                "data",
                "fetch",
                "irq_ack",
                "ext_counter[11]",
                "ext_counter[12]",
                "ext_counter[13]",
                "ext_counter[14]",
                "ext_counter[15]",
                "flush_cache",
                "dbg_unit",
                "bootaddr",
                "fetchen",
                "halt",
                "irq_req",
                "clock"
              ]
            },
            "pe7": {
              "vp_class": "cpu/iss/iss",
              "vp_component": "cpu/iss/iss_riscy",
              "bootaddr_offset": "0x80",
              "version": "ri5cyv2",
              "archi": "riscv",
              "implementation": "ri5cy",
              "gv_isa": [
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--itc-external-req",
                "--pulpv2",
                "--pulp",
                "--rv32m",
                "--gap8",
                "--itc-external-req"
              ],
              "march": "imcXgap8",
              "isa": "rv32imcXgap8",
              "priv_version": 1.9,
              "perf_counters": true,
              "features": [
                "misaligned",
                "perf"
              ],
              "hal_files": [
                "hal/riscv/riscv_v4.h",
                "hal/riscv/types.h"
              ],
              "archi_files": [
                "archi/riscv/priv_1_9.h",
                "archi/riscv/builtins_v2.h",
                "archi/riscv/builtins_v2_emu.h",
                "archi/riscv/pcer_v1.h"
              ],
              "defines": [
                "ARCHI_CORE_HAS_PULPV2",
                "CORE_PULP_BUILTINS",
                "ARCHI_CORE_HAS_PULPV2",
                "ARCHI_CORE_HAS_CPLX",
                "ARCHI_CORE_HAS_SECURITY"
              ],
              "fetch_enable": null,
              "boot_addr": null,
              "debug_binaries": [],
              "power_models": {
                "clock_gated": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.0000016"
                        }
                      }
                    }
                  }
                },
                "insn": {
                  "dynamic": {
                    "type": "linear",
                    "unit": "pJ",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "2.4854524"
                        },
                        "1.1": {
                          "any": "1.2"
                        }
                      }
                    }
                  }
                },
                "leakage": {
                  "leakage": {
                    "type": "linear",
                    "unit": "W",
                    "values": {
                      "25": {
                        "1.2": {
                          "any": "0.000030"
                        }
                      }
                    }
                  }
                }
              },
              "iss_class": "iss_riscy",
              "cluster_id": 0,
              "core_id": 7,
              "vp_ports": [
                "halt_status",
                "data",
                "fetch",
                "irq_ack",
                "ext_counter[11]",
                "ext_counter[12]",
                "ext_counter[13]",
                "ext_counter[14]",
                "ext_counter[15]",
                "flush_cache",
                "dbg_unit",
                "bootaddr",
                "fetchen",
                "halt",
                "irq_req",
                "clock"
              ]
            }
          },
          "cluster_clock": {
            "vp_class": "vp/clock_domain",
            "vp_component": "vp.clock_domain_impl",
            "frequency": 50000000,
            "vp_ports": [
              "out",
              "clock_in"
            ]
          },
          "rtc": {
            "version": 1,
            "vp_class": "vendor/dolphin/rtc",
            "vp_component": "vendor/dolphin/rtc_impl",
            "apb_irq_soc_event": 43,
            "irq_soc_event": 44,
            "calendar_time": "0x00124808",
            "calendar_date": "0x00171228",
            "vp_ports": [
              "apb_irq",
              "irq",
              "event",
              "ref_clock",
              "input",
              "clock"
            ]
          },
          "pmu": {
            "version": 1,
            "nb_domains": 2,
            "vp_class": "pulp/pmu/pmu_v1",
            "vp_component": "pulp.pmu.pmu_v1_impl",
            "hal_files": [
              "hal/maestro/pmu_v1.h"
            ],
            "archi_files": [
              "archi/maestro/maestro_v1.h"
            ],
            "regmap": {
              "icu_state": {
                "type": "custom",
                "icu_supply_ext": {
                  "type": "constant",
                  "value": "0x0"
                },
                "icu_supply_ret": {
                  "type": "constant",
                  "value": "0x1"
                },
                "icu_supply_ckoff": {
                  "type": "constant",
                  "value": "0x2"
                },
                "icu_supply_on": {
                  "type": "constant",
                  "value": "0x3"
                },
                "icu_regu_none": {
                  "type": "constant",
                  "value": "0x7"
                },
                "icu_regu_off": {
                  "type": "constant",
                  "value": "0x0"
                },
                "icu_regu_rv": {
                  "type": "constant",
                  "value": "0x1"
                },
                "icu_regu_lv": {
                  "type": "constant",
                  "value": "0x2"
                },
                "icu_regu_mv": {
                  "type": "constant",
                  "value": "0x3"
                },
                "icu_regu_nv": {
                  "type": "constant",
                  "value": "0x4"
                },
                "icu_clk_fnone": {
                  "type": "constant",
                  "value": "0x7"
                },
                "icu_clk_foff": {
                  "type": "constant",
                  "value": "0x0"
                },
                "icu_clk_lf": {
                  "type": "constant",
                  "value": "0x1"
                },
                "icu_clk_mf": {
                  "type": "constant",
                  "value": "0x2"
                },
                "icu_clk_nf": {
                  "type": "constant",
                  "value": "0x3"
                }
              },
              "dlc_pctrl": {
                "desc": "PICL control register",
                "help": "The DLC_PCTRL register is the control register to issue transaction on PICL bus",
                "type": "register",
                "offset": "0x00",
                "width": 32,
                "reset": "0x00000000",
                "content": {
                  "start": {
                    "bit": 0,
                    "width": 1,
                    "access": "R/W",
                    "name": "PICL access start.",
                    "desc": "Start of PICL access sequence. A rising edge of the start bit starts a PICL picl transfer. Start bit remains high until the end of the sequence, which means that no new access can be performed if an access is on going."
                  },
                  "paddr": {
                    "bit": 1,
                    "width": 14,
                    "access": "R/W",
                    "name": "PICL access address.",
                    "desc": "Address of the transfer on the PICL bus."
                  },
                  "dir": {
                    "bit": 15,
                    "width": 1,
                    "access": "R/W",
                    "name": "PICL access direction.",
                    "desc": "Direction of the transfer on the PICL bus. dir = 1 means read operation, dir = 0 means write operation."
                  },
                  "pwdata": {
                    "bit": 16,
                    "width": 16,
                    "access": "R/W",
                    "name": "PICL write access data.",
                    "desc": "Data to write on the PICL bus."
                  }
                }
              },
              "prdata": {
                "desc": "PICL data read register",
                "help": "The DLC_PRDATA register contains the read data on PICL bus at the end of the PICL transaction.",
                "type": "register",
                "offset": "0x04",
                "width": 32,
                "reset": "0x00000000",
                "content": {
                  "prdata": {
                    "bit": 0,
                    "width": 8,
                    "access": "R",
                    "name": "PICL read access data.",
                    "desc": "Data read on the PICL bus. This data is valid after a PICL read operation, when the picl_busy bit of the DLC_SR register becomes low."
                  }
                }
              },
              "dlc_sr": {
                "desc": "Status register",
                "help": "The DLC_SR registers returns the status of PICL and SCU operations.",
                "type": "register",
                "offset": "0x08",
                "width": 32,
                "reset": "0x00000000",
                "content": {
                  "picl_busy": {
                    "bit": 0,
                    "width": 1,
                    "access": "R",
                    "name": "SCU busy.",
                    "desc": "This bit is set to 1 if when a SCU sequence is on going. This bit is cleared at the end of the sequence."
                  },
                  "scu_busy": {
                    "bit": 1,
                    "width": 1,
                    "access": "R",
                    "name": "SCU busy.",
                    "desc": "This bit is set to 1 if when a SCU sequence is on going. This bit is cleared at the end of the sequence."
                  }
                }
              },
              "dlc_imr": {
                "desc": "Interrupt Mask register",
                "help": "The DLC_IMR register contains the mask of the MSP interrupt signals. The interrupt mask register disable or enable the interruption but does not disable the registration of the event in the IFR register. When mask is set the irq is disable. When mask is clear irq is enable.",
                "type": "register",
                "offset": "0x0C",
                "width": 32,
                "reset": "0x00000000",
                "content": {
                  "icu_ok_mask": {
                    "bit": 0,
                    "width": 1,
                    "access": "R/W",
                    "name": "Mask of icu_ok interrupt",
                    "desc": "A read return the current value of the mask. Writing 1 set the mask, writing 0 clears the mask."
                  },
                  "icu_delayed_mask": {
                    "bit": 1,
                    "width": 1,
                    "access": "R/W",
                    "name": "Mask of icu_delayed interrupt.",
                    "desc": "A read return the current value of the mask. Writing 1 set the mask, writing 0 clears the mask."
                  },
                  "icu_mode_changed_mask": {
                    "bit": 2,
                    "width": 1,
                    "access": "R/W",
                    "name": "Mask of icu_mode_changed interrupt.",
                    "desc": "A read return the current value of the mask. Writing 1 set the mask, writing 0 clears the mask."
                  },
                  "picl_ok_mask": {
                    "bit": 3,
                    "width": 1,
                    "access": "R/W",
                    "name": "Mask of picl_ok interrupt.",
                    "desc": "A read return the current value of the mask. Writing 1 set the mask, writing 0 clears the mask."
                  },
                  "scu_ok_mask": {
                    "bit": 4,
                    "width": 1,
                    "access": "R/W",
                    "name": "Mask of scu_ok interrupt.",
                    "desc": "A read return the current value of the mask. Writing 1 set the mask, writing 0 clears the mask."
                  }
                }
              },
              "dlc_ifr": {
                "desc": "Interrupt flag register",
                "help": "The DLC_IFR register contains the flags of the MSP interrupts.",
                "type": "register",
                "offset": "0x10",
                "width": 32,
                "reset": "0x00000000",
                "content": {
                  "icu_ok_flag": {
                    "bit": 0,
                    "width": 1,
                    "access": "R",
                    "name": "Flag of scu_ok interrupt.",
                    "desc": "Set to 1 when at least one of the bit of the DLC_IOIFR register is set. Cleared when reading DCL_IOIFR register."
                  },
                  "icu_delayed_flag": {
                    "bit": 1,
                    "width": 1,
                    "access": "R",
                    "name": "Flag of picl_ok interrupt.",
                    "desc": "Set to 1 when at least one of the bit of the DLC_IDIFR register is set. Cleared when reading DCL_IDIFR register."
                  },
                  "icu_mode_changed_flag": {
                    "bit": 2,
                    "width": 1,
                    "access": "R",
                    "name": "Flag of icu_mode_changed interrupt.",
                    "desc": "Set to 1 when at least one of the bit of the DLC_IMCIFR register is set. Cleared when reading DCL_IMCIFR register."
                  },
                  "picl_ok_flag": {
                    "bit": 3,
                    "width": 1,
                    "access": "R",
                    "name": "Flag of icu_delayed interrupt.",
                    "desc": "Set to 1 when PICL transfer is finish. Cleared writting 1 to the bit 3 of the DLC_IFR register."
                  },
                  "scu_ok_flag": {
                    "bit": 4,
                    "width": 1,
                    "access": "R",
                    "name": "Flag of scu_ok interrupt.",
                    "desc": "Set to 1 when SCU sequence is finished. Cleared when writting 1 to the bit 4 of the DLC_IFR register."
                  }
                }
              },
              "dlc_ioifr": {
                "desc": "icu_ok interrupt flag register",
                "help": "The DLC_IOIFR register contains the flags of the icu_ok interrupt of the MSP.",
                "type": "register",
                "offset": "0x14",
                "width": 32,
                "reset": "0x00000000",
                "content": {
                  "icu_ok_flags": {
                    "bit": 1,
                    "width": 31,
                    "access": "R",
                    "name": "Flags of the icu_ok interrupts.",
                    "desc": "Bit <x> set to 1 when a rising edge of the signal i_icu_ok_irq[ <x> ] occurs and MSP is requester of the change mode order of the ICU <x>. A read this register clears the register and the bit icu_ok_flag of the DLC_IFR register."
                  }
                }
              },
              "dlc_idifr": {
                "desc": "icu_delayed interrupt flag register",
                "type": "register",
                "offset": "0x18",
                "width": 32,
                "reset": "0x00000000",
                "content": {
                  "icu_delayed_flags": {
                    "bit": 1,
                    "width": 31,
                    "access": "R",
                    "name": "Flags of the icu_delayed interrupts.",
                    "desc": "Bit <x> set to 1 when a rising edge of the signal i_icu_delayed_irq[ <x> ] occurs and MSP is requester of the change mode order of the ICU <x>. A read this register clears the register and the bit icu_delayed_flag of the DLC_IFR register."
                  }
                }
              },
              "dlc_imcifr": {
                "desc": "icu_mode_changed interrupt flags register",
                "type": "register",
                "offset": "0x1C",
                "width": 32,
                "reset": "0x00000000",
                "content": {
                  "icu_mode_changed_flags": {
                    "bit": 1,
                    "width": 31,
                    "access": "R",
                    "name": "Flags of the icu_mode_changed interrupts.",
                    "desc": "Bit <x> set to 1 when a rising edge of the signal i_icu_mode_changed_irq[ <x> ] occurs. A read this register clears the register and the bit icu_mode_changed_flag of the DLC_IFR register."
                  }
                }
              },
              "wiu": {
                "type": "group",
                "offset": "0x00",
                "content": {
                  "wiu_ispmr_0": {
                    "desc": "Interrupt Sequence Processing Mask registers",
                    "help": "The WIU_ISPMR registers are the flag registers of the i_irq interrupts. There are <n> WIU_ISPMR registers, one per 8 interrupts. For WIU with 8 or less interrupt <n> take the value 0. For WIU with 8 to 16 interrupts, <n> will take values from 0 to 1. The bit <x> of the WIU_ISPMR is associated to the interrupt signal i_irq [ 8 * <n> + <x>]",
                    "type": "register",
                    "offset": "0x00",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "mask_modechg_en_irq": {
                        "bit": 0,
                        "width": 8,
                        "access": "R/W",
                        "name": "Mask value.",
                        "desc": "A read of this register return the value of the mask. Writing 1 to the bit <x>, set the mask of the interrupt i_irq[ <x> ]"
                      }
                    }
                  },
                  "wiu_ispmr_1": {
                    "desc": "Interrupt Sequence Processing Mask registers",
                    "help": "The WIU_ISPMR registers are the flag registers of the i_irq interrupts. There are <n> WIU_ISPMR registers, one per 8 interrupts. For WIU with 8 or less interrupt <n> take the value 0. For WIU with 8 to 16 interrupts, <n> will take values from 0 to 1. The bit <x> of the WIU_ISPMR is associated to the interrupt signal i_irq [ 8 * <n> + <x>]",
                    "type": "register",
                    "offset": "0x01",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "mask_modechg_en_irq": {
                        "bit": 0,
                        "width": 8,
                        "access": "R/W",
                        "name": "Mask value.",
                        "desc": "A read of this register return the value of the mask. Writing 1 to the bit <x>, set the mask of the interrupt i_irq[ <x> ]"
                      }
                    }
                  },
                  "wiu_ifr_0": {
                    "desc": "Interrupt Flag register",
                    "help": "The WIU_IFR registers give the status of all the pending interrupts and enables to force interrupts as pending by setting the corresponding bits. There are <n> WIU_IFR registers, one per 8 interrupts. For WIU with 8 or less interrupt <n> take the value 0. For WIU with 8 to 16 interrupts, <n> will take values from 0 to 1. The bit <x> of the WIU_IFR is associated to the interrupt signal i_irq [ 8 * <n> + x] When a rising edge of an interrupt signal is detected the corresponding bit of the Interrupt Flag Register (WIU_IFR) is set to 1. The bit is cleared when the associated SCU sequence is finished (i_scu_busy signal becomes low) and when the associated interrupt is unmasked by writing the ISPM register.",
                    "type": "register",
                    "offset": "0x02",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "flag_irq": {
                        "bit": 0,
                        "width": 8,
                        "access": "R/W",
                        "name": "Interrupt flag.",
                        "desc": "Bit <x> is set when a rising egde of the signal i_irq [ 8 * <n> + <x> ] occurs or when writing the bit <x> to 1. Bit <x> is cleared when the associated SCU sequence is finished or when writing 0 to the bit <x> of the WIU_ISPMR_m register or when writing the bit <x> to 0."
                      }
                    }
                  },
                  "wiu_ifr_1": {
                    "desc": "Interrupt Flag register",
                    "help": "The WIU_IFR registers give the status of all the pending interrupts and enables to force interrupts as pending by setting the corresponding bits. There are <n> WIU_IFR registers, one per 8 interrupts. For WIU with 8 or less interrupt <n> take the value 0. For WIU with 8 to 16 interrupts, <n> will take values from 0 to 1. The bit <x> of the WIU_IFR is associated to the interrupt signal i_irq [ 8 * <n> + x] When a rising edge of an interrupt signal is detected the corresponding bit of the Interrupt Flag Register (WIU_IFR) is set to 1. The bit is cleared when the associated SCU sequence is finished (i_scu_busy signal becomes low) and when the associated interrupt is unmasked by writing the ISPM register.",
                    "type": "register",
                    "offset": "0x03",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "flag_irq": {
                        "bit": 0,
                        "width": 8,
                        "access": "R/W",
                        "name": "Interrupt flag.",
                        "desc": "Bit <x> is set when a rising egde of the signal i_irq [ 8 * <n> + <x> ] occurs or when writing the bit <x> to 1. Bit <x> is cleared when the associated SCU sequence is finished or when writing 0 to the bit <x> of the WIU_ISPMR_m register or when writing the bit <x> to 0."
                      }
                    }
                  },
                  "wiu_icr_0": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x04",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_0": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_1": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x05",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_1": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_2": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x06",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_2": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_3": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x07",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_3": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_4": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x08",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_4": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_5": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x09",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_5": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_6": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x0A",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_6": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_7": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x0B",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_7": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_8": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x0C",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_8": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_9": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x0D",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_9": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_10": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x0E",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_10": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_11": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x0F",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_11": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_12": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x10",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_12": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_13": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x11",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_13": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_14": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x12",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_14": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  },
                  "wiu_icr_15": {
                    "desc": "Interrupt Control registers",
                    "help": "The WIU_ICR registers enable to specify the sequence which will be executed when the interrupt i_irq[ n ] become active. There are <n> WIU_ICR registers, one per interrrupt source. <n> will take values from 0 to NB_IRQ.",
                    "type": "register",
                    "offset": "0x13",
                    "width": 8,
                    "reset": "0x00",
                    "content": {
                      "seq_sel_irq_15": {
                        "bit": 0,
                        "width": 5,
                        "access": "R/W",
                        "name": "Interrupt sequence.",
                        "desc": "Defines the sequence which has to be executed when the interrupt i_irq[ <p> ] becomes active"
                      }
                    }
                  }
                }
              },
              "icu": {
                "type": "template",
                "icu_ctrl": {
                  "desc": "ICU control register",
                  "help": "ICU_CR is used to send a change-mode request to the ICU.",
                  "type": "register",
                  "offset": "0x00",
                  "width": 8,
                  "reset": "0x00",
                  "content": {
                    "icu_ctrl": {
                      "bit": 0,
                      "width": 4,
                      "access": "R/W",
                      "name": "ICU change mode request",
                      "desc": "When a new mode corresponding to one of sixteen mode of the island mode table of the ICU is written as mode transition sequence is started to reach the written mode."
                    }
                  }
                },
                "icu_mode": {
                  "desc": "ICU mode register",
                  "help": "ICU_MR indicates if the current mode of the ICU is a defined mode of the table 2.5 on page 22. If yes, it returns the value of the mode.",
                  "type": "register",
                  "offset": "0x01",
                  "width": 8,
                  "reset": "0x1f",
                  "content": {
                    "icu_mode": {
                      "bit": 0,
                      "width": 4,
                      "access": "R",
                      "name": "ICU mode",
                      "desc": "Returns the current mode of the ICU when icu_mode_defined is low."
                    },
                    "icu_mode_defined": {
                      "bit": 4,
                      "width": 1,
                      "access": "R",
                      "name": "ICU mode defined",
                      "desc": "When high, indicates that the current mode of the ICU is not defined in the mode table of the ICU When low, the value of the current mode is given by the icu_mode bits"
                    }
                  }
                },
                "island_mode": {
                  "desc": "Island mode register",
                  "help": "ICU_ISMR returns the current mode of the Island.",
                  "type": "register",
                  "offset": "0x02",
                  "width": 8,
                  "reset": "0x00",
                  "content": {
                    "isl_mode": {
                      "bit": 0,
                      "width": 2,
                      "access": "R",
                      "name": "Island mode",
                      "desc": "Mode of the island."
                    }
                  }
                },
                "dmu_mode": {
                  "desc": "DMU mode register 0",
                  "help": "ICU_DMR returns the current mode of the DMU.",
                  "type": "register",
                  "offset": "0x03",
                  "width": 8,
                  "reset": "0x00",
                  "content": {
                    "isl_mode": {
                      "bit": 0,
                      "width": 2,
                      "access": "R",
                      "name": "DMU mode",
                      "desc": "Mode of the DMU 0."
                    }
                  }
                }
              },
              "sequences": {
                "type": "custom",
                "boot": {
                  "type": "constant",
                  "value": "0x01",
                  "id": -1,
                  "commands": [
                    [
                      "2",
                      "0",
                      "0x00",
                      "SOC active NV"
                    ],
                    [
                      "3",
                      "0",
                      "0x02",
                      "Cluster deep sleep"
                    ],
                    [
                      "0",
                      "0",
                      "0xFF",
                      "Disable IRQ 0-7"
                    ],
                    [
                      "0",
                      "1",
                      "0xC0",
                      "Enable IRQ 0-5"
                    ]
                  ]
                },
                "soc_active_nv": {
                  "type": "constant",
                  "value": "0x01",
                  "id": 0,
                  "commands": [
                    [
                      "2",
                      "0",
                      "0x00",
                      "SOC active NV"
                    ],
                    [
                      "3",
                      "0",
                      "0x02",
                      "Cluster deep sleep"
                    ],
                    [
                      "0",
                      "0",
                      "0xFF",
                      "Disable IRQ 0-7"
                    ],
                    [
                      "0",
                      "1",
                      "0xC0",
                      "Enable IRQ 0-5"
                    ]
                  ]
                },
                "soc_active_lv": {
                  "type": "constant",
                  "value": "0x01",
                  "id": 1,
                  "commands": [
                    [
                      "2",
                      "0",
                      "0x01",
                      "SOC active LV"
                    ],
                    [
                      "3",
                      "0",
                      "0x02",
                      "Cluster deep sleep"
                    ],
                    [
                      "0",
                      "0",
                      "0xFF",
                      "Disable IRQ 0-7"
                    ],
                    [
                      "0",
                      "1",
                      "0xC0",
                      "Enable IRQ 0-5"
                    ]
                  ]
                },
                "soc_cluster_active_nv": {
                  "type": "constant",
                  "value": "0x01",
                  "id": 2,
                  "commands": [
                    [
                      "2",
                      "0",
                      "0x00",
                      "SOC active NV"
                    ],
                    [
                      "3",
                      "0",
                      "0x00",
                      "Cluster active NV"
                    ],
                    [
                      "0",
                      "0",
                      "0xFF",
                      "Disable IRQ 0-7"
                    ],
                    [
                      "0",
                      "1",
                      "0xC0",
                      "Enable IRQ 0-5"
                    ]
                  ]
                },
                "soc_cluster_active_lv": {
                  "type": "constant",
                  "value": "0x01",
                  "id": 3,
                  "commands": [
                    [
                      "2",
                      "0",
                      "0x01",
                      "SOC active LV"
                    ],
                    [
                      "3",
                      "0",
                      "0x01",
                      "Cluster active LV"
                    ],
                    [
                      "0",
                      "0",
                      "0xFF",
                      "Disable IRQ 0-7"
                    ],
                    [
                      "0",
                      "1",
                      "0xC0",
                      "Enable IRQ 0-5"
                    ]
                  ]
                },
                "deep_sleep": {
                  "type": "constant",
                  "value": "0x01",
                  "id": 4,
                  "commands": [
                    [
                      "3",
                      "0",
                      "0x02",
                      "Cluster deep sleep"
                    ],
                    [
                      "2",
                      "0",
                      "0x02",
                      "SOC deep sleep"
                    ],
                    [
                      "0",
                      "0",
                      "0x00",
                      "Enable IRQ 0-7"
                    ],
                    [
                      "0",
                      "1",
                      "0xFF",
                      "Disable IRQ 0-7"
                    ]
                  ]
                },
                "deep_sleep_retentive": {
                  "type": "constant",
                  "value": "0x01",
                  "id": 5,
                  "commands": [
                    [
                      "3",
                      "0",
                      "0x02",
                      "Cluster deep sleep"
                    ],
                    [
                      "2",
                      "0",
                      "0x03",
                      "SOC retentive"
                    ],
                    [
                      "0",
                      "0",
                      "0x00",
                      "Enable IRQ 0-7"
                    ],
                    [
                      "0",
                      "1",
                      "0xFF",
                      "Disable IRQ 0-7"
                    ]
                  ]
                }
              },
              "icu0": {
                "type": "group",
                "offset": "0x02"
              },
              "icu1": {
                "type": "group",
                "offset": "0x03"
              },
              "dmu0": {
                "type": "group",
                "offset": "0x04"
              }
            },
            "nb_interrupts": 16,
            "nb_icu": 2,
            "icu_states": [
              [
                3,
                0,
                4
              ],
              [
                3,
                0,
                2
              ],
              [
                0,
                0,
                1
              ],
              [
                1,
                0,
                1
              ],
              [
                3,
                0,
                4
              ],
              [
                3,
                0,
                2
              ]
            ],
            "icrs": [
              0,
              0,
              1,
              1,
              2,
              2,
              3,
              3,
              4,
              5,
              0,
              1,
              2,
              3,
              0,
              0
            ],
            "vp_ports": [
              "icu0_reset",
              "event",
              "input",
              "clock",
              "wakeup",
              "wakeup_seq",
              "ref_clock"
            ]
          }
        },
        "dpi_clock": {
          "vp_class": "vp/clock_domain",
          "vp_component": "vp.clock_domain_impl",
          "frequency": 50000000,
          "vp_ports": [
            "out"
          ]
        },
        "pulp_chip": {
          "gap8_revc": {}
        },
        "dpi": {
          "vp_class": "utils/dpi_wrapper",
          "vp_component": "utils.dpi_wrapper_impl",
          "vp_ports": [
            "chip_reset",
            "jtag0",
            "cpi0",
            "clock",
            "uart0",
            "i2c1",
            "spim1_cs0_data",
            "spim1_cs0",
            "gpio19"
          ]
        },
        "ref_clock_clock": {
          "vp_class": "vp/clock_domain",
          "vp_component": "vp.clock_domain_impl",
          "frequency": 65536,
          "vp_ports": [
            "out"
          ]
        },
        "ref_clock": {
          "vp_class": "utils/clock",
          "vp_component": "utils.clock_impl",
          "vp_ports": [
            "clock_sync",
            "clock"
          ]
        },
        "uart": {
          "vp_ports": [
            "uart"
          ],
          "name": "UART_tb",
          "doc_rst": "devices/uart_tb.rst",
          "description": "UART model, can be used to dump uart TX to file or terminal",
          "platforms": [
            "gvsoc",
            "rtl"
          ],
          "generator": "generators/v1/devices/uart_tb_gen",
          "interface": "uart0",
          "type": "dpi",
          "module": "uart.so",
          "verbose": false,
          "baudrate": 115200,
          "loopback": false,
          "stdout": true,
          "stdin": false,
          "telnet": false,
          "tx_file": "tx_uart.log"
        },
        "jtag_proxy": {
          "vp_ports": [
            "jtag",
            "ctrl"
          ],
          "type": "dpi",
          "active": false,
          "module": "jtag_proxy.so",
          "verbose": false,
          "port": 37539
        },
        "flash": {
          "vp_ports": [
            "clock",
            "input",
            "cs"
          ],
          "name": "Hyperflash",
          "datasheet": {
            "type": "hyper",
            "size": "64MB",
            "block-size": "256KB"
          },
          "models": {
            "rtl": {
              "stimuli": {
                "format": "slm",
                "file": "slm_files/flash_stim.slm"
              }
            }
          },
          "content": {
            "partitions": {
              "readfs": {
                "type": "readfs",
                "enabled": false,
                "files": [],
                "image": "/home/osboxes/test-C/greenwaves-interview/test/src/exo4/BUILD/GAP8_V3/GCC_RISCV_FREERTOS/target.board.devices.flash.readfs.img"
              },
              "hostfs": {
                "type": "hostfs",
                "files": [],
                "image": "/home/osboxes/test-C/greenwaves-interview/test/src/exo4/BUILD/GAP8_V3/GCC_RISCV_FREERTOS/target.board.devices.flash.hostfs.img"
              },
              "lfs": {
                "type": "lfs",
                "enabled": false,
                "root_dir": null,
                "image": "/home/osboxes/test-C/greenwaves-interview/test/src/exo4/BUILD/GAP8_V3/GCC_RISCV_FREERTOS/target.board.devices.flash.lfs.img"
              }
            },
            "boot-loader": "/home/osboxes/test-C/greenwaves-interview/test/src/exo4/BUILD/GAP8_V3/GCC_RISCV_FREERTOS/test",
            "gen_image": true,
            "image": "/home/osboxes/test-C/greenwaves-interview/test/src/exo4/BUILD/GAP8_V3/GCC_RISCV_FREERTOS/target.board.devices.flash.img",
            "flash": true
          },
          "doc_rst": "devices/hyperflash.rst",
          "description": "Hyperflash model",
          "platforms": [
            "gvsoc"
          ],
          "generator": "generators/v1/devices/hyper_gen",
          "interface": "hyper0",
          "vp_class": "devices/hyperbus/hyperflash",
          "vp_component": "devices.hyperbus.hyperflash_impl",
          "writeback": true,
          "size": "0x04000000",
          "fs": {
            "files": [],
            "encrypt": false,
            "aes_key": null,
            "aes_iv": null
          },
          "cs": 1
        },
        "flash_clock": {
          "vp_class": "vp/clock_domain",
          "vp_component": "vp.clock_domain_impl",
          "frequency": 50000000,
          "vp_ports": [
            "out"
          ]
        },
        "ram": {
          "vp_ports": [
            "clock",
            "input",
            "cs"
          ],
          "name": "Hyperram",
          "doc_rst": "devices/hyperram.rst",
          "description": "Hyperram model",
          "platforms": [
            "gvsoc"
          ],
          "generator": "generators/v1/devices/hyper_gen",
          "interface": "hyper0",
          "vp_class": "devices/hyperbus/hyperram",
          "vp_component": "devices.hyperbus.hyperram_impl",
          "size": "0x00800000",
          "cs": 0
        },
        "ram_clock": {
          "vp_class": "vp/clock_domain",
          "vp_component": "vp.clock_domain_impl",
          "frequency": 50000000,
          "vp_ports": [
            "out"
          ]
        },
        "camera": {
          "name": "Camera",
          "vp_ports": [
            "cpi",
            "i2c"
          ],
          "doc_rst": "devices/camera.rst",
          "description": "Camera model",
          "platforms": [
            "gvsoc",
            "rtl"
          ],
          "generator": "generators/v1/devices/camera_gen",
          "interface": "cpi0",
          "ctrl_interface": "i2c1",
          "cs": 0,
          "type": "dpi",
          "model": "himax",
          "module": "camera.so",
          "color-mode": "gray"
        },
        "display": {
          "name": "display",
          "vp_ports": [
            "input",
            "gpio"
          ],
          "type": "dpi",
          "module": "lcd_ili9341.so",
          "verbose": false
        }
      }
    },
    "runner": {
      "help": {
        "py-stack": "Display the full python stack in case an exception is caught"
      },
      "binaries": [],
      "verbose": false,
      "boot-mode": "rom_hyper",
      "use_tb_comps": false,
      "use_external_tb": false,
      "active_tb_comps": [],
      "py-stack": false,
      "boot_from_flash": true,
      "flash_type": "hyper",
      "flash_slm_file": "slm_files/flash_stim.slm",
      "rtl_simulator": "vsim",
      "simulator": "vsim",
      "aes_key": "12345678275689075642768987654345",
      "aes_iv": "0987654323456789",
      "default_profile": "hyper",
      "vsim_chip": "gap8_revc"
    },
    "rt": {
      "version": "bench",
      "type": "pulp-rt",
      "mode": "rt",
      "stack_size": 2048,
      "cl_master_stack_size": 1024,
      "cl_slave_stack_size": 1024,
      "io": true,
      "warnings": true,
      "werror": true,
      "assert": false,
      "trace": false,
      "trace-level": "trace",
      "traces": "all",
      "libc": false,
      "no-rt": false,
      "no-link-script": false,
      "no-crt0": false,
      "cluster-start": false,
      "openmp": true,
      "openmp-rt": "pulp-rt",
      "iodev": "default",
      "user-sections": [],
      "cflags": [],
      "bsp": true,
      "iodevs": {
        "default": {
          "value": "0"
        },
        "uart": {
          "value": "1",
          "channel": "0",
          "baudrate": "115200"
        }
      }
    }
  }
}